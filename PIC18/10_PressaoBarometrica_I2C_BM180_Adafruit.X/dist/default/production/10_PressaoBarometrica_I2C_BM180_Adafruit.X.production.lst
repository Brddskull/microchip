

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Apr  1 18:58:30 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F2525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40  0000                     
    41                           	psect	mediumconst
    42  00BE50                     __pmediumconst:
    43                           	opt stack 0
    44  00BE50  00                 	db	0
    45  00BE51                     _dpowers:
    46                           	opt stack 0
    47  00BE51  0001               	dw	1
    48  00BE53  000A               	dw	10
    49  00BE55  0064               	dw	100
    50  00BE57  03E8               	dw	1000
    51  00BE59  2710               	dw	10000
    52  00BE5B                     __end_of_dpowers:
    53                           	opt stack 0
    54  00BE5B                     _hexpowers:
    55                           	opt stack 0
    56  00BE5B  0001               	dw	1
    57  00BE5D  0010               	dw	16
    58  00BE5F  0100               	dw	256
    59  00BE61  1000               	dw	4096
    60  00BE63                     __end_of_hexpowers:
    61                           	opt stack 0
    62  0000                     _ADCON1	set	4033
    63  0000                     _PIE1	set	3997
    64  0000                     _PIE1bits	set	3997
    65  0000                     _PIR1bits	set	3998
    66  0000                     _PORTCbits	set	3970
    67  0000                     _RCSTA	set	4011
    68  0000                     _RCSTAbits	set	4011
    69  0000                     _SPBRG	set	4015
    70  0000                     _SPBRGH	set	4016
    71  0000                     _SSPADD	set	4040
    72  0000                     _SSPBUF	set	4041
    73  0000                     _SSPCON1	set	4038
    74  0000                     _SSPCON1bits	set	4038
    75  0000                     _SSPCON2	set	4037
    76  0000                     _SSPCON2bits	set	4037
    77  0000                     _SSPSTAT	set	4039
    78  0000                     _SSPSTATbits	set	4039
    79  0000                     _TRISCbits	set	3988
    80  0000                     _TXREG	set	4013
    81  0000                     _TXSTA	set	4012
    82  0000                     _TXSTAbits	set	4012
    83  0000                     _LATC3	set	31835
    84  0000                     _LATC4	set	31836
    85  0000                     _TRISC0	set	31904
    86  0000                     _TRISC1	set	31905
    87  0000                     _TRISC2	set	31906
    88  0000                     _TRISC6	set	31910
    89  00BE63                     __stringdata:
    90                           	opt stack 0
    91  00BE63                     STR_3:
    92  00BE63  5F                 	db	95	;'_'
    93  00BE64  54                 	db	84	;'T'
    94  00BE65  65                 	db	101	;'e'
    95  00BE66  6D                 	db	109	;'m'
    96  00BE67  70                 	db	112	;'p'
    97  00BE68  65                 	db	101	;'e'
    98  00BE69  72                 	db	114	;'r'
    99  00BE6A  61                 	db	97	;'a'
   100  00BE6B  74                 	db	116	;'t'
   101  00BE6C  75                 	db	117	;'u'
   102  00BE6D  72                 	db	114	;'r'
   103  00BE6E  61                 	db	97	;'a'
   104  00BE6F  20                 	db	32
   105  00BE70  25                 	db	37
   106  00BE71  32                 	db	50	;'2'
   107  00BE72  2E                 	db	46
   108  00BE73  31                 	db	49	;'1'
   109  00BE74  64                 	db	100	;'d'
   110  00BE75  20                 	db	32
   111  00BE76  63                 	db	99	;'c'
   112  00BE77  2C                 	db	44
   113  00BE78  20                 	db	32
   114  00BE79  50                 	db	80	;'P'
   115  00BE7A  72                 	db	114	;'r'
   116  00BE7B  65                 	db	101	;'e'
   117  00BE7C  73                 	db	115	;'s'
   118  00BE7D  73                 	db	115	;'s'
   119  00BE7E  61                 	db	97	;'a'
   120  00BE7F  6F                 	db	111	;'o'
   121  00BE80  20                 	db	32
   122  00BE81  25                 	db	37
   123  00BE82  64                 	db	100	;'d'
   124  00BE83  20                 	db	32
   125  00BE84  50                 	db	80	;'P'
   126  00BE85  61                 	db	97	;'a'
   127  00BE86  20                 	db	32
   128  00BE87  0D                 	db	13
   129  00BE88  0A                 	db	10
   130  00BE89  00                 	db	0
   131  00BE8A                     STR_2:
   132  00BE8A  5F                 	db	95	;'_'
   133  00BE8B  5F                 	db	95	;'_'
   134  00BE8C  43                 	db	67	;'C'
   135  00BE8D  61                 	db	97	;'a'
   136  00BE8E  6C                 	db	108	;'l'
   137  00BE8F  69                 	db	105	;'i'
   138  00BE90  62                 	db	98	;'b'
   139  00BE91  72                 	db	114	;'r'
   140  00BE92  61                 	db	97	;'a'
   141  00BE93  67                 	db	103	;'g'
   142  00BE94  65                 	db	101	;'e'
   143  00BE95  6D                 	db	109	;'m'
   144  00BE96  20                 	db	32
   145  00BE97  4F                 	db	79	;'O'
   146  00BE98  4B                 	db	75	;'K'
   147  00BE99  2C                 	db	44
   148  00BE9A  20                 	db	32
   149  00BE9B  69                 	db	105	;'i'
   150  00BE9C  6E                 	db	110	;'n'
   151  00BE9D  69                 	db	105	;'i'
   152  00BE9E  63                 	db	99	;'c'
   153  00BE9F  69                 	db	105	;'i'
   154  00BEA0  61                 	db	97	;'a'
   155  00BEA1  6E                 	db	110	;'n'
   156  00BEA2  64                 	db	100	;'d'
   157  00BEA3  6F                 	db	111	;'o'
   158  00BEA4  2E                 	db	46
   159  00BEA5  2E                 	db	46
   160  00BEA6  2E                 	db	46
   161  00BEA7  0D                 	db	13
   162  00BEA8  0A                 	db	10
   163  00BEA9  00                 	db	0
   164  00BEAA                     STR_5:
   165  00BEAA  20                 	db	32
   166  00BEAB  20                 	db	32
   167  00BEAC  20                 	db	32
   168  00BEAD  20                 	db	32
   169  00BEAE  28                 	db	40
   170  00BEAF  20                 	db	32
   171  00BEB0  78                 	db	120	;'x'
   172  00BEB1  31                 	db	49	;'1'
   173  00BEB2  3D                 	db	61	;'='
   174  00BEB3  25                 	db	37
   175  00BEB4  64                 	db	100	;'d'
   176  00BEB5  20                 	db	32
   177  00BEB6  78                 	db	120	;'x'
   178  00BEB7  32                 	db	50	;'2'
   179  00BEB8  3D                 	db	61	;'='
   180  00BEB9  25                 	db	37
   181  00BEBA  64                 	db	100	;'d'
   182  00BEBB  20                 	db	32
   183  00BEBC  78                 	db	120	;'x'
   184  00BEBD  33                 	db	51	;'3'
   185  00BEBE  3D                 	db	61	;'='
   186  00BEBF  25                 	db	37
   187  00BEC0  64                 	db	100	;'d'
   188  00BEC1  20                 	db	32
   189  00BEC2  29                 	db	41
   190  00BEC3  0D                 	db	13
   191  00BEC4  0A                 	db	10
   192  00BEC5  00                 	db	0
   193  00BEC6                     STR_8:
   194  00BEC6  20                 	db	32
   195  00BEC7  20                 	db	32
   196  00BEC8  20                 	db	32
   197  00BEC9  20                 	db	32
   198  00BECA  28                 	db	40
   199  00BECB  20                 	db	32
   200  00BECC  62                 	db	98	;'b'
   201  00BECD  34                 	db	52	;'4'
   202  00BECE  3D                 	db	61	;'='
   203  00BECF  25                 	db	37
   204  00BED0  64                 	db	100	;'d'
   205  00BED1  20                 	db	32
   206  00BED2  62                 	db	98	;'b'
   207  00BED3  37                 	db	55	;'7'
   208  00BED4  3D                 	db	61	;'='
   209  00BED5  25                 	db	37
   210  00BED6  64                 	db	100	;'d'
   211  00BED7  20                 	db	32
   212  00BED8  75                 	db	117	;'u'
   213  00BED9  70                 	db	112	;'p'
   214  00BEDA  3D                 	db	61	;'='
   215  00BEDB  25                 	db	37
   216  00BEDC  64                 	db	100	;'d'
   217  00BEDD  20                 	db	32
   218  00BEDE  29                 	db	41
   219  00BEDF  0D                 	db	13
   220  00BEE0  0A                 	db	10
   221  00BEE1  00                 	db	0
   222  00BEE2                     STR_1:
   223  00BEE2  5F                 	db	95	;'_'
   224  00BEE3  5F                 	db	95	;'_'
   225  00BEE4  49                 	db	73	;'I'
   226  00BEE5  6E                 	db	110	;'n'
   227  00BEE6  69                 	db	105	;'i'
   228  00BEE7  63                 	db	99	;'c'
   229  00BEE8  69                 	db	105	;'i'
   230  00BEE9  61                 	db	97	;'a'
   231  00BEEA  6E                 	db	110	;'n'
   232  00BEEB  64                 	db	100	;'d'
   233  00BEEC  6F                 	db	111	;'o'
   234  00BEED  20                 	db	32
   235  00BEEE  55                 	db	85	;'U'
   236  00BEEF  41                 	db	65	;'A'
   237  00BEF0  52                 	db	82	;'R'
   238  00BEF1  54                 	db	84	;'T'
   239  00BEF2  20                 	db	32
   240  00BEF3  39                 	db	57	;'9'
   241  00BEF4  36                 	db	54	;'6'
   242  00BEF5  30                 	db	48	;'0'
   243  00BEF6  30                 	db	48	;'0'
   244  00BEF7  20                 	db	32
   245  00BEF8  62                 	db	98	;'b'
   246  00BEF9  70                 	db	112	;'p'
   247  00BEFA  73                 	db	115	;'s'
   248  00BEFB  0D                 	db	13
   249  00BEFC  0A                 	db	10
   250  00BEFD  00                 	db	0
   251  00BEFE                     STR_9:
   252  00BEFE  20                 	db	32
   253  00BEFF  20                 	db	32
   254  00BF00  20                 	db	32
   255  00BF01  20                 	db	32
   256  00BF02  28                 	db	40
   257  00BF03  20                 	db	32
   258  00BF04  70                 	db	112	;'p'
   259  00BF05  3D                 	db	61	;'='
   260  00BF06  25                 	db	37
   261  00BF07  64                 	db	100	;'d'
   262  00BF08  20                 	db	32
   263  00BF09  62                 	db	98	;'b'
   264  00BF0A  37                 	db	55	;'7'
   265  00BF0B  3D                 	db	61	;'='
   266  00BF0C  25                 	db	37
   267  00BF0D  64                 	db	100	;'d'
   268  00BF0E  20                 	db	32
   269  00BF0F  62                 	db	98	;'b'
   270  00BF10  34                 	db	52	;'4'
   271  00BF11  3D                 	db	61	;'='
   272  00BF12  25                 	db	37
   273  00BF13  64                 	db	100	;'d'
   274  00BF14  20                 	db	32
   275  00BF15  29                 	db	41
   276  00BF16  0D                 	db	13
   277  00BF17  0A                 	db	10
   278  00BF18  00                 	db	0
   279  00BF19                     STR_22:
   280  00BF19  2D                 	db	45
   281  00BF1A  2D                 	db	45
   282  00BF1B  2D                 	db	45
   283  00BF1C  2D                 	db	45
   284  00BF1D  2D                 	db	45
   285  00BF1E  2D                 	db	45
   286  00BF1F  2D                 	db	45
   287  00BF20  2D                 	db	45
   288  00BF21  2D                 	db	45
   289  00BF22  2D                 	db	45
   290  00BF23  2D                 	db	45
   291  00BF24  2D                 	db	45
   292  00BF25  2D                 	db	45
   293  00BF26  2D                 	db	45
   294  00BF27  2D                 	db	45
   295  00BF28  2D                 	db	45
   296  00BF29  2D                 	db	45
   297  00BF2A  2D                 	db	45
   298  00BF2B  2D                 	db	45
   299  00BF2C  2D                 	db	45
   300  00BF2D  2D                 	db	45
   301  00BF2E  2D                 	db	45
   302  00BF2F  2D                 	db	45
   303  00BF30  2D                 	db	45
   304  00BF31  0D                 	db	13
   305  00BF32  0A                 	db	10
   306  00BF33  00                 	db	0
   307  00BF34                     STR_6:
   308  00BF34  20                 	db	32
   309  00BF35  20                 	db	32
   310  00BF36  20                 	db	32
   311  00BF37  20                 	db	32
   312  00BF38  28                 	db	40
   313  00BF39  20                 	db	32
   314  00BF3A  62                 	db	98	;'b'
   315  00BF3B  33                 	db	51	;'3'
   316  00BF3C  3D                 	db	61	;'='
   317  00BF3D  25                 	db	37
   318  00BF3E  64                 	db	100	;'d'
   319  00BF3F  20                 	db	32
   320  00BF40  65                 	db	101	;'e'
   321  00BF41  20                 	db	32
   322  00BF42  61                 	db	97	;'a'
   323  00BF43  63                 	db	99	;'c'
   324  00BF44  31                 	db	49	;'1'
   325  00BF45  3D                 	db	61	;'='
   326  00BF46  25                 	db	37
   327  00BF47  64                 	db	100	;'d'
   328  00BF48  20                 	db	32
   329  00BF49  29                 	db	41
   330  00BF4A  0D                 	db	13
   331  00BF4B  0A                 	db	10
   332  00BF4C  00                 	db	0
   333  00BF4D                     STR_23:
   334  00BF4D  30                 	db	48	;'0'
   335  00BF4E  31                 	db	49	;'1'
   336  00BF4F  32                 	db	50	;'2'
   337  00BF50  33                 	db	51	;'3'
   338  00BF51  34                 	db	52	;'4'
   339  00BF52  35                 	db	53	;'5'
   340  00BF53  36                 	db	54	;'6'
   341  00BF54  37                 	db	55	;'7'
   342  00BF55  38                 	db	56	;'8'
   343  00BF56  39                 	db	57	;'9'
   344  00BF57  41                 	db	65	;'A'
   345  00BF58  42                 	db	66	;'B'
   346  00BF59  43                 	db	67	;'C'
   347  00BF5A  44                 	db	68	;'D'
   348  00BF5B  45                 	db	69	;'E'
   349  00BF5C  46                 	db	70	;'F'
   350  00BF5D  00                 	db	0
   351  00BF5E                     STR_24:
   352  00BF5E  30                 	db	48	;'0'
   353  00BF5F  31                 	db	49	;'1'
   354  00BF60  32                 	db	50	;'2'
   355  00BF61  33                 	db	51	;'3'
   356  00BF62  34                 	db	52	;'4'
   357  00BF63  35                 	db	53	;'5'
   358  00BF64  36                 	db	54	;'6'
   359  00BF65  37                 	db	55	;'7'
   360  00BF66  38                 	db	56	;'8'
   361  00BF67  39                 	db	57	;'9'
   362  00BF68  61                 	db	97	;'a'
   363  00BF69  62                 	db	98	;'b'
   364  00BF6A  63                 	db	99	;'c'
   365  00BF6B  64                 	db	100	;'d'
   366  00BF6C  65                 	db	101	;'e'
   367  00BF6D  66                 	db	102	;'f'
   368  00BF6E  00                 	db	0
   369  00BF6F                     STR_4:
   370  00BF6F  5B                 	db	91	;'['
   371  00BF70  30                 	db	48	;'0'
   372  00BF71  78                 	db	120	;'x'
   373  00BF72  25                 	db	37
   374  00BF73  78                 	db	120	;'x'
   375  00BF74  2C                 	db	44
   376  00BF75  30                 	db	48	;'0'
   377  00BF76  78                 	db	120	;'x'
   378  00BF77  25                 	db	37
   379  00BF78  78                 	db	120	;'x'
   380  00BF79  3D                 	db	61	;'='
   381  00BF7A  30                 	db	48	;'0'
   382  00BF7B  78                 	db	120	;'x'
   383  00BF7C  25                 	db	37
   384  00BF7D  58                 	db	88	;'X'
   385  00BF7E  5D                 	db	93	;']'
   386  00BF7F  00                 	db	0
   387  00BF80                     STR_11:
   388  00BF80  09                 	db	9
   389  00BF81  41                 	db	65	;'A'
   390  00BF82  43                 	db	67	;'C'
   391  00BF83  31                 	db	49	;'1'
   392  00BF84  20                 	db	32
   393  00BF85  3D                 	db	61	;'='
   394  00BF86  20                 	db	32
   395  00BF87  25                 	db	37
   396  00BF88  64                 	db	100	;'d'
   397  00BF89  0D                 	db	13
   398  00BF8A  0A                 	db	10
   399  00BF8B  00                 	db	0
   400  00BF8C                     STR_12:
   401  00BF8C  09                 	db	9
   402  00BF8D  41                 	db	65	;'A'
   403  00BF8E  43                 	db	67	;'C'
   404  00BF8F  32                 	db	50	;'2'
   405  00BF90  20                 	db	32
   406  00BF91  3D                 	db	61	;'='
   407  00BF92  20                 	db	32
   408  00BF93  25                 	db	37
   409  00BF94  64                 	db	100	;'d'
   410  00BF95  0D                 	db	13
   411  00BF96  0A                 	db	10
   412  00BF97  00                 	db	0
   413  00BF98                     STR_13:
   414  00BF98  09                 	db	9
   415  00BF99  41                 	db	65	;'A'
   416  00BF9A  43                 	db	67	;'C'
   417  00BF9B  33                 	db	51	;'3'
   418  00BF9C  20                 	db	32
   419  00BF9D  3D                 	db	61	;'='
   420  00BF9E  20                 	db	32
   421  00BF9F  25                 	db	37
   422  00BFA0  64                 	db	100	;'d'
   423  00BFA1  0D                 	db	13
   424  00BFA2  0A                 	db	10
   425  00BFA3  00                 	db	0
   426  00BFA4                     STR_14:
   427  00BFA4  09                 	db	9
   428  00BFA5  41                 	db	65	;'A'
   429  00BFA6  43                 	db	67	;'C'
   430  00BFA7  34                 	db	52	;'4'
   431  00BFA8  20                 	db	32
   432  00BFA9  3D                 	db	61	;'='
   433  00BFAA  20                 	db	32
   434  00BFAB  25                 	db	37
   435  00BFAC  64                 	db	100	;'d'
   436  00BFAD  0D                 	db	13
   437  00BFAE  0A                 	db	10
   438  00BFAF  00                 	db	0
   439  00BFB0                     STR_15:
   440  00BFB0  09                 	db	9
   441  00BFB1  41                 	db	65	;'A'
   442  00BFB2  43                 	db	67	;'C'
   443  00BFB3  35                 	db	53	;'5'
   444  00BFB4  20                 	db	32
   445  00BFB5  3D                 	db	61	;'='
   446  00BFB6  20                 	db	32
   447  00BFB7  25                 	db	37
   448  00BFB8  64                 	db	100	;'d'
   449  00BFB9  0D                 	db	13
   450  00BFBA  0A                 	db	10
   451  00BFBB  00                 	db	0
   452  00BFBC                     STR_16:
   453  00BFBC  09                 	db	9
   454  00BFBD  41                 	db	65	;'A'
   455  00BFBE  43                 	db	67	;'C'
   456  00BFBF  36                 	db	54	;'6'
   457  00BFC0  20                 	db	32
   458  00BFC1  3D                 	db	61	;'='
   459  00BFC2  20                 	db	32
   460  00BFC3  25                 	db	37
   461  00BFC4  64                 	db	100	;'d'
   462  00BFC5  0D                 	db	13
   463  00BFC6  0A                 	db	10
   464  00BFC7  00                 	db	0
   465  00BFC8                     STR_17:
   466  00BFC8  09                 	db	9
   467  00BFC9  42                 	db	66	;'B'
   468  00BFCA  31                 	db	49	;'1'
   469  00BFCB  20                 	db	32
   470  00BFCC  3D                 	db	61	;'='
   471  00BFCD  20                 	db	32
   472  00BFCE  25                 	db	37
   473  00BFCF  64                 	db	100	;'d'
   474  00BFD0  0D                 	db	13
   475  00BFD1  0A                 	db	10
   476  00BFD2  00                 	db	0
   477  00BFD3                     STR_18:
   478  00BFD3  09                 	db	9
   479  00BFD4  42                 	db	66	;'B'
   480  00BFD5  32                 	db	50	;'2'
   481  00BFD6  20                 	db	32
   482  00BFD7  3D                 	db	61	;'='
   483  00BFD8  20                 	db	32
   484  00BFD9  25                 	db	37
   485  00BFDA  64                 	db	100	;'d'
   486  00BFDB  0D                 	db	13
   487  00BFDC  0A                 	db	10
   488  00BFDD  00                 	db	0
   489  00BFDE                     STR_19:
   490  00BFDE  09                 	db	9
   491  00BFDF  4D                 	db	77	;'M'
   492  00BFE0  42                 	db	66	;'B'
   493  00BFE1  20                 	db	32
   494  00BFE2  3D                 	db	61	;'='
   495  00BFE3  20                 	db	32
   496  00BFE4  25                 	db	37
   497  00BFE5  64                 	db	100	;'d'
   498  00BFE6  0D                 	db	13
   499  00BFE7  0A                 	db	10
   500  00BFE8  00                 	db	0
   501  00BFE9                     STR_20:
   502  00BFE9  09                 	db	9
   503  00BFEA  4D                 	db	77	;'M'
   504  00BFEB  43                 	db	67	;'C'
   505  00BFEC  20                 	db	32
   506  00BFED  3D                 	db	61	;'='
   507  00BFEE  20                 	db	32
   508  00BFEF  25                 	db	37
   509  00BFF0  64                 	db	100	;'d'
   510  00BFF1  0D                 	db	13
   511  00BFF2  0A                 	db	10
   512  00BFF3  00                 	db	0
   513  00BFF4                     STR_21:
   514  00BFF4  09                 	db	9
   515  00BFF5  4D                 	db	77	;'M'
   516  00BFF6  44                 	db	68	;'D'
   517  00BFF7  20                 	db	32
   518  00BFF8  3D                 	db	61	;'='
   519  00BFF9  20                 	db	32
   520  00BFFA  25                 	db	37
   521  00BFFB  64                 	db	100	;'d'
   522  00BFFC  0D                 	db	13
   523  00BFFD  0A                 	db	10
   524  00BFFE  00                 	db	0
   525  00BFFF                     __end_of__stringdata:
   526                           	opt stack 0
   527                           
   528                           ; #config settings
   529  00BFFF  00                 	db	0	; dummy byte at the end
   530  0000                     
   531                           	psect	cinit
   532  00A3D2                     __pcinit:
   533                           	opt stack 0
   534  00A3D2                     start_initialization:
   535                           	opt stack 0
   536  00A3D2                     __initialization:
   537                           	opt stack 0
   538                           
   539                           ; Clear objects allocated to BANK0 (12 bytes)
   540  00A3D2  EE00  F0E9         	lfsr	0,__pbssBANK0
   541  00A3D6  0E0C               	movlw	12
   542  00A3D8                     clear_0:
   543  00A3D8  6AEE               	clrf	postinc0,c
   544  00A3DA  06E8               	decf	wreg,f,c
   545  00A3DC  E1FD               	bnz	clear_0
   546                           
   547                           ; Clear objects allocated to COMRAM (11 bytes)
   548  00A3DE  EE00  F075         	lfsr	0,__pbssCOMRAM
   549  00A3E2  0E0B               	movlw	11
   550  00A3E4                     clear_1:
   551  00A3E4  6AEE               	clrf	postinc0,c
   552  00A3E6  06E8               	decf	wreg,f,c
   553  00A3E8  E1FD               	bnz	clear_1
   554  00A3EA                     end_of_initialization:
   555                           	opt stack 0
   556  00A3EA                     __end_of__initialization:
   557                           	opt stack 0
   558  00A3EA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   559  00A3EC  6EF8               	movwf	tblptru,c
   560  00A3EE  0100               	movlb	0
   561  00A3F0  EFC5  F054         	goto	_main	;jump to C main() function
   562                           tblptru	equ	0xFF8
   563                           postinc0	equ	0xFEE
   564                           wreg	equ	0xFE8
   565                           
   566                           	psect	bssCOMRAM
   567  000075                     __pbssCOMRAM:
   568                           	opt stack 0
   569  000075                     _ac1:
   570                           	opt stack 0
   571  000075                     	ds	2
   572  000077                     _ac2:
   573                           	opt stack 0
   574  000077                     	ds	2
   575  000079                     _ac3:
   576                           	opt stack 0
   577  000079                     	ds	2
   578  00007B                     _b1:
   579                           	opt stack 0
   580  00007B                     	ds	2
   581  00007D                     _b2:
   582                           	opt stack 0
   583  00007D                     	ds	2
   584  00007F                     _USART_Status:
   585                           	opt stack 0
   586  00007F                     	ds	1
   587                           tblptru	equ	0xFF8
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           
   591                           	psect	bssBANK0
   592  0000E9                     __pbssBANK0:
   593                           	opt stack 0
   594  0000E9                     _ac4:
   595                           	opt stack 0
   596  0000E9                     	ds	2
   597  0000EB                     _ac5:
   598                           	opt stack 0
   599  0000EB                     	ds	2
   600  0000ED                     _ac6:
   601                           	opt stack 0
   602  0000ED                     	ds	2
   603  0000EF                     _mb:
   604                           	opt stack 0
   605  0000EF                     	ds	2
   606  0000F1                     _mc:
   607                           	opt stack 0
   608  0000F1                     	ds	2
   609  0000F3                     _md:
   610                           	opt stack 0
   611  0000F3                     	ds	2
   612                           tblptru	equ	0xFF8
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           
   616                           	psect	cstackBANK1
   617  000100                     __pcstackBANK1:
   618                           	opt stack 0
   619  000100                     main@msg:
   620                           	opt stack 0
   621                           
   622                           ; 40 bytes @ 0x0
   623  000100                     	ds	40
   624  000128                     main@temperatura:
   625                           	opt stack 0
   626                           
   627                           ; 4 bytes @ 0x28
   628  000128                     	ds	4
   629  00012C                     main@pressao:
   630                           	opt stack 0
   631                           
   632                           ; 4 bytes @ 0x2C
   633  00012C                     	ds	4
   634                           tblptru	equ	0xFF8
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           
   638                           	psect	cstackBANK0
   639  000080                     __pcstackBANK0:
   640                           	opt stack 0
   641  000080                     ??_BMP180conversor:
   642  000080                     BMP180calibragem@msg:
   643                           	opt stack 0
   644                           
   645                           ; 40 bytes @ 0x0
   646  000080                     	ds	17
   647  000091                     BMP180conversor@msg:
   648                           	opt stack 0
   649                           
   650                           ; 40 bytes @ 0x11
   651  000091                     	ds	40
   652  0000B9                     BMP180conversor@ut:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x39
   656  0000B9                     	ds	4
   657  0000BD                     BMP180conversor@up:
   658                           	opt stack 0
   659                           
   660                           ; 4 bytes @ 0x3D
   661  0000BD                     	ds	4
   662  0000C1                     BMP180conversor@b5:
   663                           	opt stack 0
   664                           
   665                           ; 4 bytes @ 0x41
   666  0000C1                     	ds	4
   667  0000C5                     BMP180conversor@b3:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x45
   671  0000C5                     	ds	4
   672  0000C9                     _BMP180conversor$1874:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x49
   676  0000C9                     	ds	4
   677  0000CD                     BMP180conversor@b4:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x4D
   681  0000CD                     	ds	4
   682  0000D1                     BMP180conversor@b7:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x51
   686  0000D1                     	ds	4
   687  0000D5                     BMP180conversor@x3:
   688                           	opt stack 0
   689                           
   690                           ; 4 bytes @ 0x55
   691  0000D5                     	ds	4
   692  0000D9                     BMP180conversor@p:
   693                           	opt stack 0
   694                           
   695                           ; 4 bytes @ 0x59
   696  0000D9                     	ds	4
   697  0000DD                     BMP180conversor@b6:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x5D
   701  0000DD                     	ds	4
   702  0000E1                     BMP180conversor@x2:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x61
   706  0000E1                     	ds	4
   707  0000E5                     BMP180conversor@x1:
   708                           	opt stack 0
   709                           
   710                           ; 4 bytes @ 0x65
   711  0000E5                     	ds	4
   712                           tblptru	equ	0xFF8
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           
   716                           	psect	cstackCOMRAM
   717  000001                     __pcstackCOMRAM:
   718                           	opt stack 0
   719  000001                     ??_Delay10KTCYx:
   720  000001                     ??_ReadI2C:
   721  000001                     ??_isdigit:
   722  000001                     ??_IdleI2C:
   723  000001                     ?___lwdiv:
   724                           	opt stack 0
   725  000001                     ?___wmul:
   726                           	opt stack 0
   727  000001                     ?___lmul:
   728                           	opt stack 0
   729  000001                     ?___aldiv:
   730                           	opt stack 0
   731  000001                     ?___lldiv:
   732                           	opt stack 0
   733  000001                     WriteUSART@data:
   734                           	opt stack 0
   735  000001                     OpenI2C@slew:
   736                           	opt stack 0
   737  000001                     OpenUSART@spbrg:
   738                           	opt stack 0
   739  000001                     ___lwdiv@dividend:
   740                           	opt stack 0
   741  000001                     ___wmul@multiplier:
   742                           	opt stack 0
   743  000001                     ___aldiv@dividend:
   744                           	opt stack 0
   745  000001                     ___lldiv@dividend:
   746                           	opt stack 0
   747  000001                     ___lmul@multiplier:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x0
   751  000001                     	ds	1
   752  000002                     ??_WriteI2C:
   753  000002                     OpenI2C@sync_mode:
   754                           	opt stack 0
   755  000002                     Delay10KTCYx@unit:
   756                           	opt stack 0
   757  000002                     _isdigit$1515:
   758                           	opt stack 0
   759  000002                     putrsUSART@data:
   760                           	opt stack 0
   761  000002                     putsUSART@data:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x1
   765  000002                     	ds	1
   766  000003                     ??_iniciarI2c:
   767  000003                     ??_OpenUSART:
   768  000003                     WriteI2C@data_out:
   769                           	opt stack 0
   770  000003                     isdigit@c:
   771                           	opt stack 0
   772  000003                     ___lwdiv@divisor:
   773                           	opt stack 0
   774  000003                     ___wmul@multiplicand:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x2
   778  000003                     	ds	1
   779  000004                     
   780                           ; 0 bytes @ 0x3
   781  000004                     	ds	1
   782  000005                     ??___lwdiv:
   783  000005                     ___wmul@product:
   784                           	opt stack 0
   785  000005                     ___aldiv@divisor:
   786                           	opt stack 0
   787  000005                     ___lldiv@divisor:
   788                           	opt stack 0
   789  000005                     ___lmul@multiplicand:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x4
   793  000005                     	ds	1
   794  000006                     OpenUSART@config:
   795                           	opt stack 0
   796  000006                     ___lwdiv@quotient:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x5
   800  000006                     	ds	1
   801  000007                     
   802                           ; 0 bytes @ 0x6
   803  000007                     	ds	1
   804  000008                     ___lwdiv@counter:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x7
   808  000008                     	ds	1
   809  000009                     ??___aldiv:
   810  000009                     ??___lldiv:
   811  000009                     ?___lwmod:
   812                           	opt stack 0
   813  000009                     ___lwmod@dividend:
   814                           	opt stack 0
   815  000009                     ___lmul@product:
   816                           	opt stack 0
   817                           
   818                           ; 4 bytes @ 0x8
   819  000009                     	ds	1
   820  00000A                     ___aldiv@counter:
   821                           	opt stack 0
   822  00000A                     ___lldiv@quotient:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x9
   826  00000A                     	ds	1
   827  00000B                     ___aldiv@sign:
   828                           	opt stack 0
   829  00000B                     ___lwmod@divisor:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0xA
   833  00000B                     	ds	1
   834  00000C                     ___aldiv@quotient:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0xB
   838  00000C                     	ds	1
   839  00000D                     ??___lwmod:
   840                           
   841                           ; 0 bytes @ 0xC
   842  00000D                     	ds	1
   843  00000E                     ___lldiv@counter:
   844                           	opt stack 0
   845  00000E                     ___lwmod@counter:
   846                           	opt stack 0
   847                           
   848                           ; 1 bytes @ 0xD
   849  00000E                     	ds	2
   850  000010                     ?_sprintf:
   851                           	opt stack 0
   852  000010                     sprintf@sp:
   853                           	opt stack 0
   854                           
   855                           ; 2 bytes @ 0xF
   856  000010                     	ds	2
   857  000012                     sprintf@f:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x11
   861  000012                     	ds	14
   862  000020                     ??_sprintf:
   863                           
   864                           ; 0 bytes @ 0x1F
   865  000020                     	ds	4
   866  000024                     _sprintf$465:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x23
   870  000024                     	ds	2
   871  000026                     sprintf@idx:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x25
   875  000026                     	ds	1
   876  000027                     sprintf@ap:
   877                           	opt stack 0
   878                           
   879                           ; 2 bytes @ 0x26
   880  000027                     	ds	2
   881  000029                     sprintf@flag:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x28
   885  000029                     	ds	1
   886  00002A                     sprintf@_val:
   887                           	opt stack 0
   888                           
   889                           ; 5 bytes @ 0x29
   890  00002A                     	ds	5
   891  00002F                     sprintf@width:
   892                           	opt stack 0
   893                           
   894                           ; 2 bytes @ 0x2E
   895  00002F                     	ds	2
   896  000031                     sprintf@prec:
   897                           	opt stack 0
   898                           
   899                           ; 1 bytes @ 0x30
   900  000031                     	ds	1
   901  000032                     sprintf@c:
   902                           	opt stack 0
   903                           
   904                           ; 1 bytes @ 0x31
   905  000032                     	ds	1
   906  000033                     ?_lerBMP180:
   907                           	opt stack 0
   908                           
   909                           ; 4 bytes @ 0x32
   910  000033                     	ds	4
   911  000037                     ??_lerBMP180:
   912                           
   913                           ; 0 bytes @ 0x36
   914  000037                     	ds	1
   915  000038                     lerBMP180@msg:
   916                           	opt stack 0
   917                           
   918                           ; 40 bytes @ 0x37
   919  000038                     	ds	40
   920  000060                     lerBMP180@endereco:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0x5F
   924  000060                     	ds	1
   925  000061                     lerBMP180@msb:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x60
   929  000061                     	ds	2
   930  000063                     lerBMP180@lsb:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x62
   934  000063                     	ds	2
   935  000065                     lerBMP180@dado:
   936                           	opt stack 0
   937                           
   938                           ; 2 bytes @ 0x64
   939  000065                     	ds	2
   940  000067                     ??_BMP180calibragem:
   941  000067                     ?_lerBMP180temperatura:
   942                           	opt stack 0
   943  000067                     ?_lerBMP180pressao:
   944                           	opt stack 0
   945                           
   946                           ; 4 bytes @ 0x66
   947  000067                     	ds	4
   948  00006B                     ??_lerBMP180temperatura:
   949  00006B                     ??_lerBMP180pressao:
   950                           
   951                           ; 0 bytes @ 0x6A
   952  00006B                     	ds	1
   953  00006C                     BMP180conversor@temp:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x6B
   957  00006C                     	ds	2
   958  00006E                     BMP180conversor@pressao:
   959                           	opt stack 0
   960                           
   961                           ; 2 bytes @ 0x6D
   962  00006E                     	ds	2
   963  000070                     
   964                           ; 2 bytes @ 0x6F
   965  000070                     	ds	2
   966  000072                     
   967                           ; 3 bytes @ 0x71
   968  000072                     	ds	3
   969  000075                     tblptru	equ	0xFF8
   970                           postinc0	equ	0xFEE
   971                           wreg	equ	0xFE8
   972                           
   973                           ; 0 bytes @ 0x74
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   976 ;;
   977 ;; *************** function _main *****************
   978 ;; Defined at:
   979 ;;		line 70 in file "main.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  argc            2  111[COMRAM] int 
   982 ;;  argv            3  113[COMRAM] PTR PTR unsigned char 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  msg            40    0[BANK1 ] unsigned char [40]
   985 ;;  pressao         4   44[BANK1 ] long 
   986 ;;  temperatura     4   40[BANK1 ] long 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  2  111[COMRAM] int 
   989 ;; Registers used:
   990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   996 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;      Locals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Totals:         5       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;Total ram usage:       53 bytes
  1001 ;; Hardware stack levels required when called:    5
  1002 ;; This function calls:
  1003 ;;		_BMP180calibragem
  1004 ;;		_BMP180conversor
  1005 ;;		_Delay10KTCYx
  1006 ;;		___aldiv
  1007 ;;		_configuracao_EUSART
  1008 ;;		_iniciarI2c
  1009 ;;		_putrsUSART
  1010 ;;		_putsUSART
  1011 ;;		_sprintf
  1012 ;; This function is called by:
  1013 ;;		Startup code after reset
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text0
  1018  00A98A                     __ptext0:
  1019                           	opt stack 0
  1020  00A98A                     _main:
  1021                           	opt stack 26
  1022                           
  1023                           ;main.c: 72: long temperatura=0, pressao=0;
  1024                           
  1025                           ;incstack = 0
  1026  00A98A  0E00               	movlw	0
  1027  00A98C  0101               	movlb	1	; () banked
  1028  00A98E  0101               	movlb	1	; () banked
  1029  00A990  6F28               	movwf	main@temperatura& (0+255),b
  1030  00A992  0E00               	movlw	0
  1031  00A994  0101               	movlb	1	; () banked
  1032  00A996  6F29               	movwf	(main@temperatura+1)& (0+255),b
  1033  00A998  0E00               	movlw	0
  1034  00A99A  0101               	movlb	1	; () banked
  1035  00A99C  6F2A               	movwf	(main@temperatura+2)& (0+255),b
  1036  00A99E  0E00               	movlw	0
  1037  00A9A0  0101               	movlb	1	; () banked
  1038  00A9A2  6F2B               	movwf	(main@temperatura+3)& (0+255),b
  1039  00A9A4  0E00               	movlw	0
  1040  00A9A6  0101               	movlb	1	; () banked
  1041  00A9A8  0101               	movlb	1	; () banked
  1042  00A9AA  6F2C               	movwf	main@pressao& (0+255),b
  1043  00A9AC  0E00               	movlw	0
  1044  00A9AE  0101               	movlb	1	; () banked
  1045  00A9B0  6F2D               	movwf	(main@pressao+1)& (0+255),b
  1046  00A9B2  0E00               	movlw	0
  1047  00A9B4  0101               	movlb	1	; () banked
  1048  00A9B6  6F2E               	movwf	(main@pressao+2)& (0+255),b
  1049  00A9B8  0E00               	movlw	0
  1050  00A9BA  0101               	movlb	1	; () banked
  1051  00A9BC  6F2F               	movwf	(main@pressao+3)& (0+255),b
  1052                           
  1053                           ; BSR set to: 1
  1054                           ;main.c: 73: char msg[40];
  1055                           ;main.c: 75: TRISC0 = 0;
  1056  00A9BE  9094               	bcf	3988,0,c	;volatile
  1057                           
  1058                           ; BSR set to: 1
  1059                           ;main.c: 76: TRISC1 = 0;
  1060  00A9C0  9294               	bcf	3988,1,c	;volatile
  1061                           
  1062                           ; BSR set to: 1
  1063                           ;main.c: 77: TRISC2 = 0;
  1064  00A9C2  9494               	bcf	3988,2,c	;volatile
  1065                           
  1066                           ;main.c: 79: ADCON1=0x0F;
  1067  00A9C4  0E0F               	movlw	15
  1068  00A9C6  6EC1               	movwf	4033,c	;volatile
  1069                           
  1070                           ; BSR set to: 1
  1071                           ;main.c: 81: PORTCbits.RC2=1;
  1072  00A9C8  8482               	bsf	3970,2,c	;volatile
  1073                           
  1074                           ; BSR set to: 1
  1075                           ;main.c: 82: iniciarI2c();
  1076  00A9CA  EC4C  F052         	call	_iniciarI2c	;wreg free
  1077                           
  1078                           ;main.c: 84: configuracao_EUSART();
  1079  00A9CE  ECCB  F051         	call	_configuracao_EUSART	;wreg free
  1080  00A9D2                     l81:
  1081  00A9D2  A2AC               	btfss	4012,1,c	;volatile
  1082  00A9D4  D7FE               	goto	l81
  1083                           
  1084                           ;main.c: 86: putrsUSART("__Iniciando UART 9600 bps\r\n");
  1085  00A9D6  0EBE               	movlw	high STR_1
  1086  00A9D8  6E03               	movwf	putrsUSART@data+1,c
  1087  00A9DA  0EE2               	movlw	low STR_1
  1088  00A9DC  6E02               	movwf	putrsUSART@data,c
  1089  00A9DE  EC36  F052         	call	_putrsUSART	;wreg free
  1090                           
  1091                           ;main.c: 88: PORTCbits.RC0=1;
  1092  00A9E2  8082               	bsf	3970,0,c	;volatile
  1093                           
  1094                           ;main.c: 89: BMP180calibragem();
  1095  00A9E4  EC68  F055         	call	_BMP180calibragem	;wreg free
  1096                           
  1097                           ;main.c: 91: Delay10KTCYx(200);
  1098  00A9E8  0EC8               	movlw	200
  1099  00A9EA  ECBF  F051         	call	_Delay10KTCYx
  1100  00A9EE                     l84:
  1101  00A9EE  A2AC               	btfss	4012,1,c	;volatile
  1102  00A9F0  D7FE               	goto	l84
  1103                           
  1104                           ;main.c: 93: putrsUSART("__Calibragem OK, iniciando...\r\n");
  1105  00A9F2  0EBE               	movlw	high STR_2
  1106  00A9F4  6E03               	movwf	putrsUSART@data+1,c
  1107  00A9F6  0E8A               	movlw	low STR_2
  1108  00A9F8  6E02               	movwf	putrsUSART@data,c
  1109  00A9FA  EC36  F052         	call	_putrsUSART	;wreg free
  1110  00A9FE                     l2719:
  1111                           
  1112                           ;main.c: 98: {
  1113                           ;main.c: 99: PORTCbits.RC1=1;
  1114  00A9FE  8282               	bsf	3970,1,c	;volatile
  1115                           
  1116                           ;main.c: 100: BMP180conversor( &temperatura, &pressao );
  1117  00AA00  0101               	movlb	1	; () banked
  1118  00AA02  0E01               	movlw	high main@temperatura
  1119  00AA04  6E6D               	movwf	BMP180conversor@temp+1,c
  1120  00AA06  0101               	movlb	1	; () banked
  1121  00AA08  0E28               	movlw	low main@temperatura
  1122  00AA0A  6E6C               	movwf	BMP180conversor@temp,c
  1123  00AA0C  0101               	movlb	1	; () banked
  1124  00AA0E  0E01               	movlw	high main@pressao
  1125  00AA10  6E6F               	movwf	BMP180conversor@pressao+1,c
  1126  00AA12  0101               	movlb	1	; () banked
  1127  00AA14  0E2C               	movlw	low main@pressao
  1128  00AA16  6E6E               	movwf	BMP180conversor@pressao,c
  1129  00AA18  EC2D  F059         	call	_BMP180conversor	;wreg free
  1130                           
  1131                           ;main.c: 101: PORTCbits.RC2=0;
  1132  00AA1C  9482               	bcf	3970,2,c	;volatile
  1133                           
  1134                           ;main.c: 103: sprintf(msg,"_Temperatura %2.1d c, Pressao %d Pa \r\n", (temperatura/10), 
      +                          pressao);
  1135  00AA1E  0101               	movlb	1	; () banked
  1136  00AA20  0E01               	movlw	high main@msg
  1137  00AA22  6E11               	movwf	sprintf@sp+1,c
  1138  00AA24  0101               	movlb	1	; () banked
  1139  00AA26  0E00               	movlw	low main@msg
  1140  00AA28  6E10               	movwf	sprintf@sp,c
  1141  00AA2A  0EBE               	movlw	high STR_3
  1142  00AA2C  6E13               	movwf	sprintf@f+1,c
  1143  00AA2E  0E63               	movlw	low STR_3
  1144  00AA30  6E12               	movwf	sprintf@f,c
  1145  00AA32  C128  F001         	movff	main@temperatura,___aldiv@dividend
  1146  00AA36  C129  F002         	movff	main@temperatura+1,___aldiv@dividend+1
  1147  00AA3A  C12A  F003         	movff	main@temperatura+2,___aldiv@dividend+2
  1148  00AA3E  C12B  F004         	movff	main@temperatura+3,___aldiv@dividend+3
  1149  00AA42  0E0A               	movlw	10
  1150  00AA44  6E05               	movwf	___aldiv@divisor,c
  1151  00AA46  0E00               	movlw	0
  1152  00AA48  6E06               	movwf	___aldiv@divisor+1,c
  1153  00AA4A  0E00               	movlw	0
  1154  00AA4C  6E07               	movwf	___aldiv@divisor+2,c
  1155  00AA4E  0E00               	movlw	0
  1156  00AA50  6E08               	movwf	___aldiv@divisor+3,c
  1157  00AA52  EC41  F054         	call	___aldiv	;wreg free
  1158  00AA56  C001  F014         	movff	?___aldiv,?_sprintf+4
  1159  00AA5A  C002  F015         	movff	?___aldiv+1,?_sprintf+5
  1160  00AA5E  C003  F016         	movff	?___aldiv+2,?_sprintf+6
  1161  00AA62  C004  F017         	movff	?___aldiv+3,?_sprintf+7
  1162  00AA66  C12C  F018         	movff	main@pressao,?_sprintf+8
  1163  00AA6A  C12D  F019         	movff	main@pressao+1,?_sprintf+9
  1164  00AA6E  C12E  F01A         	movff	main@pressao+2,?_sprintf+10
  1165  00AA72  C12F  F01B         	movff	main@pressao+3,?_sprintf+11
  1166  00AA76  EC42  F057         	call	_sprintf	;wreg free
  1167  00AA7A                     l88:
  1168  00AA7A  A2AC               	btfss	4012,1,c	;volatile
  1169  00AA7C  D7FE               	goto	l88
  1170                           
  1171                           ;main.c: 106: putsUSART(msg);
  1172  00AA7E  0101               	movlb	1	; () banked
  1173  00AA80  0E01               	movlw	high main@msg
  1174  00AA82  6E03               	movwf	putsUSART@data+1,c
  1175  00AA84  0101               	movlb	1	; () banked
  1176  00AA86  0E00               	movlw	low main@msg
  1177  00AA88  6E02               	movwf	putsUSART@data,c
  1178  00AA8A  ECFA  F051         	call	_putsUSART	;wreg free
  1179                           
  1180                           ;main.c: 107: PORTCbits.RC0=0;
  1181  00AA8E  9082               	bcf	3970,0,c	;volatile
  1182                           
  1183                           ;main.c: 109: Delay10KTCYx(200);PORTCbits.RC1=0;
  1184  00AA90  0EC8               	movlw	200
  1185  00AA92  ECBF  F051         	call	_Delay10KTCYx
  1186  00AA96  9282               	bcf	3970,1,c	;volatile
  1187                           
  1188                           ;main.c: 110: Delay10KTCYx(200);Delay10KTCYx(200);Delay10KTCYx(200);
  1189  00AA98  0EC8               	movlw	200
  1190  00AA9A  ECBF  F051         	call	_Delay10KTCYx
  1191  00AA9E  0EC8               	movlw	200
  1192  00AAA0  ECBF  F051         	call	_Delay10KTCYx
  1193  00AAA4  0EC8               	movlw	200
  1194  00AAA6  ECBF  F051         	call	_Delay10KTCYx
  1195                           
  1196                           ;main.c: 111: Delay10KTCYx(200);Delay10KTCYx(200);Delay10KTCYx(200);Delay10KTCYx(200);
  1197  00AAAA  0EC8               	movlw	200
  1198  00AAAC  ECBF  F051         	call	_Delay10KTCYx
  1199  00AAB0  0EC8               	movlw	200
  1200  00AAB2  ECBF  F051         	call	_Delay10KTCYx
  1201  00AAB6  0EC8               	movlw	200
  1202  00AAB8  ECBF  F051         	call	_Delay10KTCYx
  1203  00AABC  0EC8               	movlw	200
  1204  00AABE  ECBF  F051         	call	_Delay10KTCYx
  1205                           
  1206                           ;main.c: 112: Delay10KTCYx(200);Delay10KTCYx(200);
  1207  00AAC2  0EC8               	movlw	200
  1208  00AAC4  ECBF  F051         	call	_Delay10KTCYx
  1209  00AAC8  0EC8               	movlw	200
  1210  00AACA  ECBF  F051         	call	_Delay10KTCYx
  1211  00AACE  D797               	goto	l2719
  1212  00AAD0                     __end_of_main:
  1213                           	opt stack 0
  1214                           tblptru	equ	0xFF8
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           
  1218 ;; *************** function _putrsUSART *****************
  1219 ;; Defined at:
  1220 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uputrs.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  data            2    1[COMRAM] PTR const unsigned char 
  1223 ;;		 -> STR_2(32), STR_1(28), 
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;		None
  1226 ;; Return value:  Size  Location     Type
  1227 ;;		None               void
  1228 ;; Registers used:
  1229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;Total ram usage:        2 bytes
  1240 ;; Hardware stack levels used:    1
  1241 ;; Hardware stack levels required when called:    1
  1242 ;; This function calls:
  1243 ;;		_WriteUSART
  1244 ;; This function is called by:
  1245 ;;		_main
  1246 ;; This function uses a non-reentrant model
  1247 ;;
  1248                           
  1249                           	psect	text1
  1250  00A46C                     __ptext1:
  1251                           	opt stack 0
  1252  00A46C                     _putrsUSART:
  1253                           	opt stack 29
  1254  00A46C                     l315:
  1255  00A46C  A2AC               	btfss	4012,1,c	;volatile
  1256  00A46E  D7FE               	goto	l315
  1257  00A470  C002  FFF6         	movff	putrsUSART@data,tblptrl
  1258  00A474  C003  FFF7         	movff	putrsUSART@data+1,tblptrh
  1259  00A478  0008               	tblrd		*
  1260  00A47A  50F5               	movf	tablat,w,c
  1261  00A47C  ECB5  F051         	call	_WriteUSART
  1262  00A480  C002  FFF6         	movff	putrsUSART@data,tblptrl
  1263  00A484  C003  FFF7         	movff	putrsUSART@data+1,tblptrh
  1264  00A488  4A02               	infsnz	putrsUSART@data,f,c
  1265  00A48A  2A03               	incf	putrsUSART@data+1,f,c
  1266  00A48C  0008               	tblrd		*
  1267  00A48E  50F5               	movf	tablat,w,c
  1268  00A490  0900               	iorlw	0
  1269  00A492  B4D8               	btfsc	status,2,c
  1270  00A494  0012               	return	
  1271  00A496  D7EA               	goto	l315
  1272  00A498                     __end_of_putrsUSART:
  1273                           	opt stack 0
  1274                           tblptru	equ	0xFF8
  1275                           tblptrh	equ	0xFF7
  1276                           tblptrl	equ	0xFF6
  1277                           tablat	equ	0xFF5
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           status	equ	0xFD8
  1281                           
  1282 ;; *************** function _iniciarI2c *****************
  1283 ;; Defined at:
  1284 ;;		line 120 in file "main.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;		None               void
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;Total ram usage:        1 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    1
  1305 ;; This function calls:
  1306 ;;		_CloseI2C
  1307 ;;		_Delay10KTCYx
  1308 ;;		_OpenI2C
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text2
  1315  00A498                     __ptext2:
  1316                           	opt stack 0
  1317  00A498                     _iniciarI2c:
  1318                           	opt stack 29
  1319                           
  1320                           ;main.c: 122: Delay10KTCYx(200);
  1321                           
  1322                           ;incstack = 0
  1323  00A498  0EC8               	movlw	200
  1324  00A49A  ECBF  F051         	call	_Delay10KTCYx
  1325                           
  1326                           ;main.c: 124: TRISCbits.TRISC3=0;
  1327  00A49E  9694               	bcf	3988,3,c	;volatile
  1328                           
  1329                           ;main.c: 125: TRISCbits.TRISC4=0;
  1330  00A4A0  9894               	bcf	3988,4,c	;volatile
  1331                           
  1332                           ;main.c: 126: LATC3=0;
  1333  00A4A2  968B               	bcf	3979,3,c	;volatile
  1334                           
  1335                           ;main.c: 127: LATC4=0;
  1336  00A4A4  988B               	bcf	3979,4,c	;volatile
  1337                           
  1338                           ;main.c: 130: Delay10KTCYx(200);
  1339  00A4A6  0EC8               	movlw	200
  1340  00A4A8  ECBF  F051         	call	_Delay10KTCYx
  1341                           
  1342                           ;main.c: 132: TRISCbits.TRISC3=1;
  1343  00A4AC  8694               	bsf	3988,3,c	;volatile
  1344                           
  1345                           ;main.c: 133: TRISCbits.TRISC4=1;
  1346  00A4AE  8894               	bsf	3988,4,c	;volatile
  1347                           
  1348                           ;main.c: 136: SSPADD = ((8000000/4)/100000)-1;
  1349  00A4B0  0E13               	movlw	19
  1350  00A4B2  6EC8               	movwf	4040,c	;volatile
  1351                           
  1352                           ;main.c: 138: CloseI2C();
  1353  00A4B4  ECAB  F051         	call	_CloseI2C	;wreg free
  1354                           
  1355                           ;main.c: 139: OpenI2C(0b00001000,0b10000000);
  1356  00A4B8  6E03               	movwf	??_iniciarI2c& (0+255),c
  1357  00A4BA  0E80               	movlw	128
  1358  00A4BC  6E01               	movwf	OpenI2C@slew,c
  1359  00A4BE  5003               	movf	??_iniciarI2c& (0+255),w,c
  1360  00A4C0  0E08               	movlw	8
  1361  00A4C2  ECD9  F051         	call	_OpenI2C
  1362  00A4C6  0012               	return	
  1363  00A4C8                     __end_of_iniciarI2c:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _OpenI2C *****************
  1374 ;; Defined at:
  1375 ;;		line 14 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/i2c/i2c_open.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  sync_mode       1    wreg     unsigned char 
  1378 ;;  slew            1    0[COMRAM] unsigned char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  sync_mode       1    1[COMRAM] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;		None               void
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1390 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_iniciarI2c
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           	psect	text3
  1404  00A3B2                     __ptext3:
  1405                           	opt stack 0
  1406  00A3B2                     _OpenI2C:
  1407                           	opt stack 29
  1408                           
  1409                           ;incstack = 0
  1410                           ;OpenI2C@sync_mode stored from wreg
  1411  00A3B2  CFE8 F002          	movff	wreg,OpenI2C@sync_mode
  1412  00A3B6  0E3F               	movlw	63
  1413  00A3B8  16C7               	andwf	4039,f,c	;volatile
  1414  00A3BA  0E00               	movlw	0
  1415  00A3BC  6EC6               	movwf	4038,c	;volatile
  1416  00A3BE  0E00               	movlw	0
  1417  00A3C0  6EC5               	movwf	4037,c	;volatile
  1418  00A3C2  5002               	movf	OpenI2C@sync_mode,w,c
  1419  00A3C4  12C6               	iorwf	4038,f,c	;volatile
  1420  00A3C6  5001               	movf	OpenI2C@slew,w,c
  1421  00A3C8  12C7               	iorwf	4039,f,c	;volatile
  1422  00A3CA  8694               	bsf	3988,3,c	;volatile
  1423  00A3CC  8894               	bsf	3988,4,c	;volatile
  1424  00A3CE  8AC6               	bsf	4038,5,c	;volatile
  1425  00A3D0  0012               	return	
  1426  00A3D2                     __end_of_OpenI2C:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function _Delay10KTCYx *****************
  1437 ;; Defined at:
  1438 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/pic18/d10ktcyx.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  unit            1    wreg     unsigned char 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  unit            1    1[COMRAM] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		wreg
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;Total ram usage:        2 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;;		_iniciarI2c
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text4
  1467  00A37E                     __ptext4:
  1468                           	opt stack 0
  1469  00A37E                     _Delay10KTCYx:
  1470                           	opt stack 29
  1471                           
  1472                           ;incstack = 0
  1473                           ;Delay10KTCYx@unit stored from wreg
  1474  00A37E  CFE8 F002          	movff	wreg,Delay10KTCYx@unit
  1475  00A382                     l620:
  1476  00A382  0E0D               	movlw	13
  1477  00A384  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  1478  00A386  0EFC               	movlw	252
  1479  00A388                     u2417:
  1480  00A388  2EE8               	decfsz	wreg,f,c
  1481  00A38A  D7FE               	goto	u2417
  1482  00A38C  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1483  00A38E  D7FC               	goto	u2417
  1484  00A390  2E02               	decfsz	Delay10KTCYx@unit,f,c
  1485  00A392  D7F7               	goto	l620
  1486  00A394  0012               	return	
  1487  00A396                     __end_of_Delay10KTCYx:
  1488                           	opt stack 0
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           postinc0	equ	0xFEE
  1494                           wreg	equ	0xFE8
  1495                           status	equ	0xFD8
  1496                           
  1497 ;; *************** function _CloseI2C *****************
  1498 ;; Defined at:
  1499 ;;		line 19 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/i2c/i2c_clos.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;		None               void
  1506 ;; Registers used:
  1507 ;;		status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1517 ;;Total ram usage:        0 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_iniciarI2c
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	text5
  1527  00A356                     __ptext5:
  1528                           	opt stack 0
  1529  00A356                     _CloseI2C:
  1530                           	opt stack 29
  1531                           
  1532                           ;incstack = 0
  1533  00A356  9AC6               	bcf	4038,5,c	;volatile
  1534  00A358  0012               	return	
  1535  00A35A                     __end_of_CloseI2C:
  1536                           	opt stack 0
  1537                           tblptru	equ	0xFF8
  1538                           tblptrh	equ	0xFF7
  1539                           tblptrl	equ	0xFF6
  1540                           tablat	equ	0xFF5
  1541                           postinc0	equ	0xFEE
  1542                           wreg	equ	0xFE8
  1543                           status	equ	0xFD8
  1544                           
  1545 ;; *************** function _configuracao_EUSART *****************
  1546 ;; Defined at:
  1547 ;;		line 320 in file "main.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;		None               void
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, cstack
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used:    1
  1567 ;; Hardware stack levels required when called:    1
  1568 ;; This function calls:
  1569 ;;		_OpenUSART
  1570 ;; This function is called by:
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text6
  1576  00A396                     __ptext6:
  1577                           	opt stack 0
  1578  00A396                     _configuracao_EUSART:
  1579                           	opt stack 29
  1580                           
  1581                           ;main.c: 323: TRISC6=0;
  1582                           
  1583                           ;incstack = 0
  1584  00A396  9C94               	bcf	3988,6,c	;volatile
  1585                           
  1586                           ;main.c: 325: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1587  00A398  0E4F               	movlw	79
  1588  00A39A  16AB               	andwf	4011,f,c	;volatile
  1589  00A39C  9AAC               	bcf	4012,5,c	;volatile
  1590  00A39E  0ECF               	movlw	207
  1591  00A3A0  169D               	andwf	3997,f,c	;volatile
  1592                           
  1593                           ;main.c: 328: OpenUSART( 0b01111111 &
  1594                           ;main.c: 329: 0b10111111 &
  1595                           ;main.c: 330: 0b11111110 &
  1596                           ;main.c: 331: 0b11111101 &
  1597                           ;main.c: 332: 0b11111111 &
  1598                           ;main.c: 333: 0b11101111,
  1599                           ;main.c: 334: 12
  1600                           ;main.c: 335: );
  1601  00A3A2  0E00               	movlw	0
  1602  00A3A4  6E02               	movwf	OpenUSART@spbrg+1,c
  1603  00A3A6  0E0C               	movlw	12
  1604  00A3A8  6E01               	movwf	OpenUSART@spbrg,c
  1605  00A3AA  0E2C               	movlw	44
  1606  00A3AC  EC71  F053         	call	_OpenUSART
  1607  00A3B0  0012               	return	
  1608  00A3B2                     __end_of_configuracao_EUSART:
  1609                           	opt stack 0
  1610                           tblptru	equ	0xFF8
  1611                           tblptrh	equ	0xFF7
  1612                           tblptrl	equ	0xFF6
  1613                           tablat	equ	0xFF5
  1614                           postinc0	equ	0xFEE
  1615                           wreg	equ	0xFE8
  1616                           status	equ	0xFD8
  1617                           
  1618 ;; *************** function _OpenUSART *****************
  1619 ;; Defined at:
  1620 ;;		line 73 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uopen.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  config          1    wreg     unsigned char 
  1623 ;;  spbrg           2    0[COMRAM] unsigned int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  config          1    5[COMRAM] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;		None               void
  1628 ;; Registers used:
  1629 ;;		wreg, status,2
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;Total ram usage:        6 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; This function calls:
  1642 ;;		Nothing
  1643 ;; This function is called by:
  1644 ;;		_configuracao_EUSART
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text7
  1649  00A6E2                     __ptext7:
  1650                           	opt stack 0
  1651  00A6E2                     _OpenUSART:
  1652                           	opt stack 29
  1653                           
  1654                           ;incstack = 0
  1655                           ;OpenUSART@config stored from wreg
  1656  00A6E2  CFE8 F006          	movff	wreg,OpenUSART@config
  1657  00A6E6  0E00               	movlw	0
  1658  00A6E8  6EAC               	movwf	4012,c	;volatile
  1659  00A6EA  0E00               	movlw	0
  1660  00A6EC  6EAB               	movwf	4011,c	;volatile
  1661  00A6EE  B006               	btfsc	OpenUSART@config,0,c
  1662  00A6F0  88AC               	bsf	4012,4,c	;volatile
  1663  00A6F2  A206               	btfss	OpenUSART@config,1,c
  1664  00A6F4  D002               	goto	l2097
  1665  00A6F6  8CAC               	bsf	4012,6,c	;volatile
  1666  00A6F8  8CAB               	bsf	4011,6,c	;volatile
  1667  00A6FA                     l2097:
  1668  00A6FA  B406               	btfsc	OpenUSART@config,2,c
  1669  00A6FC  8EAC               	bsf	4012,7,c	;volatile
  1670  00A6FE  A606               	btfss	OpenUSART@config,3,c
  1671  00A700  D002               	goto	l298
  1672  00A702  88AB               	bsf	4011,4,c	;volatile
  1673  00A704  D001               	goto	l2105
  1674  00A706                     l298:
  1675  00A706  8AAB               	bsf	4011,5,c	;volatile
  1676  00A708                     l2105:
  1677  00A708  B806               	btfsc	OpenUSART@config,4,c
  1678  00A70A  84AC               	bsf	4012,2,c	;volatile
  1679  00A70C  989E               	bcf	3998,4,c	;volatile
  1680  00A70E  BA06               	btfsc	OpenUSART@config,5,c
  1681  00A710  86AB               	bsf	4011,3,c	;volatile
  1682  00A712  AC06               	btfss	OpenUSART@config,6,c
  1683  00A714  D002               	goto	l302
  1684  00A716  8A9D               	bsf	3997,5,c	;volatile
  1685  00A718  D001               	goto	l303
  1686  00A71A                     l302:
  1687  00A71A  9A9D               	bcf	3997,5,c	;volatile
  1688  00A71C                     l303:
  1689  00A71C  9A9E               	bcf	3998,5,c	;volatile
  1690  00A71E  AE06               	btfss	OpenUSART@config,7,c
  1691  00A720  D002               	goto	l304
  1692  00A722  889D               	bsf	3997,4,c	;volatile
  1693  00A724  D001               	goto	l305
  1694  00A726                     l304:
  1695  00A726  989D               	bcf	3997,4,c	;volatile
  1696  00A728                     l305:
  1697  00A728  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1698  00A72C  C002  F003         	movff	OpenUSART@spbrg+1,??_OpenUSART
  1699  00A730  C003  F004         	movff	??_OpenUSART,??_OpenUSART+1
  1700  00A734  6A05               	clrf	(??_OpenUSART+2)& (0+255),c
  1701  00A736  5004               	movf	??_OpenUSART+1,w,c
  1702  00A738  6EB0               	movwf	4016,c	;volatile
  1703  00A73A  8AAC               	bsf	4012,5,c	;volatile
  1704  00A73C  8EAB               	bsf	4011,7,c	;volatile
  1705  00A73E  9C94               	bcf	3988,6,c	;volatile
  1706  00A740  8E94               	bsf	3988,7,c	;volatile
  1707  00A742  B8AC               	btfsc	4012,4,c	;volatile
  1708  00A744  BEAC               	btfsc	4012,7,c	;volatile
  1709  00A746  D001               	goto	l307
  1710  00A748  8C94               	bsf	3988,6,c	;volatile
  1711  00A74A                     l307:
  1712  00A74A  0012               	return	
  1713  00A74C                     __end_of_OpenUSART:
  1714                           	opt stack 0
  1715                           tblptru	equ	0xFF8
  1716                           tblptrh	equ	0xFF7
  1717                           tblptrl	equ	0xFF6
  1718                           tablat	equ	0xFF5
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           status	equ	0xFD8
  1722                           
  1723 ;; *************** function _BMP180conversor *****************
  1724 ;; Defined at:
  1725 ;;		line 214 in file "main.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  temp            2  107[COMRAM] PTR long 
  1728 ;;		 -> main@temperatura(4), 
  1729 ;;  pressao         2  109[COMRAM] PTR long 
  1730 ;;		 -> main@pressao(4), 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  msg            40   17[BANK0 ] unsigned char [40]
  1733 ;;  x1              4  101[BANK0 ] long 
  1734 ;;  x2              4   97[BANK0 ] long 
  1735 ;;  b6              4   93[BANK0 ] long 
  1736 ;;  p               4   89[BANK0 ] long 
  1737 ;;  x3              4   85[BANK0 ] long 
  1738 ;;  b7              4   81[BANK0 ] unsigned long 
  1739 ;;  b4              4   77[BANK0 ] unsigned long 
  1740 ;;  b3              4   69[BANK0 ] long 
  1741 ;;  b5              4   65[BANK0 ] long 
  1742 ;;  up              4   61[BANK0 ] long 
  1743 ;;  ut              4   57[BANK0 ] long 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;		None               void
  1746 ;; Registers used:
  1747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Locals:         0      88       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Temps:          0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Totals:         4     105       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;Total ram usage:      109 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    4
  1760 ;; This function calls:
  1761 ;;		___aldiv
  1762 ;;		___lldiv
  1763 ;;		___lmul
  1764 ;;		_lerBMP180pressao
  1765 ;;		_lerBMP180temperatura
  1766 ;;		_putsUSART
  1767 ;;		_sprintf
  1768 ;; This function is called by:
  1769 ;;		_main
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text8
  1774  00B25A                     __ptext8:
  1775                           	opt stack 0
  1776  00B25A                     _BMP180conversor:
  1777                           	opt stack 26
  1778                           
  1779                           ;main.c: 216: char msg[40];
  1780                           ;main.c: 221: long ut;
  1781                           ;main.c: 222: long up;
  1782                           ;main.c: 223: long x1, x2, b5, b6, x3, b3, p;
  1783                           ;main.c: 224: unsigned long b4, b7;
  1784                           ;main.c: 227: ut = lerBMP180temperatura();
  1785                           
  1786                           ;incstack = 0
  1787  00B25A  ECA3  F052         	call	_lerBMP180temperatura	;wreg free
  1788  00B25E  C067  F0B9         	movff	?_lerBMP180temperatura,BMP180conversor@ut
  1789  00B262  C068  F0BA         	movff	?_lerBMP180temperatura+1,BMP180conversor@ut+1
  1790  00B266  C069  F0BB         	movff	?_lerBMP180temperatura+2,BMP180conversor@ut+2
  1791  00B26A  C06A  F0BC         	movff	?_lerBMP180temperatura+3,BMP180conversor@ut+3
  1792                           
  1793                           ;main.c: 228: up = lerBMP180pressao();
  1794  00B26E  EC81  F052         	call	_lerBMP180pressao	;wreg free
  1795  00B272  C067  F0BD         	movff	?_lerBMP180pressao,BMP180conversor@up
  1796  00B276  C068  F0BE         	movff	?_lerBMP180pressao+1,BMP180conversor@up+1
  1797  00B27A  C069  F0BF         	movff	?_lerBMP180pressao+2,BMP180conversor@up+2
  1798  00B27E  C06A  F0C0         	movff	?_lerBMP180pressao+3,BMP180conversor@up+3
  1799                           
  1800                           ;main.c: 230: x1 = ((long) ut - ac6) * ac5 >> 15;
  1801  00B282  0E0F               	movlw	15
  1802  00B284  0100               	movlb	0	; () banked
  1803  00B286  6F80               	movwf	??_BMP180conversor& (0+255),b
  1804  00B288  0100               	movlb	0	; () banked
  1805  00B28A  0100               	movlb	0	; () banked
  1806  00B28C  51ED               	movf	_ac6& (0+255),w,b
  1807  00B28E  0100               	movlb	0	; () banked
  1808  00B290  6F81               	movwf	(??_BMP180conversor+1)& (0+255),b
  1809  00B292  0100               	movlb	0	; () banked
  1810  00B294  0100               	movlb	0	; () banked
  1811  00B296  51EE               	movf	(_ac6+1)& (0+255),w,b
  1812  00B298  0100               	movlb	0	; () banked
  1813  00B29A  6F82               	movwf	(??_BMP180conversor+2)& (0+255),b
  1814  00B29C  0100               	movlb	0	; () banked
  1815  00B29E  6B83               	clrf	(??_BMP180conversor+3)& (0+255),b
  1816  00B2A0  0100               	movlb	0	; () banked
  1817  00B2A2  6B84               	clrf	(??_BMP180conversor+4)& (0+255),b
  1818  00B2A4  0100               	movlb	0	; () banked
  1819  00B2A6  1F81               	comf	(??_BMP180conversor+1)& (0+255),f,b
  1820  00B2A8  1F82               	comf	(??_BMP180conversor+2)& (0+255),f,b
  1821  00B2AA  1F83               	comf	(??_BMP180conversor+3)& (0+255),f,b
  1822  00B2AC  1F84               	comf	(??_BMP180conversor+4)& (0+255),f,b
  1823  00B2AE  2B81               	incf	(??_BMP180conversor+1)& (0+255),f,b
  1824  00B2B0  0E00               	movlw	0
  1825  00B2B2  2382               	addwfc	(??_BMP180conversor+2)& (0+255),f,b
  1826  00B2B4  2383               	addwfc	(??_BMP180conversor+3)& (0+255),f,b
  1827  00B2B6  2384               	addwfc	(??_BMP180conversor+4)& (0+255),f,b
  1828  00B2B8  0100               	movlb	0	; () banked
  1829  00B2BA  0100               	movlb	0	; () banked
  1830  00B2BC  51B9               	movf	BMP180conversor@ut& (0+255),w,b
  1831  00B2BE  0100               	movlb	0	; () banked
  1832  00B2C0  2581               	addwf	(??_BMP180conversor+1)& (0+255),w,b
  1833  00B2C2  6E01               	movwf	___lmul@multiplier,c
  1834  00B2C4  0100               	movlb	0	; () banked
  1835  00B2C6  0100               	movlb	0	; () banked
  1836  00B2C8  51BA               	movf	(BMP180conversor@ut+1)& (0+255),w,b
  1837  00B2CA  0100               	movlb	0	; () banked
  1838  00B2CC  2182               	addwfc	(??_BMP180conversor+2)& (0+255),w,b
  1839  00B2CE  6E02               	movwf	___lmul@multiplier+1,c
  1840  00B2D0  0100               	movlb	0	; () banked
  1841  00B2D2  0100               	movlb	0	; () banked
  1842  00B2D4  51BB               	movf	(BMP180conversor@ut+2)& (0+255),w,b
  1843  00B2D6  0100               	movlb	0	; () banked
  1844  00B2D8  2183               	addwfc	(??_BMP180conversor+3)& (0+255),w,b
  1845  00B2DA  6E03               	movwf	___lmul@multiplier+2,c
  1846  00B2DC  0100               	movlb	0	; () banked
  1847  00B2DE  0100               	movlb	0	; () banked
  1848  00B2E0  51BC               	movf	(BMP180conversor@ut+3)& (0+255),w,b
  1849  00B2E2  0100               	movlb	0	; () banked
  1850  00B2E4  2184               	addwfc	(??_BMP180conversor+4)& (0+255),w,b
  1851  00B2E6  6E04               	movwf	___lmul@multiplier+3,c
  1852  00B2E8  0100               	movlb	0	; () banked
  1853  00B2EA  C0EB  F005         	movff	_ac5,___lmul@multiplicand
  1854  00B2EE  0100               	movlb	0	; () banked
  1855  00B2F0  C0EC  F006         	movff	_ac5+1,___lmul@multiplicand+1
  1856  00B2F4  6A07               	clrf	___lmul@multiplicand+2,c
  1857  00B2F6  6A08               	clrf	___lmul@multiplicand+3,c
  1858  00B2F8  EC13  F053         	call	___lmul	;wreg free
  1859  00B2FC  C001  F085         	movff	?___lmul,??_BMP180conversor+5
  1860  00B300  C002  F086         	movff	?___lmul+1,??_BMP180conversor+6
  1861  00B304  C003  F087         	movff	?___lmul+2,??_BMP180conversor+7
  1862  00B308  C004  F088         	movff	?___lmul+3,??_BMP180conversor+8
  1863  00B30C                     u2185:
  1864  00B30C  0100               	movlb	0	; () banked
  1865  00B30E  6780               	tstfsz	??_BMP180conversor& (0+255),b
  1866  00B310  D001               	goto	u2186
  1867  00B312  D009               	goto	u2187
  1868  00B314                     u2186:
  1869  00B314  0100               	movlb	0	; () banked
  1870  00B316  3588               	rlcf	(??_BMP180conversor+8)& (0+255),w,b
  1871  00B318  3388               	rrcf	(??_BMP180conversor+8)& (0+255),f,b
  1872  00B31A  3387               	rrcf	(??_BMP180conversor+7)& (0+255),f,b
  1873  00B31C  3386               	rrcf	(??_BMP180conversor+6)& (0+255),f,b
  1874  00B31E  3385               	rrcf	(??_BMP180conversor+5)& (0+255),f,b
  1875  00B320  0100               	movlb	0	; () banked
  1876  00B322  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  1877  00B324  D7F3               	goto	u2185
  1878  00B326                     u2187:
  1879  00B326  C085  F0E5         	movff	??_BMP180conversor+5,BMP180conversor@x1
  1880  00B32A  C086  F0E6         	movff	??_BMP180conversor+6,BMP180conversor@x1+1
  1881  00B32E  C087  F0E7         	movff	??_BMP180conversor+7,BMP180conversor@x1+2
  1882  00B332  C088  F0E8         	movff	??_BMP180conversor+8,BMP180conversor@x1+3
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;main.c: 231: x2 = ((long) mc * 1 << 11) / (x1 + md);
  1886  00B336  0100               	movlb	0	; () banked
  1887  00B338  C0F1  F080         	movff	_mc,??_BMP180conversor
  1888  00B33C  0100               	movlb	0	; () banked
  1889  00B33E  C0F2  F081         	movff	_mc+1,??_BMP180conversor+1
  1890  00B342  0E00               	movlw	0
  1891  00B344  0100               	movlb	0	; () banked
  1892  00B346  BF81               	btfsc	(??_BMP180conversor+1)& (0+255),7,b
  1893  00B348  0EFF               	movlw	255
  1894  00B34A  6F82               	movwf	(??_BMP180conversor+2)& (0+255),b
  1895  00B34C  6F83               	movwf	(??_BMP180conversor+3)& (0+255),b
  1896  00B34E  0E0B               	movlw	11
  1897  00B350                     u2195:
  1898  00B350  90D8               	bcf	status,0,c
  1899  00B352  0100               	movlb	0	; () banked
  1900  00B354  3780               	rlcf	??_BMP180conversor& (0+255),f,b
  1901  00B356  3781               	rlcf	(??_BMP180conversor+1)& (0+255),f,b
  1902  00B358  3782               	rlcf	(??_BMP180conversor+2)& (0+255),f,b
  1903  00B35A  3783               	rlcf	(??_BMP180conversor+3)& (0+255),f,b
  1904  00B35C  2EE8               	decfsz	wreg,f,c
  1905  00B35E  D7F8               	goto	u2195
  1906  00B360  C080  F001         	movff	??_BMP180conversor,___aldiv@dividend
  1907  00B364  C081  F002         	movff	??_BMP180conversor+1,___aldiv@dividend+1
  1908  00B368  C082  F003         	movff	??_BMP180conversor+2,___aldiv@dividend+2
  1909  00B36C  C083  F004         	movff	??_BMP180conversor+3,___aldiv@dividend+3
  1910  00B370  0100               	movlb	0	; () banked
  1911  00B372  C0F3  F084         	movff	_md,??_BMP180conversor+4
  1912  00B376  0100               	movlb	0	; () banked
  1913  00B378  C0F4  F085         	movff	_md+1,??_BMP180conversor+5
  1914  00B37C  0E00               	movlw	0
  1915  00B37E  0100               	movlb	0	; () banked
  1916  00B380  BF85               	btfsc	(??_BMP180conversor+5)& (0+255),7,b
  1917  00B382  0EFF               	movlw	255
  1918  00B384  6F86               	movwf	(??_BMP180conversor+6)& (0+255),b
  1919  00B386  6F87               	movwf	(??_BMP180conversor+7)& (0+255),b
  1920  00B388  0100               	movlb	0	; () banked
  1921  00B38A  0100               	movlb	0	; () banked
  1922  00B38C  51E5               	movf	BMP180conversor@x1& (0+255),w,b
  1923  00B38E  0100               	movlb	0	; () banked
  1924  00B390  2584               	addwf	(??_BMP180conversor+4)& (0+255),w,b
  1925  00B392  6E05               	movwf	___aldiv@divisor,c
  1926  00B394  0100               	movlb	0	; () banked
  1927  00B396  0100               	movlb	0	; () banked
  1928  00B398  51E6               	movf	(BMP180conversor@x1+1)& (0+255),w,b
  1929  00B39A  0100               	movlb	0	; () banked
  1930  00B39C  2185               	addwfc	(??_BMP180conversor+5)& (0+255),w,b
  1931  00B39E  6E06               	movwf	___aldiv@divisor+1,c
  1932  00B3A0  0100               	movlb	0	; () banked
  1933  00B3A2  0100               	movlb	0	; () banked
  1934  00B3A4  51E7               	movf	(BMP180conversor@x1+2)& (0+255),w,b
  1935  00B3A6  0100               	movlb	0	; () banked
  1936  00B3A8  2186               	addwfc	(??_BMP180conversor+6)& (0+255),w,b
  1937  00B3AA  6E07               	movwf	___aldiv@divisor+2,c
  1938  00B3AC  0100               	movlb	0	; () banked
  1939  00B3AE  0100               	movlb	0	; () banked
  1940  00B3B0  51E8               	movf	(BMP180conversor@x1+3)& (0+255),w,b
  1941  00B3B2  0100               	movlb	0	; () banked
  1942  00B3B4  2187               	addwfc	(??_BMP180conversor+7)& (0+255),w,b
  1943  00B3B6  6E08               	movwf	___aldiv@divisor+3,c
  1944  00B3B8  EC41  F054         	call	___aldiv	;wreg free
  1945  00B3BC  C001  F0E1         	movff	?___aldiv,BMP180conversor@x2
  1946  00B3C0  C002  F0E2         	movff	?___aldiv+1,BMP180conversor@x2+1
  1947  00B3C4  C003  F0E3         	movff	?___aldiv+2,BMP180conversor@x2+2
  1948  00B3C8  C004  F0E4         	movff	?___aldiv+3,BMP180conversor@x2+3
  1949                           
  1950                           ;main.c: 232: b5 = x1 + x2;
  1951  00B3CC  0100               	movlb	0	; () banked
  1952  00B3CE  0100               	movlb	0	; () banked
  1953  00B3D0  51E1               	movf	BMP180conversor@x2& (0+255),w,b
  1954  00B3D2  0100               	movlb	0	; () banked
  1955  00B3D4  0100               	movlb	0	; () banked
  1956  00B3D6  25E5               	addwf	BMP180conversor@x1& (0+255),w,b
  1957  00B3D8  0100               	movlb	0	; () banked
  1958  00B3DA  0100               	movlb	0	; () banked
  1959  00B3DC  6FC1               	movwf	BMP180conversor@b5& (0+255),b
  1960  00B3DE  0100               	movlb	0	; () banked
  1961  00B3E0  0100               	movlb	0	; () banked
  1962  00B3E2  51E2               	movf	(BMP180conversor@x2+1)& (0+255),w,b
  1963  00B3E4  0100               	movlb	0	; () banked
  1964  00B3E6  0100               	movlb	0	; () banked
  1965  00B3E8  21E6               	addwfc	(BMP180conversor@x1+1)& (0+255),w,b
  1966  00B3EA  0100               	movlb	0	; () banked
  1967  00B3EC  6FC2               	movwf	(BMP180conversor@b5+1)& (0+255),b
  1968  00B3EE  0100               	movlb	0	; () banked
  1969  00B3F0  0100               	movlb	0	; () banked
  1970  00B3F2  51E3               	movf	(BMP180conversor@x2+2)& (0+255),w,b
  1971  00B3F4  0100               	movlb	0	; () banked
  1972  00B3F6  0100               	movlb	0	; () banked
  1973  00B3F8  21E7               	addwfc	(BMP180conversor@x1+2)& (0+255),w,b
  1974  00B3FA  0100               	movlb	0	; () banked
  1975  00B3FC  6FC3               	movwf	(BMP180conversor@b5+2)& (0+255),b
  1976  00B3FE  0100               	movlb	0	; () banked
  1977  00B400  0100               	movlb	0	; () banked
  1978  00B402  51E4               	movf	(BMP180conversor@x2+3)& (0+255),w,b
  1979  00B404  0100               	movlb	0	; () banked
  1980  00B406  0100               	movlb	0	; () banked
  1981  00B408  21E8               	addwfc	(BMP180conversor@x1+3)& (0+255),w,b
  1982  00B40A  0100               	movlb	0	; () banked
  1983  00B40C  6FC4               	movwf	(BMP180conversor@b5+3)& (0+255),b
  1984                           
  1985                           ; BSR set to: 0
  1986                           ;main.c: 234: *temp = (b5 + 8) >> 4;
  1987  00B40E  0E04               	movlw	4
  1988  00B410  0100               	movlb	0	; () banked
  1989  00B412  6F80               	movwf	??_BMP180conversor& (0+255),b
  1990  00B414  0E08               	movlw	8
  1991  00B416  0100               	movlb	0	; () banked
  1992  00B418  0100               	movlb	0	; () banked
  1993  00B41A  25C1               	addwf	BMP180conversor@b5& (0+255),w,b
  1994  00B41C  0100               	movlb	0	; () banked
  1995  00B41E  6F81               	movwf	(??_BMP180conversor+1)& (0+255),b
  1996  00B420  0E00               	movlw	0
  1997  00B422  0100               	movlb	0	; () banked
  1998  00B424  0100               	movlb	0	; () banked
  1999  00B426  21C2               	addwfc	(BMP180conversor@b5+1)& (0+255),w,b
  2000  00B428  0100               	movlb	0	; () banked
  2001  00B42A  6F82               	movwf	(??_BMP180conversor+2)& (0+255),b
  2002  00B42C  0E00               	movlw	0
  2003  00B42E  0100               	movlb	0	; () banked
  2004  00B430  0100               	movlb	0	; () banked
  2005  00B432  21C3               	addwfc	(BMP180conversor@b5+2)& (0+255),w,b
  2006  00B434  0100               	movlb	0	; () banked
  2007  00B436  6F83               	movwf	(??_BMP180conversor+3)& (0+255),b
  2008  00B438  0E00               	movlw	0
  2009  00B43A  0100               	movlb	0	; () banked
  2010  00B43C  0100               	movlb	0	; () banked
  2011  00B43E  21C4               	addwfc	(BMP180conversor@b5+3)& (0+255),w,b
  2012  00B440  0100               	movlb	0	; () banked
  2013  00B442  6F84               	movwf	(??_BMP180conversor+4)& (0+255),b
  2014  00B444                     u2205:
  2015  00B444  0100               	movlb	0	; () banked
  2016  00B446  6780               	tstfsz	??_BMP180conversor& (0+255),b
  2017  00B448  D001               	goto	u2206
  2018  00B44A  D009               	goto	u2207
  2019  00B44C                     u2206:
  2020  00B44C  0100               	movlb	0	; () banked
  2021  00B44E  3584               	rlcf	(??_BMP180conversor+4)& (0+255),w,b
  2022  00B450  3384               	rrcf	(??_BMP180conversor+4)& (0+255),f,b
  2023  00B452  3383               	rrcf	(??_BMP180conversor+3)& (0+255),f,b
  2024  00B454  3382               	rrcf	(??_BMP180conversor+2)& (0+255),f,b
  2025  00B456  3381               	rrcf	(??_BMP180conversor+1)& (0+255),f,b
  2026  00B458  0100               	movlb	0	; () banked
  2027  00B45A  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  2028  00B45C  D7F3               	goto	u2205
  2029  00B45E                     u2207:
  2030  00B45E  C06C  FFD9         	movff	BMP180conversor@temp,fsr2l
  2031  00B462  C06D  FFDA         	movff	BMP180conversor@temp+1,fsr2h
  2032  00B466  C081  FFDE         	movff	??_BMP180conversor+1,postinc2
  2033  00B46A  C082  FFDE         	movff	??_BMP180conversor+2,postinc2
  2034  00B46E  C083  FFDE         	movff	??_BMP180conversor+3,postinc2
  2035  00B472  C084  FFDD         	movff	??_BMP180conversor+4,postdec2
  2036  00B476  06D9               	decf	fsr2l,f,c
  2037  00B478  06D9               	decf	fsr2l,f,c
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;main.c: 237: b6 = b5 - 4000;
  2041  00B47A  0E60               	movlw	96
  2042  00B47C  0100               	movlb	0	; () banked
  2043  00B47E  0100               	movlb	0	; () banked
  2044  00B480  25C1               	addwf	BMP180conversor@b5& (0+255),w,b
  2045  00B482  0100               	movlb	0	; () banked
  2046  00B484  0100               	movlb	0	; () banked
  2047  00B486  6FDD               	movwf	BMP180conversor@b6& (0+255),b
  2048  00B488  0EF0               	movlw	240
  2049  00B48A  0100               	movlb	0	; () banked
  2050  00B48C  0100               	movlb	0	; () banked
  2051  00B48E  21C2               	addwfc	(BMP180conversor@b5+1)& (0+255),w,b
  2052  00B490  0100               	movlb	0	; () banked
  2053  00B492  6FDE               	movwf	(BMP180conversor@b6+1)& (0+255),b
  2054  00B494  0EFF               	movlw	255
  2055  00B496  0100               	movlb	0	; () banked
  2056  00B498  0100               	movlb	0	; () banked
  2057  00B49A  21C3               	addwfc	(BMP180conversor@b5+2)& (0+255),w,b
  2058  00B49C  0100               	movlb	0	; () banked
  2059  00B49E  6FDF               	movwf	(BMP180conversor@b6+2)& (0+255),b
  2060  00B4A0  0EFF               	movlw	255
  2061  00B4A2  0100               	movlb	0	; () banked
  2062  00B4A4  0100               	movlb	0	; () banked
  2063  00B4A6  21C4               	addwfc	(BMP180conversor@b5+3)& (0+255),w,b
  2064  00B4A8  0100               	movlb	0	; () banked
  2065  00B4AA  6FE0               	movwf	(BMP180conversor@b6+3)& (0+255),b
  2066                           
  2067                           ; BSR set to: 0
  2068                           ;main.c: 238: x1 = (b2 * (b6 * b6 >> 12)) >> 11;
  2069  00B4AC  0E0C               	movlw	12
  2070  00B4AE  0100               	movlb	0	; () banked
  2071  00B4B0  6F80               	movwf	??_BMP180conversor& (0+255),b
  2072  00B4B2  C0DD  F005         	movff	BMP180conversor@b6,___lmul@multiplicand
  2073  00B4B6  C0DE  F006         	movff	BMP180conversor@b6+1,___lmul@multiplicand+1
  2074  00B4BA  C0DF  F007         	movff	BMP180conversor@b6+2,___lmul@multiplicand+2
  2075  00B4BE  C0E0  F008         	movff	BMP180conversor@b6+3,___lmul@multiplicand+3
  2076  00B4C2  C0DD  F001         	movff	BMP180conversor@b6,___lmul@multiplier
  2077  00B4C6  C0DE  F002         	movff	BMP180conversor@b6+1,___lmul@multiplier+1
  2078  00B4CA  C0DF  F003         	movff	BMP180conversor@b6+2,___lmul@multiplier+2
  2079  00B4CE  C0E0  F004         	movff	BMP180conversor@b6+3,___lmul@multiplier+3
  2080  00B4D2  EC13  F053         	call	___lmul	;wreg free
  2081  00B4D6  C001  F081         	movff	?___lmul,??_BMP180conversor+1
  2082  00B4DA  C002  F082         	movff	?___lmul+1,??_BMP180conversor+2
  2083  00B4DE  C003  F083         	movff	?___lmul+2,??_BMP180conversor+3
  2084  00B4E2  C004  F084         	movff	?___lmul+3,??_BMP180conversor+4
  2085  00B4E6                     u2215:
  2086  00B4E6  0100               	movlb	0	; () banked
  2087  00B4E8  6780               	tstfsz	??_BMP180conversor& (0+255),b
  2088  00B4EA  D001               	goto	u2216
  2089  00B4EC  D009               	goto	u2217
  2090  00B4EE                     u2216:
  2091  00B4EE  0100               	movlb	0	; () banked
  2092  00B4F0  3584               	rlcf	(??_BMP180conversor+4)& (0+255),w,b
  2093  00B4F2  3384               	rrcf	(??_BMP180conversor+4)& (0+255),f,b
  2094  00B4F4  3383               	rrcf	(??_BMP180conversor+3)& (0+255),f,b
  2095  00B4F6  3382               	rrcf	(??_BMP180conversor+2)& (0+255),f,b
  2096  00B4F8  3381               	rrcf	(??_BMP180conversor+1)& (0+255),f,b
  2097  00B4FA  0100               	movlb	0	; () banked
  2098  00B4FC  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  2099  00B4FE  D7F3               	goto	u2215
  2100  00B500                     u2217:
  2101  00B500  C081  F0C9         	movff	??_BMP180conversor+1,_BMP180conversor$1874
  2102  00B504  C082  F0CA         	movff	??_BMP180conversor+2,_BMP180conversor$1874+1
  2103  00B508  C083  F0CB         	movff	??_BMP180conversor+3,_BMP180conversor$1874+2
  2104  00B50C  C084  F0CC         	movff	??_BMP180conversor+4,_BMP180conversor$1874+3
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;main.c: 238: x1 = (b2 * (b6 * b6 >> 12)) >> 11;
  2108  00B510  0E0B               	movlw	11
  2109  00B512  0100               	movlb	0	; () banked
  2110  00B514  6F80               	movwf	??_BMP180conversor& (0+255),b
  2111  00B516  C07D  F001         	movff	_b2,___lmul@multiplier
  2112  00B51A  C07E  F002         	movff	_b2+1,___lmul@multiplier+1
  2113  00B51E  0E00               	movlw	0
  2114  00B520  BE02               	btfsc	___lmul@multiplier+1,7,c
  2115  00B522  0EFF               	movlw	-1
  2116  00B524  6E03               	movwf	___lmul@multiplier+2,c
  2117  00B526  6E04               	movwf	___lmul@multiplier+3,c
  2118  00B528  C0C9  F005         	movff	_BMP180conversor$1874,___lmul@multiplicand
  2119  00B52C  C0CA  F006         	movff	_BMP180conversor$1874+1,___lmul@multiplicand+1
  2120  00B530  C0CB  F007         	movff	_BMP180conversor$1874+2,___lmul@multiplicand+2
  2121  00B534  C0CC  F008         	movff	_BMP180conversor$1874+3,___lmul@multiplicand+3
  2122  00B538  EC13  F053         	call	___lmul	;wreg free
  2123  00B53C  C001  F081         	movff	?___lmul,??_BMP180conversor+1
  2124  00B540  C002  F082         	movff	?___lmul+1,??_BMP180conversor+2
  2125  00B544  C003  F083         	movff	?___lmul+2,??_BMP180conversor+3
  2126  00B548  C004  F084         	movff	?___lmul+3,??_BMP180conversor+4
  2127  00B54C                     u2225:
  2128  00B54C  0100               	movlb	0	; () banked
  2129  00B54E  6780               	tstfsz	??_BMP180conversor& (0+255),b
  2130  00B550  D001               	goto	u2226
  2131  00B552  D009               	goto	u2227
  2132  00B554                     u2226:
  2133  00B554  0100               	movlb	0	; () banked
  2134  00B556  3584               	rlcf	(??_BMP180conversor+4)& (0+255),w,b
  2135  00B558  3384               	rrcf	(??_BMP180conversor+4)& (0+255),f,b
  2136  00B55A  3383               	rrcf	(??_BMP180conversor+3)& (0+255),f,b
  2137  00B55C  3382               	rrcf	(??_BMP180conversor+2)& (0+255),f,b
  2138  00B55E  3381               	rrcf	(??_BMP180conversor+1)& (0+255),f,b
  2139  00B560  0100               	movlb	0	; () banked
  2140  00B562  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  2141  00B564  D7F3               	goto	u2225
  2142  00B566                     u2227:
  2143  00B566  C081  F0E5         	movff	??_BMP180conversor+1,BMP180conversor@x1
  2144  00B56A  C082  F0E6         	movff	??_BMP180conversor+2,BMP180conversor@x1+1
  2145  00B56E  C083  F0E7         	movff	??_BMP180conversor+3,BMP180conversor@x1+2
  2146  00B572  C084  F0E8         	movff	??_BMP180conversor+4,BMP180conversor@x1+3
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;main.c: 239: x2 = ac2 * b6 >> 11;
  2150  00B576  0E0B               	movlw	11
  2151  00B578  0100               	movlb	0	; () banked
  2152  00B57A  6F80               	movwf	??_BMP180conversor& (0+255),b
  2153  00B57C  C077  F001         	movff	_ac2,___lmul@multiplier
  2154  00B580  C078  F002         	movff	_ac2+1,___lmul@multiplier+1
  2155  00B584  0E00               	movlw	0
  2156  00B586  BE02               	btfsc	___lmul@multiplier+1,7,c
  2157  00B588  0EFF               	movlw	-1
  2158  00B58A  6E03               	movwf	___lmul@multiplier+2,c
  2159  00B58C  6E04               	movwf	___lmul@multiplier+3,c
  2160  00B58E  C0DD  F005         	movff	BMP180conversor@b6,___lmul@multiplicand
  2161  00B592  C0DE  F006         	movff	BMP180conversor@b6+1,___lmul@multiplicand+1
  2162  00B596  C0DF  F007         	movff	BMP180conversor@b6+2,___lmul@multiplicand+2
  2163  00B59A  C0E0  F008         	movff	BMP180conversor@b6+3,___lmul@multiplicand+3
  2164  00B59E  EC13  F053         	call	___lmul	;wreg free
  2165  00B5A2  C001  F081         	movff	?___lmul,??_BMP180conversor+1
  2166  00B5A6  C002  F082         	movff	?___lmul+1,??_BMP180conversor+2
  2167  00B5AA  C003  F083         	movff	?___lmul+2,??_BMP180conversor+3
  2168  00B5AE  C004  F084         	movff	?___lmul+3,??_BMP180conversor+4
  2169  00B5B2                     u2235:
  2170  00B5B2  0100               	movlb	0	; () banked
  2171  00B5B4  6780               	tstfsz	??_BMP180conversor& (0+255),b
  2172  00B5B6  D001               	goto	u2236
  2173  00B5B8  D009               	goto	u2237
  2174  00B5BA                     u2236:
  2175  00B5BA  0100               	movlb	0	; () banked
  2176  00B5BC  3584               	rlcf	(??_BMP180conversor+4)& (0+255),w,b
  2177  00B5BE  3384               	rrcf	(??_BMP180conversor+4)& (0+255),f,b
  2178  00B5C0  3383               	rrcf	(??_BMP180conversor+3)& (0+255),f,b
  2179  00B5C2  3382               	rrcf	(??_BMP180conversor+2)& (0+255),f,b
  2180  00B5C4  3381               	rrcf	(??_BMP180conversor+1)& (0+255),f,b
  2181  00B5C6  0100               	movlb	0	; () banked
  2182  00B5C8  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  2183  00B5CA  D7F3               	goto	u2235
  2184  00B5CC                     u2237:
  2185  00B5CC  C081  F0E1         	movff	??_BMP180conversor+1,BMP180conversor@x2
  2186  00B5D0  C082  F0E2         	movff	??_BMP180conversor+2,BMP180conversor@x2+1
  2187  00B5D4  C083  F0E3         	movff	??_BMP180conversor+3,BMP180conversor@x2+2
  2188  00B5D8  C084  F0E4         	movff	??_BMP180conversor+4,BMP180conversor@x2+3
  2189                           
  2190                           ; BSR set to: 0
  2191                           ;main.c: 240: x3 = x1 + x2;
  2192  00B5DC  0100               	movlb	0	; () banked
  2193  00B5DE  0100               	movlb	0	; () banked
  2194  00B5E0  51E1               	movf	BMP180conversor@x2& (0+255),w,b
  2195  00B5E2  0100               	movlb	0	; () banked
  2196  00B5E4  0100               	movlb	0	; () banked
  2197  00B5E6  25E5               	addwf	BMP180conversor@x1& (0+255),w,b
  2198  00B5E8  0100               	movlb	0	; () banked
  2199  00B5EA  0100               	movlb	0	; () banked
  2200  00B5EC  6FD5               	movwf	BMP180conversor@x3& (0+255),b
  2201  00B5EE  0100               	movlb	0	; () banked
  2202  00B5F0  0100               	movlb	0	; () banked
  2203  00B5F2  51E2               	movf	(BMP180conversor@x2+1)& (0+255),w,b
  2204  00B5F4  0100               	movlb	0	; () banked
  2205  00B5F6  0100               	movlb	0	; () banked
  2206  00B5F8  21E6               	addwfc	(BMP180conversor@x1+1)& (0+255),w,b
  2207  00B5FA  0100               	movlb	0	; () banked
  2208  00B5FC  6FD6               	movwf	(BMP180conversor@x3+1)& (0+255),b
  2209  00B5FE  0100               	movlb	0	; () banked
  2210  00B600  0100               	movlb	0	; () banked
  2211  00B602  51E3               	movf	(BMP180conversor@x2+2)& (0+255),w,b
  2212  00B604  0100               	movlb	0	; () banked
  2213  00B606  0100               	movlb	0	; () banked
  2214  00B608  21E7               	addwfc	(BMP180conversor@x1+2)& (0+255),w,b
  2215  00B60A  0100               	movlb	0	; () banked
  2216  00B60C  6FD7               	movwf	(BMP180conversor@x3+2)& (0+255),b
  2217  00B60E  0100               	movlb	0	; () banked
  2218  00B610  0100               	movlb	0	; () banked
  2219  00B612  51E4               	movf	(BMP180conversor@x2+3)& (0+255),w,b
  2220  00B614  0100               	movlb	0	; () banked
  2221  00B616  0100               	movlb	0	; () banked
  2222  00B618  21E8               	addwfc	(BMP180conversor@x1+3)& (0+255),w,b
  2223  00B61A  0100               	movlb	0	; () banked
  2224  00B61C  6FD8               	movwf	(BMP180conversor@x3+3)& (0+255),b
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;main.c: 242: sprintf(msg,"    ( x1=%d x2=%d x3=%d )\r\n", x1, x2, x3);
  2228  00B61E  0100               	movlb	0	; () banked
  2229  00B620  0E00               	movlw	high BMP180conversor@msg
  2230  00B622  6E11               	movwf	sprintf@sp+1,c
  2231  00B624  0100               	movlb	0	; () banked
  2232  00B626  0E91               	movlw	low BMP180conversor@msg
  2233  00B628  6E10               	movwf	sprintf@sp,c
  2234  00B62A  0EBE               	movlw	high STR_5
  2235  00B62C  6E13               	movwf	sprintf@f+1,c
  2236  00B62E  0EAA               	movlw	low STR_5
  2237  00B630  6E12               	movwf	sprintf@f,c
  2238  00B632  C0E5  F014         	movff	BMP180conversor@x1,?_sprintf+4
  2239  00B636  C0E6  F015         	movff	BMP180conversor@x1+1,?_sprintf+5
  2240  00B63A  C0E7  F016         	movff	BMP180conversor@x1+2,?_sprintf+6
  2241  00B63E  C0E8  F017         	movff	BMP180conversor@x1+3,?_sprintf+7
  2242  00B642  C0E1  F018         	movff	BMP180conversor@x2,?_sprintf+8
  2243  00B646  C0E2  F019         	movff	BMP180conversor@x2+1,?_sprintf+9
  2244  00B64A  C0E3  F01A         	movff	BMP180conversor@x2+2,?_sprintf+10
  2245  00B64E  C0E4  F01B         	movff	BMP180conversor@x2+3,?_sprintf+11
  2246  00B652  C0D5  F01C         	movff	BMP180conversor@x3,?_sprintf+12
  2247  00B656  C0D6  F01D         	movff	BMP180conversor@x3+1,?_sprintf+13
  2248  00B65A  C0D7  F01E         	movff	BMP180conversor@x3+2,?_sprintf+14
  2249  00B65E  C0D8  F01F         	movff	BMP180conversor@x3+3,?_sprintf+15
  2250  00B662  EC42  F057         	call	_sprintf	;wreg free
  2251  00B666                     l138:
  2252  00B666  A2AC               	btfss	4012,1,c	;volatile
  2253  00B668  D7FE               	goto	l138
  2254  00B66A  0100               	movlb	0	; () banked
  2255  00B66C  0E00               	movlw	high BMP180conversor@msg
  2256  00B66E  6E03               	movwf	putsUSART@data+1,c
  2257  00B670  0100               	movlb	0	; () banked
  2258  00B672  0E91               	movlw	low BMP180conversor@msg
  2259  00B674  6E02               	movwf	putsUSART@data,c
  2260  00B676  ECFA  F051         	call	_putsUSART	;wreg free
  2261                           
  2262                           ;main.c: 247: b3 = ( ( ((long) ac1 * 4 + x3) << 1) +2 ) >> 2;
  2263  00B67A  0E02               	movlw	2
  2264  00B67C  0100               	movlb	0	; () banked
  2265  00B67E  6F80               	movwf	??_BMP180conversor& (0+255),b
  2266  00B680  C075  F081         	movff	_ac1,??_BMP180conversor+1
  2267  00B684  C076  F082         	movff	_ac1+1,??_BMP180conversor+2
  2268  00B688  0E00               	movlw	0
  2269  00B68A  0100               	movlb	0	; () banked
  2270  00B68C  BF82               	btfsc	(??_BMP180conversor+2)& (0+255),7,b
  2271  00B68E  0EFF               	movlw	255
  2272  00B690  6F83               	movwf	(??_BMP180conversor+3)& (0+255),b
  2273  00B692  6F84               	movwf	(??_BMP180conversor+4)& (0+255),b
  2274  00B694  0E02               	movlw	2
  2275  00B696                     u2255:
  2276  00B696  90D8               	bcf	status,0,c
  2277  00B698  0100               	movlb	0	; () banked
  2278  00B69A  3781               	rlcf	(??_BMP180conversor+1)& (0+255),f,b
  2279  00B69C  3782               	rlcf	(??_BMP180conversor+2)& (0+255),f,b
  2280  00B69E  3783               	rlcf	(??_BMP180conversor+3)& (0+255),f,b
  2281  00B6A0  3784               	rlcf	(??_BMP180conversor+4)& (0+255),f,b
  2282  00B6A2  2EE8               	decfsz	wreg,f,c
  2283  00B6A4  D7F8               	goto	u2255
  2284  00B6A6  0100               	movlb	0	; () banked
  2285  00B6A8  0100               	movlb	0	; () banked
  2286  00B6AA  51D5               	movf	BMP180conversor@x3& (0+255),w,b
  2287  00B6AC  0100               	movlb	0	; () banked
  2288  00B6AE  2581               	addwf	(??_BMP180conversor+1)& (0+255),w,b
  2289  00B6B0  0100               	movlb	0	; () banked
  2290  00B6B2  6F85               	movwf	(??_BMP180conversor+5)& (0+255),b
  2291  00B6B4  0100               	movlb	0	; () banked
  2292  00B6B6  0100               	movlb	0	; () banked
  2293  00B6B8  51D6               	movf	(BMP180conversor@x3+1)& (0+255),w,b
  2294  00B6BA  0100               	movlb	0	; () banked
  2295  00B6BC  2182               	addwfc	(??_BMP180conversor+2)& (0+255),w,b
  2296  00B6BE  0100               	movlb	0	; () banked
  2297  00B6C0  6F86               	movwf	(??_BMP180conversor+6)& (0+255),b
  2298  00B6C2  0100               	movlb	0	; () banked
  2299  00B6C4  0100               	movlb	0	; () banked
  2300  00B6C6  51D7               	movf	(BMP180conversor@x3+2)& (0+255),w,b
  2301  00B6C8  0100               	movlb	0	; () banked
  2302  00B6CA  2183               	addwfc	(??_BMP180conversor+3)& (0+255),w,b
  2303  00B6CC  0100               	movlb	0	; () banked
  2304  00B6CE  6F87               	movwf	(??_BMP180conversor+7)& (0+255),b
  2305  00B6D0  0100               	movlb	0	; () banked
  2306  00B6D2  0100               	movlb	0	; () banked
  2307  00B6D4  51D8               	movf	(BMP180conversor@x3+3)& (0+255),w,b
  2308  00B6D6  0100               	movlb	0	; () banked
  2309  00B6D8  2184               	addwfc	(??_BMP180conversor+4)& (0+255),w,b
  2310  00B6DA  0100               	movlb	0	; () banked
  2311  00B6DC  6F88               	movwf	(??_BMP180conversor+8)& (0+255),b
  2312  00B6DE  90D8               	bcf	status,0,c
  2313  00B6E0  0100               	movlb	0	; () banked
  2314  00B6E2  3585               	rlcf	(??_BMP180conversor+5)& (0+255),w,b
  2315  00B6E4  0100               	movlb	0	; () banked
  2316  00B6E6  6F89               	movwf	(??_BMP180conversor+9)& (0+255),b
  2317  00B6E8  0100               	movlb	0	; () banked
  2318  00B6EA  3586               	rlcf	(??_BMP180conversor+6)& (0+255),w,b
  2319  00B6EC  0100               	movlb	0	; () banked
  2320  00B6EE  6F8A               	movwf	(??_BMP180conversor+10)& (0+255),b
  2321  00B6F0  0100               	movlb	0	; () banked
  2322  00B6F2  3587               	rlcf	(??_BMP180conversor+7)& (0+255),w,b
  2323  00B6F4  0100               	movlb	0	; () banked
  2324  00B6F6  6F8B               	movwf	(??_BMP180conversor+11)& (0+255),b
  2325  00B6F8  0100               	movlb	0	; () banked
  2326  00B6FA  3588               	rlcf	(??_BMP180conversor+8)& (0+255),w,b
  2327  00B6FC  0100               	movlb	0	; () banked
  2328  00B6FE  6F8C               	movwf	(??_BMP180conversor+12)& (0+255),b
  2329  00B700  0E02               	movlw	2
  2330  00B702  0100               	movlb	0	; () banked
  2331  00B704  2589               	addwf	(??_BMP180conversor+9)& (0+255),w,b
  2332  00B706  0100               	movlb	0	; () banked
  2333  00B708  6F8D               	movwf	(??_BMP180conversor+13)& (0+255),b
  2334  00B70A  0E00               	movlw	0
  2335  00B70C  0100               	movlb	0	; () banked
  2336  00B70E  218A               	addwfc	(??_BMP180conversor+10)& (0+255),w,b
  2337  00B710  0100               	movlb	0	; () banked
  2338  00B712  6F8E               	movwf	(??_BMP180conversor+14)& (0+255),b
  2339  00B714  0E00               	movlw	0
  2340  00B716  0100               	movlb	0	; () banked
  2341  00B718  218B               	addwfc	(??_BMP180conversor+11)& (0+255),w,b
  2342  00B71A  0100               	movlb	0	; () banked
  2343  00B71C  6F8F               	movwf	(??_BMP180conversor+15)& (0+255),b
  2344  00B71E  0E00               	movlw	0
  2345  00B720  0100               	movlb	0	; () banked
  2346  00B722  218C               	addwfc	(??_BMP180conversor+12)& (0+255),w,b
  2347  00B724  0100               	movlb	0	; () banked
  2348  00B726  6F90               	movwf	(??_BMP180conversor+16)& (0+255),b
  2349  00B728                     u2265:
  2350  00B728  0100               	movlb	0	; () banked
  2351  00B72A  6780               	tstfsz	??_BMP180conversor& (0+255),b
  2352  00B72C  D001               	goto	u2266
  2353  00B72E  D009               	goto	u2267
  2354  00B730                     u2266:
  2355  00B730  0100               	movlb	0	; () banked
  2356  00B732  3590               	rlcf	(??_BMP180conversor+16)& (0+255),w,b
  2357  00B734  3390               	rrcf	(??_BMP180conversor+16)& (0+255),f,b
  2358  00B736  338F               	rrcf	(??_BMP180conversor+15)& (0+255),f,b
  2359  00B738  338E               	rrcf	(??_BMP180conversor+14)& (0+255),f,b
  2360  00B73A  338D               	rrcf	(??_BMP180conversor+13)& (0+255),f,b
  2361  00B73C  0100               	movlb	0	; () banked
  2362  00B73E  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  2363  00B740  D7F3               	goto	u2265
  2364  00B742                     u2267:
  2365  00B742  C08D  F0C5         	movff	??_BMP180conversor+13,BMP180conversor@b3
  2366  00B746  C08E  F0C6         	movff	??_BMP180conversor+14,BMP180conversor@b3+1
  2367  00B74A  C08F  F0C7         	movff	??_BMP180conversor+15,BMP180conversor@b3+2
  2368  00B74E  C090  F0C8         	movff	??_BMP180conversor+16,BMP180conversor@b3+3
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;main.c: 249: sprintf(msg,"    ( b3=%d e ac1=%d )\r\n", b3, ac1);
  2372  00B752  0100               	movlb	0	; () banked
  2373  00B754  0E00               	movlw	high BMP180conversor@msg
  2374  00B756  6E11               	movwf	sprintf@sp+1,c
  2375  00B758  0100               	movlb	0	; () banked
  2376  00B75A  0E91               	movlw	low BMP180conversor@msg
  2377  00B75C  6E10               	movwf	sprintf@sp,c
  2378  00B75E  0EBF               	movlw	high STR_6
  2379  00B760  6E13               	movwf	sprintf@f+1,c
  2380  00B762  0E34               	movlw	low STR_6
  2381  00B764  6E12               	movwf	sprintf@f,c
  2382  00B766  C0C5  F014         	movff	BMP180conversor@b3,?_sprintf+4
  2383  00B76A  C0C6  F015         	movff	BMP180conversor@b3+1,?_sprintf+5
  2384  00B76E  C0C7  F016         	movff	BMP180conversor@b3+2,?_sprintf+6
  2385  00B772  C0C8  F017         	movff	BMP180conversor@b3+3,?_sprintf+7
  2386  00B776  C075  F018         	movff	_ac1,?_sprintf+8
  2387  00B77A  C076  F019         	movff	_ac1+1,?_sprintf+9
  2388  00B77E  EC42  F057         	call	_sprintf	;wreg free
  2389  00B782                     l141:
  2390  00B782  A2AC               	btfss	4012,1,c	;volatile
  2391  00B784  D7FE               	goto	l141
  2392  00B786  0100               	movlb	0	; () banked
  2393  00B788  0E00               	movlw	high BMP180conversor@msg
  2394  00B78A  6E03               	movwf	putsUSART@data+1,c
  2395  00B78C  0100               	movlb	0	; () banked
  2396  00B78E  0E91               	movlw	low BMP180conversor@msg
  2397  00B790  6E02               	movwf	putsUSART@data,c
  2398  00B792  ECFA  F051         	call	_putsUSART	;wreg free
  2399                           
  2400                           ;main.c: 253: x1 = ac3 * b6 >> 13;
  2401  00B796  0E0D               	movlw	13
  2402  00B798  0100               	movlb	0	; () banked
  2403  00B79A  6F80               	movwf	??_BMP180conversor& (0+255),b
  2404  00B79C  C079  F001         	movff	_ac3,___lmul@multiplier
  2405  00B7A0  C07A  F002         	movff	_ac3+1,___lmul@multiplier+1
  2406  00B7A4  0E00               	movlw	0
  2407  00B7A6  BE02               	btfsc	___lmul@multiplier+1,7,c
  2408  00B7A8  0EFF               	movlw	-1
  2409  00B7AA  6E03               	movwf	___lmul@multiplier+2,c
  2410  00B7AC  6E04               	movwf	___lmul@multiplier+3,c
  2411  00B7AE  C0DD  F005         	movff	BMP180conversor@b6,___lmul@multiplicand
  2412  00B7B2  C0DE  F006         	movff	BMP180conversor@b6+1,___lmul@multiplicand+1
  2413  00B7B6  C0DF  F007         	movff	BMP180conversor@b6+2,___lmul@multiplicand+2
  2414  00B7BA  C0E0  F008         	movff	BMP180conversor@b6+3,___lmul@multiplicand+3
  2415  00B7BE  EC13  F053         	call	___lmul	;wreg free
  2416  00B7C2  C001  F081         	movff	?___lmul,??_BMP180conversor+1
  2417  00B7C6  C002  F082         	movff	?___lmul+1,??_BMP180conversor+2
  2418  00B7CA  C003  F083         	movff	?___lmul+2,??_BMP180conversor+3
  2419  00B7CE  C004  F084         	movff	?___lmul+3,??_BMP180conversor+4
  2420  00B7D2                     u2285:
  2421  00B7D2  0100               	movlb	0	; () banked
  2422  00B7D4  6780               	tstfsz	??_BMP180conversor& (0+255),b
  2423  00B7D6  D001               	goto	u2286
  2424  00B7D8  D009               	goto	u2287
  2425  00B7DA                     u2286:
  2426  00B7DA  0100               	movlb	0	; () banked
  2427  00B7DC  3584               	rlcf	(??_BMP180conversor+4)& (0+255),w,b
  2428  00B7DE  3384               	rrcf	(??_BMP180conversor+4)& (0+255),f,b
  2429  00B7E0  3383               	rrcf	(??_BMP180conversor+3)& (0+255),f,b
  2430  00B7E2  3382               	rrcf	(??_BMP180conversor+2)& (0+255),f,b
  2431  00B7E4  3381               	rrcf	(??_BMP180conversor+1)& (0+255),f,b
  2432  00B7E6  0100               	movlb	0	; () banked
  2433  00B7E8  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  2434  00B7EA  D7F3               	goto	u2285
  2435  00B7EC                     u2287:
  2436  00B7EC  C081  F0E5         	movff	??_BMP180conversor+1,BMP180conversor@x1
  2437  00B7F0  C082  F0E6         	movff	??_BMP180conversor+2,BMP180conversor@x1+1
  2438  00B7F4  C083  F0E7         	movff	??_BMP180conversor+3,BMP180conversor@x1+2
  2439  00B7F8  C084  F0E8         	movff	??_BMP180conversor+4,BMP180conversor@x1+3
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;main.c: 254: x2 = (b1 * (b6 * b6 >> 12)) >> 16;
  2443  00B7FC  0E0C               	movlw	12
  2444  00B7FE  0100               	movlb	0	; () banked
  2445  00B800  6F80               	movwf	??_BMP180conversor& (0+255),b
  2446  00B802  C0DD  F005         	movff	BMP180conversor@b6,___lmul@multiplicand
  2447  00B806  C0DE  F006         	movff	BMP180conversor@b6+1,___lmul@multiplicand+1
  2448  00B80A  C0DF  F007         	movff	BMP180conversor@b6+2,___lmul@multiplicand+2
  2449  00B80E  C0E0  F008         	movff	BMP180conversor@b6+3,___lmul@multiplicand+3
  2450  00B812  C0DD  F001         	movff	BMP180conversor@b6,___lmul@multiplier
  2451  00B816  C0DE  F002         	movff	BMP180conversor@b6+1,___lmul@multiplier+1
  2452  00B81A  C0DF  F003         	movff	BMP180conversor@b6+2,___lmul@multiplier+2
  2453  00B81E  C0E0  F004         	movff	BMP180conversor@b6+3,___lmul@multiplier+3
  2454  00B822  EC13  F053         	call	___lmul	;wreg free
  2455  00B826  C001  F081         	movff	?___lmul,??_BMP180conversor+1
  2456  00B82A  C002  F082         	movff	?___lmul+1,??_BMP180conversor+2
  2457  00B82E  C003  F083         	movff	?___lmul+2,??_BMP180conversor+3
  2458  00B832  C004  F084         	movff	?___lmul+3,??_BMP180conversor+4
  2459  00B836                     u2295:
  2460  00B836  0100               	movlb	0	; () banked
  2461  00B838  6780               	tstfsz	??_BMP180conversor& (0+255),b
  2462  00B83A  D001               	goto	u2296
  2463  00B83C  D009               	goto	u2297
  2464  00B83E                     u2296:
  2465  00B83E  0100               	movlb	0	; () banked
  2466  00B840  3584               	rlcf	(??_BMP180conversor+4)& (0+255),w,b
  2467  00B842  3384               	rrcf	(??_BMP180conversor+4)& (0+255),f,b
  2468  00B844  3383               	rrcf	(??_BMP180conversor+3)& (0+255),f,b
  2469  00B846  3382               	rrcf	(??_BMP180conversor+2)& (0+255),f,b
  2470  00B848  3381               	rrcf	(??_BMP180conversor+1)& (0+255),f,b
  2471  00B84A  0100               	movlb	0	; () banked
  2472  00B84C  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  2473  00B84E  D7F3               	goto	u2295
  2474  00B850                     u2297:
  2475  00B850  C081  F0C9         	movff	??_BMP180conversor+1,_BMP180conversor$1874
  2476  00B854  C082  F0CA         	movff	??_BMP180conversor+2,_BMP180conversor$1874+1
  2477  00B858  C083  F0CB         	movff	??_BMP180conversor+3,_BMP180conversor$1874+2
  2478  00B85C  C084  F0CC         	movff	??_BMP180conversor+4,_BMP180conversor$1874+3
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;main.c: 254: x2 = (b1 * (b6 * b6 >> 12)) >> 16;
  2482  00B860  C07B  F001         	movff	_b1,___lmul@multiplier
  2483  00B864  C07C  F002         	movff	_b1+1,___lmul@multiplier+1
  2484  00B868  0E00               	movlw	0
  2485  00B86A  BE02               	btfsc	___lmul@multiplier+1,7,c
  2486  00B86C  0EFF               	movlw	-1
  2487  00B86E  6E03               	movwf	___lmul@multiplier+2,c
  2488  00B870  6E04               	movwf	___lmul@multiplier+3,c
  2489  00B872  C0C9  F005         	movff	_BMP180conversor$1874,___lmul@multiplicand
  2490  00B876  C0CA  F006         	movff	_BMP180conversor$1874+1,___lmul@multiplicand+1
  2491  00B87A  C0CB  F007         	movff	_BMP180conversor$1874+2,___lmul@multiplicand+2
  2492  00B87E  C0CC  F008         	movff	_BMP180conversor$1874+3,___lmul@multiplicand+3
  2493  00B882  EC13  F053         	call	___lmul	;wreg free
  2494  00B886  C001  F080         	movff	?___lmul,??_BMP180conversor
  2495  00B88A  C002  F081         	movff	?___lmul+1,??_BMP180conversor+1
  2496  00B88E  C003  F082         	movff	?___lmul+2,??_BMP180conversor+2
  2497  00B892  C004  F083         	movff	?___lmul+3,??_BMP180conversor+3
  2498  00B896  0100               	movlb	0	; () banked
  2499  00B898  C082  F0E1         	movff	??_BMP180conversor+2,BMP180conversor@x2
  2500  00B89C  0100               	movlb	0	; () banked
  2501  00B89E  C083  F0E2         	movff	??_BMP180conversor+3,BMP180conversor@x2+1
  2502  00B8A2  0100               	movlb	0	; () banked
  2503  00B8A4  0100               	movlb	0	; () banked
  2504  00B8A6  6BE3               	clrf	(BMP180conversor@x2+2)& (0+255),b
  2505  00B8A8  0100               	movlb	0	; () banked
  2506  00B8AA  6BE4               	clrf	(BMP180conversor@x2+3)& (0+255),b
  2507                           
  2508                           ; BSR set to: 0
  2509                           ;main.c: 255: x3 = ((x1 + x2) + 2) >> 2;
  2510  00B8AC  0E02               	movlw	2
  2511  00B8AE  0100               	movlb	0	; () banked
  2512  00B8B0  6F80               	movwf	??_BMP180conversor& (0+255),b
  2513  00B8B2  0100               	movlb	0	; () banked
  2514  00B8B4  0100               	movlb	0	; () banked
  2515  00B8B6  51E1               	movf	BMP180conversor@x2& (0+255),w,b
  2516  00B8B8  0100               	movlb	0	; () banked
  2517  00B8BA  0100               	movlb	0	; () banked
  2518  00B8BC  25E5               	addwf	BMP180conversor@x1& (0+255),w,b
  2519  00B8BE  0100               	movlb	0	; () banked
  2520  00B8C0  6F81               	movwf	(??_BMP180conversor+1)& (0+255),b
  2521  00B8C2  0100               	movlb	0	; () banked
  2522  00B8C4  0100               	movlb	0	; () banked
  2523  00B8C6  51E2               	movf	(BMP180conversor@x2+1)& (0+255),w,b
  2524  00B8C8  0100               	movlb	0	; () banked
  2525  00B8CA  0100               	movlb	0	; () banked
  2526  00B8CC  21E6               	addwfc	(BMP180conversor@x1+1)& (0+255),w,b
  2527  00B8CE  0100               	movlb	0	; () banked
  2528  00B8D0  6F82               	movwf	(??_BMP180conversor+2)& (0+255),b
  2529  00B8D2  0100               	movlb	0	; () banked
  2530  00B8D4  0100               	movlb	0	; () banked
  2531  00B8D6  51E3               	movf	(BMP180conversor@x2+2)& (0+255),w,b
  2532  00B8D8  0100               	movlb	0	; () banked
  2533  00B8DA  0100               	movlb	0	; () banked
  2534  00B8DC  21E7               	addwfc	(BMP180conversor@x1+2)& (0+255),w,b
  2535  00B8DE  0100               	movlb	0	; () banked
  2536  00B8E0  6F83               	movwf	(??_BMP180conversor+3)& (0+255),b
  2537  00B8E2  0100               	movlb	0	; () banked
  2538  00B8E4  0100               	movlb	0	; () banked
  2539  00B8E6  51E4               	movf	(BMP180conversor@x2+3)& (0+255),w,b
  2540  00B8E8  0100               	movlb	0	; () banked
  2541  00B8EA  0100               	movlb	0	; () banked
  2542  00B8EC  21E8               	addwfc	(BMP180conversor@x1+3)& (0+255),w,b
  2543  00B8EE  0100               	movlb	0	; () banked
  2544  00B8F0  6F84               	movwf	(??_BMP180conversor+4)& (0+255),b
  2545  00B8F2  0E02               	movlw	2
  2546  00B8F4  0100               	movlb	0	; () banked
  2547  00B8F6  2581               	addwf	(??_BMP180conversor+1)& (0+255),w,b
  2548  00B8F8  0100               	movlb	0	; () banked
  2549  00B8FA  6F85               	movwf	(??_BMP180conversor+5)& (0+255),b
  2550  00B8FC  0E00               	movlw	0
  2551  00B8FE  0100               	movlb	0	; () banked
  2552  00B900  2182               	addwfc	(??_BMP180conversor+2)& (0+255),w,b
  2553  00B902  0100               	movlb	0	; () banked
  2554  00B904  6F86               	movwf	(??_BMP180conversor+6)& (0+255),b
  2555  00B906  0E00               	movlw	0
  2556  00B908  0100               	movlb	0	; () banked
  2557  00B90A  2183               	addwfc	(??_BMP180conversor+3)& (0+255),w,b
  2558  00B90C  0100               	movlb	0	; () banked
  2559  00B90E  6F87               	movwf	(??_BMP180conversor+7)& (0+255),b
  2560  00B910  0E00               	movlw	0
  2561  00B912  0100               	movlb	0	; () banked
  2562  00B914  2184               	addwfc	(??_BMP180conversor+4)& (0+255),w,b
  2563  00B916  0100               	movlb	0	; () banked
  2564  00B918  6F88               	movwf	(??_BMP180conversor+8)& (0+255),b
  2565  00B91A                     u2305:
  2566  00B91A  0100               	movlb	0	; () banked
  2567  00B91C  6780               	tstfsz	??_BMP180conversor& (0+255),b
  2568  00B91E  D001               	goto	u2306
  2569  00B920  D009               	goto	u2307
  2570  00B922                     u2306:
  2571  00B922  0100               	movlb	0	; () banked
  2572  00B924  3588               	rlcf	(??_BMP180conversor+8)& (0+255),w,b
  2573  00B926  3388               	rrcf	(??_BMP180conversor+8)& (0+255),f,b
  2574  00B928  3387               	rrcf	(??_BMP180conversor+7)& (0+255),f,b
  2575  00B92A  3386               	rrcf	(??_BMP180conversor+6)& (0+255),f,b
  2576  00B92C  3385               	rrcf	(??_BMP180conversor+5)& (0+255),f,b
  2577  00B92E  0100               	movlb	0	; () banked
  2578  00B930  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  2579  00B932  D7F3               	goto	u2305
  2580  00B934                     u2307:
  2581  00B934  C085  F0D5         	movff	??_BMP180conversor+5,BMP180conversor@x3
  2582  00B938  C086  F0D6         	movff	??_BMP180conversor+6,BMP180conversor@x3+1
  2583  00B93C  C087  F0D7         	movff	??_BMP180conversor+7,BMP180conversor@x3+2
  2584  00B940  C088  F0D8         	movff	??_BMP180conversor+8,BMP180conversor@x3+3
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;main.c: 257: sprintf(msg,"    ( x1=%d x2=%d x3=%d )\r\n", x1, x2, x3);
  2588  00B944  0100               	movlb	0	; () banked
  2589  00B946  0E00               	movlw	high BMP180conversor@msg
  2590  00B948  6E11               	movwf	sprintf@sp+1,c
  2591  00B94A  0100               	movlb	0	; () banked
  2592  00B94C  0E91               	movlw	low BMP180conversor@msg
  2593  00B94E  6E10               	movwf	sprintf@sp,c
  2594  00B950  0EBE               	movlw	high STR_5
  2595  00B952  6E13               	movwf	sprintf@f+1,c
  2596  00B954  0EAA               	movlw	low STR_5
  2597  00B956  6E12               	movwf	sprintf@f,c
  2598  00B958  C0E5  F014         	movff	BMP180conversor@x1,?_sprintf+4
  2599  00B95C  C0E6  F015         	movff	BMP180conversor@x1+1,?_sprintf+5
  2600  00B960  C0E7  F016         	movff	BMP180conversor@x1+2,?_sprintf+6
  2601  00B964  C0E8  F017         	movff	BMP180conversor@x1+3,?_sprintf+7
  2602  00B968  C0E1  F018         	movff	BMP180conversor@x2,?_sprintf+8
  2603  00B96C  C0E2  F019         	movff	BMP180conversor@x2+1,?_sprintf+9
  2604  00B970  C0E3  F01A         	movff	BMP180conversor@x2+2,?_sprintf+10
  2605  00B974  C0E4  F01B         	movff	BMP180conversor@x2+3,?_sprintf+11
  2606  00B978  C0D5  F01C         	movff	BMP180conversor@x3,?_sprintf+12
  2607  00B97C  C0D6  F01D         	movff	BMP180conversor@x3+1,?_sprintf+13
  2608  00B980  C0D7  F01E         	movff	BMP180conversor@x3+2,?_sprintf+14
  2609  00B984  C0D8  F01F         	movff	BMP180conversor@x3+3,?_sprintf+15
  2610  00B988  EC42  F057         	call	_sprintf	;wreg free
  2611  00B98C                     l144:
  2612  00B98C  A2AC               	btfss	4012,1,c	;volatile
  2613  00B98E  D7FE               	goto	l144
  2614  00B990  0100               	movlb	0	; () banked
  2615  00B992  0E00               	movlw	high BMP180conversor@msg
  2616  00B994  6E03               	movwf	putsUSART@data+1,c
  2617  00B996  0100               	movlb	0	; () banked
  2618  00B998  0E91               	movlw	low BMP180conversor@msg
  2619  00B99A  6E02               	movwf	putsUSART@data,c
  2620  00B99C  ECFA  F051         	call	_putsUSART	;wreg free
  2621                           
  2622                           ;main.c: 262: b4 = (ac4 * (unsigned long) (x3 + 32768)) >> 15;
  2623  00B9A0  0E00               	movlw	0
  2624  00B9A2  0100               	movlb	0	; () banked
  2625  00B9A4  0100               	movlb	0	; () banked
  2626  00B9A6  25D5               	addwf	BMP180conversor@x3& (0+255),w,b
  2627  00B9A8  6E01               	movwf	___lmul@multiplier,c
  2628  00B9AA  0E80               	movlw	128
  2629  00B9AC  0100               	movlb	0	; () banked
  2630  00B9AE  0100               	movlb	0	; () banked
  2631  00B9B0  21D6               	addwfc	(BMP180conversor@x3+1)& (0+255),w,b
  2632  00B9B2  6E02               	movwf	___lmul@multiplier+1,c
  2633  00B9B4  0E00               	movlw	0
  2634  00B9B6  0100               	movlb	0	; () banked
  2635  00B9B8  0100               	movlb	0	; () banked
  2636  00B9BA  21D7               	addwfc	(BMP180conversor@x3+2)& (0+255),w,b
  2637  00B9BC  6E03               	movwf	___lmul@multiplier+2,c
  2638  00B9BE  0E00               	movlw	0
  2639  00B9C0  0100               	movlb	0	; () banked
  2640  00B9C2  0100               	movlb	0	; () banked
  2641  00B9C4  21D8               	addwfc	(BMP180conversor@x3+3)& (0+255),w,b
  2642  00B9C6  6E04               	movwf	___lmul@multiplier+3,c
  2643  00B9C8  0100               	movlb	0	; () banked
  2644  00B9CA  C0E9  F005         	movff	_ac4,___lmul@multiplicand
  2645  00B9CE  0100               	movlb	0	; () banked
  2646  00B9D0  C0EA  F006         	movff	_ac4+1,___lmul@multiplicand+1
  2647  00B9D4  6A07               	clrf	___lmul@multiplicand+2,c
  2648  00B9D6  6A08               	clrf	___lmul@multiplicand+3,c
  2649  00B9D8  EC13  F053         	call	___lmul	;wreg free
  2650  00B9DC  C001  F080         	movff	?___lmul,??_BMP180conversor
  2651  00B9E0  C002  F081         	movff	?___lmul+1,??_BMP180conversor+1
  2652  00B9E4  C003  F082         	movff	?___lmul+2,??_BMP180conversor+2
  2653  00B9E8  C004  F083         	movff	?___lmul+3,??_BMP180conversor+3
  2654  00B9EC  0E10               	movlw	16
  2655  00B9EE  D006               	goto	u2320
  2656  00B9F0                     u2325:
  2657  00B9F0  0100               	movlb	0	; () banked
  2658  00B9F2  90D8               	bcf	status,0,c
  2659  00B9F4  3383               	rrcf	(??_BMP180conversor+3)& (0+255),f,b
  2660  00B9F6  3382               	rrcf	(??_BMP180conversor+2)& (0+255),f,b
  2661  00B9F8  3381               	rrcf	(??_BMP180conversor+1)& (0+255),f,b
  2662  00B9FA  3380               	rrcf	??_BMP180conversor& (0+255),f,b
  2663  00B9FC                     u2320:
  2664  00B9FC  2EE8               	decfsz	wreg,f,c
  2665  00B9FE  D7F8               	goto	u2325
  2666  00BA00  C080  F0CD         	movff	??_BMP180conversor,BMP180conversor@b4
  2667  00BA04  C081  F0CE         	movff	??_BMP180conversor+1,BMP180conversor@b4+1
  2668  00BA08  C082  F0CF         	movff	??_BMP180conversor+2,BMP180conversor@b4+2
  2669  00BA0C  C083  F0D0         	movff	??_BMP180conversor+3,BMP180conversor@b4+3
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;main.c: 263: b7 = ((unsigned long) up - b3) * (50000 >> 1);
  2673  00BA10  0100               	movlb	0	; () banked
  2674  00BA12  C0C5  F080         	movff	BMP180conversor@b3,??_BMP180conversor
  2675  00BA16  0100               	movlb	0	; () banked
  2676  00BA18  C0C6  F081         	movff	BMP180conversor@b3+1,??_BMP180conversor+1
  2677  00BA1C  0100               	movlb	0	; () banked
  2678  00BA1E  C0C7  F082         	movff	BMP180conversor@b3+2,??_BMP180conversor+2
  2679  00BA22  0100               	movlb	0	; () banked
  2680  00BA24  C0C8  F083         	movff	BMP180conversor@b3+3,??_BMP180conversor+3
  2681  00BA28  0100               	movlb	0	; () banked
  2682  00BA2A  1F80               	comf	??_BMP180conversor& (0+255),f,b
  2683  00BA2C  1F81               	comf	(??_BMP180conversor+1)& (0+255),f,b
  2684  00BA2E  1F82               	comf	(??_BMP180conversor+2)& (0+255),f,b
  2685  00BA30  1F83               	comf	(??_BMP180conversor+3)& (0+255),f,b
  2686  00BA32  2B80               	incf	??_BMP180conversor& (0+255),f,b
  2687  00BA34  0E00               	movlw	0
  2688  00BA36  2381               	addwfc	(??_BMP180conversor+1)& (0+255),f,b
  2689  00BA38  2382               	addwfc	(??_BMP180conversor+2)& (0+255),f,b
  2690  00BA3A  2383               	addwfc	(??_BMP180conversor+3)& (0+255),f,b
  2691  00BA3C  0100               	movlb	0	; () banked
  2692  00BA3E  0100               	movlb	0	; () banked
  2693  00BA40  51BD               	movf	BMP180conversor@up& (0+255),w,b
  2694  00BA42  0100               	movlb	0	; () banked
  2695  00BA44  2580               	addwf	??_BMP180conversor& (0+255),w,b
  2696  00BA46  6E01               	movwf	___lmul@multiplier,c
  2697  00BA48  0100               	movlb	0	; () banked
  2698  00BA4A  0100               	movlb	0	; () banked
  2699  00BA4C  51BE               	movf	(BMP180conversor@up+1)& (0+255),w,b
  2700  00BA4E  0100               	movlb	0	; () banked
  2701  00BA50  2181               	addwfc	(??_BMP180conversor+1)& (0+255),w,b
  2702  00BA52  6E02               	movwf	___lmul@multiplier+1,c
  2703  00BA54  0100               	movlb	0	; () banked
  2704  00BA56  0100               	movlb	0	; () banked
  2705  00BA58  51BF               	movf	(BMP180conversor@up+2)& (0+255),w,b
  2706  00BA5A  0100               	movlb	0	; () banked
  2707  00BA5C  2182               	addwfc	(??_BMP180conversor+2)& (0+255),w,b
  2708  00BA5E  6E03               	movwf	___lmul@multiplier+2,c
  2709  00BA60  0100               	movlb	0	; () banked
  2710  00BA62  0100               	movlb	0	; () banked
  2711  00BA64  51C0               	movf	(BMP180conversor@up+3)& (0+255),w,b
  2712  00BA66  0100               	movlb	0	; () banked
  2713  00BA68  2183               	addwfc	(??_BMP180conversor+3)& (0+255),w,b
  2714  00BA6A  6E04               	movwf	___lmul@multiplier+3,c
  2715  00BA6C  0EA8               	movlw	168
  2716  00BA6E  6E05               	movwf	___lmul@multiplicand,c
  2717  00BA70  0E61               	movlw	97
  2718  00BA72  6E06               	movwf	___lmul@multiplicand+1,c
  2719  00BA74  0E00               	movlw	0
  2720  00BA76  6E07               	movwf	___lmul@multiplicand+2,c
  2721  00BA78  0E00               	movlw	0
  2722  00BA7A  6E08               	movwf	___lmul@multiplicand+3,c
  2723  00BA7C  EC13  F053         	call	___lmul	;wreg free
  2724  00BA80  C001  F0D1         	movff	?___lmul,BMP180conversor@b7
  2725  00BA84  C002  F0D2         	movff	?___lmul+1,BMP180conversor@b7+1
  2726  00BA88  C003  F0D3         	movff	?___lmul+2,BMP180conversor@b7+2
  2727  00BA8C  C004  F0D4         	movff	?___lmul+3,BMP180conversor@b7+3
  2728                           
  2729                           ;main.c: 265: sprintf(msg,"    ( b4=%d b7=%d up=%d )\r\n", b4, b7, up);
  2730  00BA90  0100               	movlb	0	; () banked
  2731  00BA92  0E00               	movlw	high BMP180conversor@msg
  2732  00BA94  6E11               	movwf	sprintf@sp+1,c
  2733  00BA96  0100               	movlb	0	; () banked
  2734  00BA98  0E91               	movlw	low BMP180conversor@msg
  2735  00BA9A  6E10               	movwf	sprintf@sp,c
  2736  00BA9C  0EBE               	movlw	high STR_8
  2737  00BA9E  6E13               	movwf	sprintf@f+1,c
  2738  00BAA0  0EC6               	movlw	low STR_8
  2739  00BAA2  6E12               	movwf	sprintf@f,c
  2740  00BAA4  C0CD  F014         	movff	BMP180conversor@b4,?_sprintf+4
  2741  00BAA8  C0CE  F015         	movff	BMP180conversor@b4+1,?_sprintf+5
  2742  00BAAC  C0CF  F016         	movff	BMP180conversor@b4+2,?_sprintf+6
  2743  00BAB0  C0D0  F017         	movff	BMP180conversor@b4+3,?_sprintf+7
  2744  00BAB4  C0D1  F018         	movff	BMP180conversor@b7,?_sprintf+8
  2745  00BAB8  C0D2  F019         	movff	BMP180conversor@b7+1,?_sprintf+9
  2746  00BABC  C0D3  F01A         	movff	BMP180conversor@b7+2,?_sprintf+10
  2747  00BAC0  C0D4  F01B         	movff	BMP180conversor@b7+3,?_sprintf+11
  2748  00BAC4  C0BD  F01C         	movff	BMP180conversor@up,?_sprintf+12
  2749  00BAC8  C0BE  F01D         	movff	BMP180conversor@up+1,?_sprintf+13
  2750  00BACC  C0BF  F01E         	movff	BMP180conversor@up+2,?_sprintf+14
  2751  00BAD0  C0C0  F01F         	movff	BMP180conversor@up+3,?_sprintf+15
  2752  00BAD4  EC42  F057         	call	_sprintf	;wreg free
  2753  00BAD8                     l147:
  2754  00BAD8  A2AC               	btfss	4012,1,c	;volatile
  2755  00BADA  D7FE               	goto	l147
  2756  00BADC  0100               	movlb	0	; () banked
  2757  00BADE  0E00               	movlw	high BMP180conversor@msg
  2758  00BAE0  6E03               	movwf	putsUSART@data+1,c
  2759  00BAE2  0100               	movlb	0	; () banked
  2760  00BAE4  0E91               	movlw	low BMP180conversor@msg
  2761  00BAE6  6E02               	movwf	putsUSART@data,c
  2762  00BAE8  ECFA  F051         	call	_putsUSART	;wreg free
  2763                           
  2764                           ;main.c: 269: p = ( b7 < 0x80000000 ) ? ( (b7 * 2) / b4 ) : ( (b7 / b4) * 2) ;
  2765  00BAEC  0E00               	movlw	0
  2766  00BAEE  0100               	movlb	0	; () banked
  2767  00BAF0  0100               	movlb	0	; () banked
  2768  00BAF2  5DD1               	subwf	BMP180conversor@b7& (0+255),w,b
  2769  00BAF4  0E00               	movlw	0
  2770  00BAF6  0100               	movlb	0	; () banked
  2771  00BAF8  59D2               	subwfb	(BMP180conversor@b7+1)& (0+255),w,b
  2772  00BAFA  0E00               	movlw	0
  2773  00BAFC  0100               	movlb	0	; () banked
  2774  00BAFE  59D3               	subwfb	(BMP180conversor@b7+2)& (0+255),w,b
  2775  00BB00  0E80               	movlw	128
  2776  00BB02  0100               	movlb	0	; () banked
  2777  00BB04  0100               	movlb	0	; () banked
  2778  00BB06  59D4               	subwfb	(BMP180conversor@b7+3)& (0+255),w,b
  2779  00BB08  A0D8               	btfss	status,0,c
  2780  00BB0A  D02D               	goto	l2675
  2781                           
  2782                           ; BSR set to: 0
  2783  00BB0C  C0D1  F001         	movff	BMP180conversor@b7,___lldiv@dividend
  2784  00BB10  C0D2  F002         	movff	BMP180conversor@b7+1,___lldiv@dividend+1
  2785  00BB14  C0D3  F003         	movff	BMP180conversor@b7+2,___lldiv@dividend+2
  2786  00BB18  C0D4  F004         	movff	BMP180conversor@b7+3,___lldiv@dividend+3
  2787  00BB1C  C0CD  F005         	movff	BMP180conversor@b4,___lldiv@divisor
  2788  00BB20  C0CE  F006         	movff	BMP180conversor@b4+1,___lldiv@divisor+1
  2789  00BB24  C0CF  F007         	movff	BMP180conversor@b4+2,___lldiv@divisor+2
  2790  00BB28  C0D0  F008         	movff	BMP180conversor@b4+3,___lldiv@divisor+3
  2791  00BB2C  ECA6  F053         	call	___lldiv	;wreg free
  2792  00BB30  C001  F080         	movff	?___lldiv,??_BMP180conversor
  2793  00BB34  C002  F081         	movff	?___lldiv+1,??_BMP180conversor+1
  2794  00BB38  C003  F082         	movff	?___lldiv+2,??_BMP180conversor+2
  2795  00BB3C  C004  F083         	movff	?___lldiv+3,??_BMP180conversor+3
  2796  00BB40  90D8               	bcf	status,0,c
  2797  00BB42  0100               	movlb	0	; () banked
  2798  00BB44  3580               	rlcf	??_BMP180conversor& (0+255),w,b
  2799  00BB46  0100               	movlb	0	; () banked
  2800  00BB48  0100               	movlb	0	; () banked
  2801  00BB4A  6FD9               	movwf	BMP180conversor@p& (0+255),b
  2802  00BB4C  0100               	movlb	0	; () banked
  2803  00BB4E  3581               	rlcf	(??_BMP180conversor+1)& (0+255),w,b
  2804  00BB50  0100               	movlb	0	; () banked
  2805  00BB52  6FDA               	movwf	(BMP180conversor@p+1)& (0+255),b
  2806  00BB54  0100               	movlb	0	; () banked
  2807  00BB56  3582               	rlcf	(??_BMP180conversor+2)& (0+255),w,b
  2808  00BB58  0100               	movlb	0	; () banked
  2809  00BB5A  6FDB               	movwf	(BMP180conversor@p+2)& (0+255),b
  2810  00BB5C  0100               	movlb	0	; () banked
  2811  00BB5E  3583               	rlcf	(??_BMP180conversor+3)& (0+255),w,b
  2812  00BB60  0100               	movlb	0	; () banked
  2813  00BB62  6FDC               	movwf	(BMP180conversor@p+3)& (0+255),b
  2814  00BB64  D023               	goto	l2677
  2815  00BB66                     l2675:
  2816                           
  2817                           ; BSR set to: 0
  2818  00BB66  90D8               	bcf	status,0,c
  2819  00BB68  0100               	movlb	0	; () banked
  2820  00BB6A  0100               	movlb	0	; () banked
  2821  00BB6C  35D1               	rlcf	BMP180conversor@b7& (0+255),w,b
  2822  00BB6E  6E01               	movwf	___lldiv@dividend,c
  2823  00BB70  0100               	movlb	0	; () banked
  2824  00BB72  0100               	movlb	0	; () banked
  2825  00BB74  35D2               	rlcf	(BMP180conversor@b7+1)& (0+255),w,b
  2826  00BB76  6E02               	movwf	___lldiv@dividend+1,c
  2827  00BB78  0100               	movlb	0	; () banked
  2828  00BB7A  0100               	movlb	0	; () banked
  2829  00BB7C  35D3               	rlcf	(BMP180conversor@b7+2)& (0+255),w,b
  2830  00BB7E  6E03               	movwf	___lldiv@dividend+2,c
  2831  00BB80  0100               	movlb	0	; () banked
  2832  00BB82  0100               	movlb	0	; () banked
  2833  00BB84  35D4               	rlcf	(BMP180conversor@b7+3)& (0+255),w,b
  2834  00BB86  6E04               	movwf	___lldiv@dividend+3,c
  2835  00BB88  C0CD  F005         	movff	BMP180conversor@b4,___lldiv@divisor
  2836  00BB8C  C0CE  F006         	movff	BMP180conversor@b4+1,___lldiv@divisor+1
  2837  00BB90  C0CF  F007         	movff	BMP180conversor@b4+2,___lldiv@divisor+2
  2838  00BB94  C0D0  F008         	movff	BMP180conversor@b4+3,___lldiv@divisor+3
  2839  00BB98  ECA6  F053         	call	___lldiv	;wreg free
  2840  00BB9C  C001  F0D9         	movff	?___lldiv,BMP180conversor@p
  2841  00BBA0  C002  F0DA         	movff	?___lldiv+1,BMP180conversor@p+1
  2842  00BBA4  C003  F0DB         	movff	?___lldiv+2,BMP180conversor@p+2
  2843  00BBA8  C004  F0DC         	movff	?___lldiv+3,BMP180conversor@p+3
  2844  00BBAC                     l2677:
  2845                           
  2846                           ;main.c: 271: sprintf(msg,"    ( p=%d b7=%d b4=%d )\r\n", p, b7,b4 );
  2847  00BBAC  0100               	movlb	0	; () banked
  2848  00BBAE  0E00               	movlw	high BMP180conversor@msg
  2849  00BBB0  6E11               	movwf	sprintf@sp+1,c
  2850  00BBB2  0100               	movlb	0	; () banked
  2851  00BBB4  0E91               	movlw	low BMP180conversor@msg
  2852  00BBB6  6E10               	movwf	sprintf@sp,c
  2853  00BBB8  0EBE               	movlw	high STR_9
  2854  00BBBA  6E13               	movwf	sprintf@f+1,c
  2855  00BBBC  0EFE               	movlw	low STR_9
  2856  00BBBE  6E12               	movwf	sprintf@f,c
  2857  00BBC0  C0D9  F014         	movff	BMP180conversor@p,?_sprintf+4
  2858  00BBC4  C0DA  F015         	movff	BMP180conversor@p+1,?_sprintf+5
  2859  00BBC8  C0DB  F016         	movff	BMP180conversor@p+2,?_sprintf+6
  2860  00BBCC  C0DC  F017         	movff	BMP180conversor@p+3,?_sprintf+7
  2861  00BBD0  C0D1  F018         	movff	BMP180conversor@b7,?_sprintf+8
  2862  00BBD4  C0D2  F019         	movff	BMP180conversor@b7+1,?_sprintf+9
  2863  00BBD8  C0D3  F01A         	movff	BMP180conversor@b7+2,?_sprintf+10
  2864  00BBDC  C0D4  F01B         	movff	BMP180conversor@b7+3,?_sprintf+11
  2865  00BBE0  C0CD  F01C         	movff	BMP180conversor@b4,?_sprintf+12
  2866  00BBE4  C0CE  F01D         	movff	BMP180conversor@b4+1,?_sprintf+13
  2867  00BBE8  C0CF  F01E         	movff	BMP180conversor@b4+2,?_sprintf+14
  2868  00BBEC  C0D0  F01F         	movff	BMP180conversor@b4+3,?_sprintf+15
  2869  00BBF0  EC42  F057         	call	_sprintf	;wreg free
  2870  00BBF4                     l154:
  2871  00BBF4  A2AC               	btfss	4012,1,c	;volatile
  2872  00BBF6  D7FE               	goto	l154
  2873  00BBF8  0100               	movlb	0	; () banked
  2874  00BBFA  0E00               	movlw	high BMP180conversor@msg
  2875  00BBFC  6E03               	movwf	putsUSART@data+1,c
  2876  00BBFE  0100               	movlb	0	; () banked
  2877  00BC00  0E91               	movlw	low BMP180conversor@msg
  2878  00BC02  6E02               	movwf	putsUSART@data,c
  2879  00BC04  ECFA  F051         	call	_putsUSART	;wreg free
  2880                           
  2881                           ;main.c: 275: x1 = (p >> 8) * (p >> 8);
  2882  00BC08  0100               	movlb	0	; () banked
  2883  00BC0A  C0DA  F080         	movff	BMP180conversor@p+1,??_BMP180conversor
  2884  00BC0E  0100               	movlb	0	; () banked
  2885  00BC10  C0DB  F081         	movff	BMP180conversor@p+2,??_BMP180conversor+1
  2886  00BC14  0100               	movlb	0	; () banked
  2887  00BC16  C0DC  F082         	movff	BMP180conversor@p+3,??_BMP180conversor+2
  2888  00BC1A  0100               	movlb	0	; () banked
  2889  00BC1C  6B83               	clrf	(??_BMP180conversor+3)& (0+255),b
  2890  00BC1E  BF82               	btfsc	(??_BMP180conversor+2)& (0+255),7,b
  2891  00BC20  6983               	setf	(??_BMP180conversor+3)& (0+255),b
  2892  00BC22  C080  F001         	movff	??_BMP180conversor,___lmul@multiplier
  2893  00BC26  C081  F002         	movff	??_BMP180conversor+1,___lmul@multiplier+1
  2894  00BC2A  C082  F003         	movff	??_BMP180conversor+2,___lmul@multiplier+2
  2895  00BC2E  C083  F004         	movff	??_BMP180conversor+3,___lmul@multiplier+3
  2896  00BC32  0100               	movlb	0	; () banked
  2897  00BC34  C0DA  F084         	movff	BMP180conversor@p+1,??_BMP180conversor+4
  2898  00BC38  0100               	movlb	0	; () banked
  2899  00BC3A  C0DB  F085         	movff	BMP180conversor@p+2,??_BMP180conversor+5
  2900  00BC3E  0100               	movlb	0	; () banked
  2901  00BC40  C0DC  F086         	movff	BMP180conversor@p+3,??_BMP180conversor+6
  2902  00BC44  0100               	movlb	0	; () banked
  2903  00BC46  6B87               	clrf	(??_BMP180conversor+7)& (0+255),b
  2904  00BC48  BF86               	btfsc	(??_BMP180conversor+6)& (0+255),7,b
  2905  00BC4A  6987               	setf	(??_BMP180conversor+7)& (0+255),b
  2906  00BC4C  C084  F005         	movff	??_BMP180conversor+4,___lmul@multiplicand
  2907  00BC50  C085  F006         	movff	??_BMP180conversor+5,___lmul@multiplicand+1
  2908  00BC54  C086  F007         	movff	??_BMP180conversor+6,___lmul@multiplicand+2
  2909  00BC58  C087  F008         	movff	??_BMP180conversor+7,___lmul@multiplicand+3
  2910  00BC5C  EC13  F053         	call	___lmul	;wreg free
  2911  00BC60  C001  F0E5         	movff	?___lmul,BMP180conversor@x1
  2912  00BC64  C002  F0E6         	movff	?___lmul+1,BMP180conversor@x1+1
  2913  00BC68  C003  F0E7         	movff	?___lmul+2,BMP180conversor@x1+2
  2914  00BC6C  C004  F0E8         	movff	?___lmul+3,BMP180conversor@x1+3
  2915                           
  2916                           ;main.c: 276: x1 = (x1 * 3038) >> 16;
  2917  00BC70  C0E5  F001         	movff	BMP180conversor@x1,___lmul@multiplier
  2918  00BC74  C0E6  F002         	movff	BMP180conversor@x1+1,___lmul@multiplier+1
  2919  00BC78  C0E7  F003         	movff	BMP180conversor@x1+2,___lmul@multiplier+2
  2920  00BC7C  C0E8  F004         	movff	BMP180conversor@x1+3,___lmul@multiplier+3
  2921  00BC80  0EDE               	movlw	222
  2922  00BC82  6E05               	movwf	___lmul@multiplicand,c
  2923  00BC84  0E0B               	movlw	11
  2924  00BC86  6E06               	movwf	___lmul@multiplicand+1,c
  2925  00BC88  0E00               	movlw	0
  2926  00BC8A  6E07               	movwf	___lmul@multiplicand+2,c
  2927  00BC8C  0E00               	movlw	0
  2928  00BC8E  6E08               	movwf	___lmul@multiplicand+3,c
  2929  00BC90  EC13  F053         	call	___lmul	;wreg free
  2930  00BC94  C001  F080         	movff	?___lmul,??_BMP180conversor
  2931  00BC98  C002  F081         	movff	?___lmul+1,??_BMP180conversor+1
  2932  00BC9C  C003  F082         	movff	?___lmul+2,??_BMP180conversor+2
  2933  00BCA0  C004  F083         	movff	?___lmul+3,??_BMP180conversor+3
  2934  00BCA4  0100               	movlb	0	; () banked
  2935  00BCA6  C082  F0E5         	movff	??_BMP180conversor+2,BMP180conversor@x1
  2936  00BCAA  0100               	movlb	0	; () banked
  2937  00BCAC  C083  F0E6         	movff	??_BMP180conversor+3,BMP180conversor@x1+1
  2938  00BCB0  0100               	movlb	0	; () banked
  2939  00BCB2  0100               	movlb	0	; () banked
  2940  00BCB4  6BE7               	clrf	(BMP180conversor@x1+2)& (0+255),b
  2941  00BCB6  0100               	movlb	0	; () banked
  2942  00BCB8  6BE8               	clrf	(BMP180conversor@x1+3)& (0+255),b
  2943                           
  2944                           ; BSR set to: 0
  2945                           ;main.c: 277: x2 = (-7357 * p) >> 16;
  2946  00BCBA  C0D9  F001         	movff	BMP180conversor@p,___lmul@multiplier
  2947  00BCBE  C0DA  F002         	movff	BMP180conversor@p+1,___lmul@multiplier+1
  2948  00BCC2  C0DB  F003         	movff	BMP180conversor@p+2,___lmul@multiplier+2
  2949  00BCC6  C0DC  F004         	movff	BMP180conversor@p+3,___lmul@multiplier+3
  2950  00BCCA  0E43               	movlw	67
  2951  00BCCC  6E05               	movwf	___lmul@multiplicand,c
  2952  00BCCE  0EE3               	movlw	227
  2953  00BCD0  6E06               	movwf	___lmul@multiplicand+1,c
  2954  00BCD2  0EFF               	movlw	255
  2955  00BCD4  6E07               	movwf	___lmul@multiplicand+2,c
  2956  00BCD6  0EFF               	movlw	255
  2957  00BCD8  6E08               	movwf	___lmul@multiplicand+3,c
  2958  00BCDA  EC13  F053         	call	___lmul	;wreg free
  2959  00BCDE  C001  F080         	movff	?___lmul,??_BMP180conversor
  2960  00BCE2  C002  F081         	movff	?___lmul+1,??_BMP180conversor+1
  2961  00BCE6  C003  F082         	movff	?___lmul+2,??_BMP180conversor+2
  2962  00BCEA  C004  F083         	movff	?___lmul+3,??_BMP180conversor+3
  2963  00BCEE  0100               	movlb	0	; () banked
  2964  00BCF0  C082  F0E1         	movff	??_BMP180conversor+2,BMP180conversor@x2
  2965  00BCF4  0100               	movlb	0	; () banked
  2966  00BCF6  C083  F0E2         	movff	??_BMP180conversor+3,BMP180conversor@x2+1
  2967  00BCFA  0100               	movlb	0	; () banked
  2968  00BCFC  0100               	movlb	0	; () banked
  2969  00BCFE  6BE3               	clrf	(BMP180conversor@x2+2)& (0+255),b
  2970  00BD00  0100               	movlb	0	; () banked
  2971  00BD02  6BE4               	clrf	(BMP180conversor@x2+3)& (0+255),b
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;main.c: 279: sprintf(msg,"    ( x1=%d x2=%d x3=%d )\r\n", x1, x2, x3);
  2975  00BD04  0100               	movlb	0	; () banked
  2976  00BD06  0E00               	movlw	high BMP180conversor@msg
  2977  00BD08  6E11               	movwf	sprintf@sp+1,c
  2978  00BD0A  0100               	movlb	0	; () banked
  2979  00BD0C  0E91               	movlw	low BMP180conversor@msg
  2980  00BD0E  6E10               	movwf	sprintf@sp,c
  2981  00BD10  0EBE               	movlw	high STR_5
  2982  00BD12  6E13               	movwf	sprintf@f+1,c
  2983  00BD14  0EAA               	movlw	low STR_5
  2984  00BD16  6E12               	movwf	sprintf@f,c
  2985  00BD18  C0E5  F014         	movff	BMP180conversor@x1,?_sprintf+4
  2986  00BD1C  C0E6  F015         	movff	BMP180conversor@x1+1,?_sprintf+5
  2987  00BD20  C0E7  F016         	movff	BMP180conversor@x1+2,?_sprintf+6
  2988  00BD24  C0E8  F017         	movff	BMP180conversor@x1+3,?_sprintf+7
  2989  00BD28  C0E1  F018         	movff	BMP180conversor@x2,?_sprintf+8
  2990  00BD2C  C0E2  F019         	movff	BMP180conversor@x2+1,?_sprintf+9
  2991  00BD30  C0E3  F01A         	movff	BMP180conversor@x2+2,?_sprintf+10
  2992  00BD34  C0E4  F01B         	movff	BMP180conversor@x2+3,?_sprintf+11
  2993  00BD38  C0D5  F01C         	movff	BMP180conversor@x3,?_sprintf+12
  2994  00BD3C  C0D6  F01D         	movff	BMP180conversor@x3+1,?_sprintf+13
  2995  00BD40  C0D7  F01E         	movff	BMP180conversor@x3+2,?_sprintf+14
  2996  00BD44  C0D8  F01F         	movff	BMP180conversor@x3+3,?_sprintf+15
  2997  00BD48  EC42  F057         	call	_sprintf	;wreg free
  2998  00BD4C                     l157:
  2999  00BD4C  A2AC               	btfss	4012,1,c	;volatile
  3000  00BD4E  D7FE               	goto	l157
  3001  00BD50  0100               	movlb	0	; () banked
  3002  00BD52  0E00               	movlw	high BMP180conversor@msg
  3003  00BD54  6E03               	movwf	putsUSART@data+1,c
  3004  00BD56  0100               	movlb	0	; () banked
  3005  00BD58  0E91               	movlw	low BMP180conversor@msg
  3006  00BD5A  6E02               	movwf	putsUSART@data,c
  3007  00BD5C  ECFA  F051         	call	_putsUSART	;wreg free
  3008                           
  3009                           ;main.c: 284: *pressao = ( p + ((x1 + x2 + 3791) )) >> 4;
  3010  00BD60  0E04               	movlw	4
  3011  00BD62  0100               	movlb	0	; () banked
  3012  00BD64  6F80               	movwf	??_BMP180conversor& (0+255),b
  3013  00BD66  0100               	movlb	0	; () banked
  3014  00BD68  0100               	movlb	0	; () banked
  3015  00BD6A  51E1               	movf	BMP180conversor@x2& (0+255),w,b
  3016  00BD6C  0100               	movlb	0	; () banked
  3017  00BD6E  0100               	movlb	0	; () banked
  3018  00BD70  25E5               	addwf	BMP180conversor@x1& (0+255),w,b
  3019  00BD72  0100               	movlb	0	; () banked
  3020  00BD74  6F81               	movwf	(??_BMP180conversor+1)& (0+255),b
  3021  00BD76  0100               	movlb	0	; () banked
  3022  00BD78  0100               	movlb	0	; () banked
  3023  00BD7A  51E2               	movf	(BMP180conversor@x2+1)& (0+255),w,b
  3024  00BD7C  0100               	movlb	0	; () banked
  3025  00BD7E  0100               	movlb	0	; () banked
  3026  00BD80  21E6               	addwfc	(BMP180conversor@x1+1)& (0+255),w,b
  3027  00BD82  0100               	movlb	0	; () banked
  3028  00BD84  6F82               	movwf	(??_BMP180conversor+2)& (0+255),b
  3029  00BD86  0100               	movlb	0	; () banked
  3030  00BD88  0100               	movlb	0	; () banked
  3031  00BD8A  51E3               	movf	(BMP180conversor@x2+2)& (0+255),w,b
  3032  00BD8C  0100               	movlb	0	; () banked
  3033  00BD8E  0100               	movlb	0	; () banked
  3034  00BD90  21E7               	addwfc	(BMP180conversor@x1+2)& (0+255),w,b
  3035  00BD92  0100               	movlb	0	; () banked
  3036  00BD94  6F83               	movwf	(??_BMP180conversor+3)& (0+255),b
  3037  00BD96  0100               	movlb	0	; () banked
  3038  00BD98  0100               	movlb	0	; () banked
  3039  00BD9A  51E4               	movf	(BMP180conversor@x2+3)& (0+255),w,b
  3040  00BD9C  0100               	movlb	0	; () banked
  3041  00BD9E  0100               	movlb	0	; () banked
  3042  00BDA0  21E8               	addwfc	(BMP180conversor@x1+3)& (0+255),w,b
  3043  00BDA2  0100               	movlb	0	; () banked
  3044  00BDA4  6F84               	movwf	(??_BMP180conversor+4)& (0+255),b
  3045  00BDA6  0100               	movlb	0	; () banked
  3046  00BDA8  0100               	movlb	0	; () banked
  3047  00BDAA  51D9               	movf	BMP180conversor@p& (0+255),w,b
  3048  00BDAC  0100               	movlb	0	; () banked
  3049  00BDAE  2581               	addwf	(??_BMP180conversor+1)& (0+255),w,b
  3050  00BDB0  0100               	movlb	0	; () banked
  3051  00BDB2  6F85               	movwf	(??_BMP180conversor+5)& (0+255),b
  3052  00BDB4  0100               	movlb	0	; () banked
  3053  00BDB6  0100               	movlb	0	; () banked
  3054  00BDB8  51DA               	movf	(BMP180conversor@p+1)& (0+255),w,b
  3055  00BDBA  0100               	movlb	0	; () banked
  3056  00BDBC  2182               	addwfc	(??_BMP180conversor+2)& (0+255),w,b
  3057  00BDBE  0100               	movlb	0	; () banked
  3058  00BDC0  6F86               	movwf	(??_BMP180conversor+6)& (0+255),b
  3059  00BDC2  0100               	movlb	0	; () banked
  3060  00BDC4  0100               	movlb	0	; () banked
  3061  00BDC6  51DB               	movf	(BMP180conversor@p+2)& (0+255),w,b
  3062  00BDC8  0100               	movlb	0	; () banked
  3063  00BDCA  2183               	addwfc	(??_BMP180conversor+3)& (0+255),w,b
  3064  00BDCC  0100               	movlb	0	; () banked
  3065  00BDCE  6F87               	movwf	(??_BMP180conversor+7)& (0+255),b
  3066  00BDD0  0100               	movlb	0	; () banked
  3067  00BDD2  0100               	movlb	0	; () banked
  3068  00BDD4  51DC               	movf	(BMP180conversor@p+3)& (0+255),w,b
  3069  00BDD6  0100               	movlb	0	; () banked
  3070  00BDD8  2184               	addwfc	(??_BMP180conversor+4)& (0+255),w,b
  3071  00BDDA  0100               	movlb	0	; () banked
  3072  00BDDC  6F88               	movwf	(??_BMP180conversor+8)& (0+255),b
  3073  00BDDE  0ECF               	movlw	207
  3074  00BDE0  0100               	movlb	0	; () banked
  3075  00BDE2  2585               	addwf	(??_BMP180conversor+5)& (0+255),w,b
  3076  00BDE4  0100               	movlb	0	; () banked
  3077  00BDE6  6F89               	movwf	(??_BMP180conversor+9)& (0+255),b
  3078  00BDE8  0E0E               	movlw	14
  3079  00BDEA  0100               	movlb	0	; () banked
  3080  00BDEC  2186               	addwfc	(??_BMP180conversor+6)& (0+255),w,b
  3081  00BDEE  0100               	movlb	0	; () banked
  3082  00BDF0  6F8A               	movwf	(??_BMP180conversor+10)& (0+255),b
  3083  00BDF2  0E00               	movlw	0
  3084  00BDF4  0100               	movlb	0	; () banked
  3085  00BDF6  2187               	addwfc	(??_BMP180conversor+7)& (0+255),w,b
  3086  00BDF8  0100               	movlb	0	; () banked
  3087  00BDFA  6F8B               	movwf	(??_BMP180conversor+11)& (0+255),b
  3088  00BDFC  0E00               	movlw	0
  3089  00BDFE  0100               	movlb	0	; () banked
  3090  00BE00  2188               	addwfc	(??_BMP180conversor+8)& (0+255),w,b
  3091  00BE02  0100               	movlb	0	; () banked
  3092  00BE04  6F8C               	movwf	(??_BMP180conversor+12)& (0+255),b
  3093  00BE06                     u2375:
  3094  00BE06  0100               	movlb	0	; () banked
  3095  00BE08  6780               	tstfsz	??_BMP180conversor& (0+255),b
  3096  00BE0A  D001               	goto	u2376
  3097  00BE0C  D009               	goto	u2377
  3098  00BE0E                     u2376:
  3099  00BE0E  0100               	movlb	0	; () banked
  3100  00BE10  358C               	rlcf	(??_BMP180conversor+12)& (0+255),w,b
  3101  00BE12  338C               	rrcf	(??_BMP180conversor+12)& (0+255),f,b
  3102  00BE14  338B               	rrcf	(??_BMP180conversor+11)& (0+255),f,b
  3103  00BE16  338A               	rrcf	(??_BMP180conversor+10)& (0+255),f,b
  3104  00BE18  3389               	rrcf	(??_BMP180conversor+9)& (0+255),f,b
  3105  00BE1A  0100               	movlb	0	; () banked
  3106  00BE1C  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  3107  00BE1E  D7F3               	goto	u2375
  3108  00BE20                     u2377:
  3109  00BE20  C06E  FFD9         	movff	BMP180conversor@pressao,fsr2l
  3110  00BE24  C06F  FFDA         	movff	BMP180conversor@pressao+1,fsr2h
  3111  00BE28  C089  FFDE         	movff	??_BMP180conversor+9,postinc2
  3112  00BE2C  C08A  FFDE         	movff	??_BMP180conversor+10,postinc2
  3113  00BE30  C08B  FFDE         	movff	??_BMP180conversor+11,postinc2
  3114  00BE34  C08C  FFDD         	movff	??_BMP180conversor+12,postdec2
  3115  00BE38  06D9               	decf	fsr2l,f,c
  3116  00BE3A  06D9               	decf	fsr2l,f,c
  3117                           
  3118                           ; BSR set to: 0
  3119                           ;main.c: 286: _delay((unsigned long)((10)*(8000000/4000.0)));
  3120  00BE3C  0E1A               	movlw	26
  3121  00BE3E  0100               	movlb	0	; () banked
  3122  00BE40  6F80               	movwf	??_BMP180conversor& (0+255),b
  3123  00BE42  0EF8               	movlw	248
  3124  00BE44                     u2427:
  3125  00BE44  2EE8               	decfsz	wreg,f,c
  3126  00BE46  D7FE               	goto	u2427
  3127  00BE48  2F80               	decfsz	??_BMP180conversor& (0+255),f,b
  3128  00BE4A  D7FC               	goto	u2427
  3129  00BE4C  D000               	nop2	
  3130  00BE4E  0012               	return	
  3131  00BE50                     __end_of_BMP180conversor:
  3132                           	opt stack 0
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           postinc0	equ	0xFEE
  3138                           wreg	equ	0xFE8
  3139                           postinc2	equ	0xFDE
  3140                           postdec2	equ	0xFDD
  3141                           fsr2h	equ	0xFDA
  3142                           fsr2l	equ	0xFD9
  3143                           status	equ	0xFD8
  3144                           
  3145 ;; *************** function _lerBMP180temperatura *****************
  3146 ;; Defined at:
  3147 ;;		line 176 in file "main.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  4  102[COMRAM] long 
  3154 ;; Registers used:
  3155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;Total ram usage:        5 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    3
  3168 ;; This function calls:
  3169 ;;		_WriteI2C
  3170 ;;		_lerBMP180
  3171 ;; This function is called by:
  3172 ;;		_BMP180conversor
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text9
  3177  00A546                     __ptext9:
  3178                           	opt stack 0
  3179  00A546                     _lerBMP180temperatura:
  3180                           	opt stack 26
  3181                           
  3182                           ;main.c: 178: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3183                           
  3184                           ;incstack = 0
  3185  00A546  80C5               	bsf	4037,0,c	;volatile
  3186  00A548                     l120:
  3187  00A548  B0C5               	btfsc	4037,0,c	;volatile
  3188  00A54A  D7FE               	goto	l120
  3189                           
  3190                           ;main.c: 179: WriteI2C(0xEE );
  3191  00A54C  0EEE               	movlw	238
  3192  00A54E  EC3E  F053         	call	_WriteI2C
  3193                           
  3194                           ;main.c: 181: WriteI2C(0xF4);
  3195  00A552  0EF4               	movlw	244
  3196  00A554  EC3E  F053         	call	_WriteI2C
  3197                           
  3198                           ;main.c: 184: WriteI2C(0x2E);
  3199  00A558  0E2E               	movlw	46
  3200  00A55A  EC3E  F053         	call	_WriteI2C
  3201                           
  3202                           ;main.c: 185: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3203  00A55E  84C5               	bsf	4037,2,c	;volatile
  3204  00A560                     l123:
  3205  00A560  B4C5               	btfsc	4037,2,c	;volatile
  3206  00A562  D7FE               	goto	l123
  3207                           
  3208                           ;main.c: 187: _delay((unsigned long)((5)*(8000000/4000.0)));
  3209  00A564  0E0D               	movlw	13
  3210  00A566  6E6B               	movwf	??_lerBMP180temperatura& (0+255),c
  3211  00A568  0EFC               	movlw	252
  3212  00A56A                     u2437:
  3213  00A56A  2EE8               	decfsz	wreg,f,c
  3214  00A56C  D7FE               	goto	u2437
  3215  00A56E  2E6B               	decfsz	??_lerBMP180temperatura& (0+255),f,c
  3216  00A570  D7FC               	goto	u2437
  3217                           
  3218                           ;main.c: 191: return lerBMP180(0xF6);
  3219  00A572  0EF6               	movlw	246
  3220  00A574  ECE9  F053         	call	_lerBMP180
  3221  00A578  C033  F067         	movff	?_lerBMP180,?_lerBMP180temperatura
  3222  00A57C  C034  F068         	movff	?_lerBMP180+1,?_lerBMP180temperatura+1
  3223  00A580  C035  F069         	movff	?_lerBMP180+2,?_lerBMP180temperatura+2
  3224  00A584  C036  F06A         	movff	?_lerBMP180+3,?_lerBMP180temperatura+3
  3225  00A588  0012               	return	
  3226  00A58A                     __end_of_lerBMP180temperatura:
  3227                           	opt stack 0
  3228                           tblptru	equ	0xFF8
  3229                           tblptrh	equ	0xFF7
  3230                           tblptrl	equ	0xFF6
  3231                           tablat	equ	0xFF5
  3232                           postinc0	equ	0xFEE
  3233                           wreg	equ	0xFE8
  3234                           postinc2	equ	0xFDE
  3235                           postdec2	equ	0xFDD
  3236                           fsr2h	equ	0xFDA
  3237                           fsr2l	equ	0xFD9
  3238                           status	equ	0xFD8
  3239                           
  3240 ;; *************** function _lerBMP180pressao *****************
  3241 ;; Defined at:
  3242 ;;		line 195 in file "main.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  4  102[COMRAM] long 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;Total ram usage:        5 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; Hardware stack levels required when called:    3
  3263 ;; This function calls:
  3264 ;;		_WriteI2C
  3265 ;;		_lerBMP180
  3266 ;; This function is called by:
  3267 ;;		_BMP180conversor
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text10
  3272  00A502                     __ptext10:
  3273                           	opt stack 0
  3274  00A502                     _lerBMP180pressao:
  3275                           	opt stack 26
  3276                           
  3277                           ;main.c: 197: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  3278                           
  3279                           ;incstack = 0
  3280  00A502  80C5               	bsf	4037,0,c	;volatile
  3281  00A504                     l129:
  3282  00A504  B0C5               	btfsc	4037,0,c	;volatile
  3283  00A506  D7FE               	goto	l129
  3284                           
  3285                           ;main.c: 198: WriteI2C(0xEE );
  3286  00A508  0EEE               	movlw	238
  3287  00A50A  EC3E  F053         	call	_WriteI2C
  3288                           
  3289                           ;main.c: 200: WriteI2C(0xF4);
  3290  00A50E  0EF4               	movlw	244
  3291  00A510  EC3E  F053         	call	_WriteI2C
  3292                           
  3293                           ;main.c: 203: WriteI2C(0x34);
  3294  00A514  0E34               	movlw	52
  3295  00A516  EC3E  F053         	call	_WriteI2C
  3296                           
  3297                           ;main.c: 205: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  3298  00A51A  84C5               	bsf	4037,2,c	;volatile
  3299  00A51C                     l132:
  3300  00A51C  B4C5               	btfsc	4037,2,c	;volatile
  3301  00A51E  D7FE               	goto	l132
  3302                           
  3303                           ;main.c: 207: _delay((unsigned long)((5)*(8000000/4000.0)));
  3304  00A520  0E0D               	movlw	13
  3305  00A522  6E6B               	movwf	??_lerBMP180pressao& (0+255),c
  3306  00A524  0EFC               	movlw	252
  3307  00A526                     u2447:
  3308  00A526  2EE8               	decfsz	wreg,f,c
  3309  00A528  D7FE               	goto	u2447
  3310  00A52A  2E6B               	decfsz	??_lerBMP180pressao& (0+255),f,c
  3311  00A52C  D7FC               	goto	u2447
  3312                           
  3313                           ;main.c: 210: return lerBMP180(0xF6);
  3314  00A52E  0EF6               	movlw	246
  3315  00A530  ECE9  F053         	call	_lerBMP180
  3316  00A534  C033  F067         	movff	?_lerBMP180,?_lerBMP180pressao
  3317  00A538  C034  F068         	movff	?_lerBMP180+1,?_lerBMP180pressao+1
  3318  00A53C  C035  F069         	movff	?_lerBMP180+2,?_lerBMP180pressao+2
  3319  00A540  C036  F06A         	movff	?_lerBMP180+3,?_lerBMP180pressao+3
  3320  00A544  0012               	return	
  3321  00A546                     __end_of_lerBMP180pressao:
  3322                           	opt stack 0
  3323                           tblptru	equ	0xFF8
  3324                           tblptrh	equ	0xFF7
  3325                           tblptrl	equ	0xFF6
  3326                           tablat	equ	0xFF5
  3327                           postinc0	equ	0xFEE
  3328                           wreg	equ	0xFE8
  3329                           postinc2	equ	0xFDE
  3330                           postdec2	equ	0xFDD
  3331                           fsr2h	equ	0xFDA
  3332                           fsr2l	equ	0xFD9
  3333                           status	equ	0xFD8
  3334                           
  3335 ;; *************** function ___lmul *****************
  3336 ;; Defined at:
  3337 ;;		line 2 in file "/opt/microchip/xc8/v1.30/sources/common/lmul.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  multiplier      4    0[COMRAM] unsigned long 
  3340 ;;  multiplicand    4    4[COMRAM] unsigned long 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  product         4    8[COMRAM] unsigned long 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  4    0[COMRAM] unsigned long 
  3345 ;; Registers used:
  3346 ;;		wreg, status,2, status,0
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3352 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;Total ram usage:       12 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; This function calls:
  3359 ;;		Nothing
  3360 ;; This function is called by:
  3361 ;;		_BMP180conversor
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text11
  3366  00A626                     __ptext11:
  3367                           	opt stack 0
  3368  00A626                     ___lmul:
  3369                           	opt stack 29
  3370                           
  3371                           ;incstack = 0
  3372  00A626  0E00               	movlw	0
  3373  00A628  6E09               	movwf	___lmul@product,c
  3374  00A62A  0E00               	movlw	0
  3375  00A62C  6E0A               	movwf	___lmul@product+1,c
  3376  00A62E  0E00               	movlw	0
  3377  00A630  6E0B               	movwf	___lmul@product+2,c
  3378  00A632  0E00               	movlw	0
  3379  00A634  6E0C               	movwf	___lmul@product+3,c
  3380  00A636                     l2209:
  3381  00A636  A001               	btfss	___lmul@multiplier,0,c
  3382  00A638  D008               	goto	l2213
  3383  00A63A  5005               	movf	___lmul@multiplicand,w,c
  3384  00A63C  2609               	addwf	___lmul@product,f,c
  3385  00A63E  5006               	movf	___lmul@multiplicand+1,w,c
  3386  00A640  220A               	addwfc	___lmul@product+1,f,c
  3387  00A642  5007               	movf	___lmul@multiplicand+2,w,c
  3388  00A644  220B               	addwfc	___lmul@product+2,f,c
  3389  00A646  5008               	movf	___lmul@multiplicand+3,w,c
  3390  00A648  220C               	addwfc	___lmul@product+3,f,c
  3391  00A64A                     l2213:
  3392  00A64A  90D8               	bcf	status,0,c
  3393  00A64C  3605               	rlcf	___lmul@multiplicand,f,c
  3394  00A64E  3606               	rlcf	___lmul@multiplicand+1,f,c
  3395  00A650  3607               	rlcf	___lmul@multiplicand+2,f,c
  3396  00A652  3608               	rlcf	___lmul@multiplicand+3,f,c
  3397  00A654  90D8               	bcf	status,0,c
  3398  00A656  3204               	rrcf	___lmul@multiplier+3,f,c
  3399  00A658  3203               	rrcf	___lmul@multiplier+2,f,c
  3400  00A65A  3202               	rrcf	___lmul@multiplier+1,f,c
  3401  00A65C  3201               	rrcf	___lmul@multiplier,f,c
  3402  00A65E  5004               	movf	___lmul@multiplier+3,w,c
  3403  00A660  1001               	iorwf	___lmul@multiplier,w,c
  3404  00A662  1002               	iorwf	___lmul@multiplier+1,w,c
  3405  00A664  1003               	iorwf	___lmul@multiplier+2,w,c
  3406  00A666  A4D8               	btfss	status,2,c
  3407  00A668  D7E6               	goto	l2209
  3408  00A66A  C009  F001         	movff	___lmul@product,?___lmul
  3409  00A66E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  3410  00A672  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  3411  00A676  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  3412  00A67A  0012               	return	
  3413  00A67C                     __end_of___lmul:
  3414                           	opt stack 0
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postinc2	equ	0xFDE
  3422                           postdec2	equ	0xFDD
  3423                           fsr2h	equ	0xFDA
  3424                           fsr2l	equ	0xFD9
  3425                           status	equ	0xFD8
  3426                           
  3427 ;; *************** function ___lldiv *****************
  3428 ;; Defined at:
  3429 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/lldiv.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  dividend        4    0[COMRAM] unsigned long 
  3432 ;;  divisor         4    4[COMRAM] unsigned long 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  quotient        4    9[COMRAM] unsigned long 
  3435 ;;  counter         1   13[COMRAM] unsigned char 
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  4    0[COMRAM] unsigned long 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3445 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;Total ram usage:       14 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_BMP180conversor
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text12
  3459  00A74C                     __ptext12:
  3460                           	opt stack 0
  3461  00A74C                     ___lldiv:
  3462                           	opt stack 29
  3463                           
  3464                           ;incstack = 0
  3465  00A74C  0E00               	movlw	0
  3466  00A74E  6E0A               	movwf	___lldiv@quotient,c
  3467  00A750  0E00               	movlw	0
  3468  00A752  6E0B               	movwf	___lldiv@quotient+1,c
  3469  00A754  0E00               	movlw	0
  3470  00A756  6E0C               	movwf	___lldiv@quotient+2,c
  3471  00A758  0E00               	movlw	0
  3472  00A75A  6E0D               	movwf	___lldiv@quotient+3,c
  3473  00A75C  5008               	movf	___lldiv@divisor+3,w,c
  3474  00A75E  1005               	iorwf	___lldiv@divisor,w,c
  3475  00A760  1006               	iorwf	___lldiv@divisor+1,w,c
  3476  00A762  1007               	iorwf	___lldiv@divisor+2,w,c
  3477  00A764  B4D8               	btfsc	status,2,c
  3478  00A766  D02C               	goto	l858
  3479  00A768  6E09               	movwf	??___lldiv& (0+255),c
  3480  00A76A  0E01               	movlw	1
  3481  00A76C  6E0E               	movwf	___lldiv@counter,c
  3482  00A76E  5009               	movf	??___lldiv& (0+255),w,c
  3483  00A770  D006               	goto	l2225
  3484  00A772                     l2223:
  3485  00A772  90D8               	bcf	status,0,c
  3486  00A774  3605               	rlcf	___lldiv@divisor,f,c
  3487  00A776  3606               	rlcf	___lldiv@divisor+1,f,c
  3488  00A778  3607               	rlcf	___lldiv@divisor+2,f,c
  3489  00A77A  3608               	rlcf	___lldiv@divisor+3,f,c
  3490  00A77C  2A0E               	incf	___lldiv@counter,f,c
  3491  00A77E                     l2225:
  3492  00A77E  AE08               	btfss	___lldiv@divisor+3,7,c
  3493  00A780  D7F8               	goto	l2223
  3494  00A782                     l2227:
  3495  00A782  90D8               	bcf	status,0,c
  3496  00A784  360A               	rlcf	___lldiv@quotient,f,c
  3497  00A786  360B               	rlcf	___lldiv@quotient+1,f,c
  3498  00A788  360C               	rlcf	___lldiv@quotient+2,f,c
  3499  00A78A  360D               	rlcf	___lldiv@quotient+3,f,c
  3500  00A78C  5005               	movf	___lldiv@divisor,w,c
  3501  00A78E  5C01               	subwf	___lldiv@dividend,w,c
  3502  00A790  5006               	movf	___lldiv@divisor+1,w,c
  3503  00A792  5802               	subwfb	___lldiv@dividend+1,w,c
  3504  00A794  5007               	movf	___lldiv@divisor+2,w,c
  3505  00A796  5803               	subwfb	___lldiv@dividend+2,w,c
  3506  00A798  5008               	movf	___lldiv@divisor+3,w,c
  3507  00A79A  5804               	subwfb	___lldiv@dividend+3,w,c
  3508  00A79C  A0D8               	btfss	status,0,c
  3509  00A79E  D009               	goto	l2235
  3510  00A7A0  5005               	movf	___lldiv@divisor,w,c
  3511  00A7A2  5E01               	subwf	___lldiv@dividend,f,c
  3512  00A7A4  5006               	movf	___lldiv@divisor+1,w,c
  3513  00A7A6  5A02               	subwfb	___lldiv@dividend+1,f,c
  3514  00A7A8  5007               	movf	___lldiv@divisor+2,w,c
  3515  00A7AA  5A03               	subwfb	___lldiv@dividend+2,f,c
  3516  00A7AC  5008               	movf	___lldiv@divisor+3,w,c
  3517  00A7AE  5A04               	subwfb	___lldiv@dividend+3,f,c
  3518  00A7B0  800A               	bsf	___lldiv@quotient,0,c
  3519  00A7B2                     l2235:
  3520  00A7B2  90D8               	bcf	status,0,c
  3521  00A7B4  3208               	rrcf	___lldiv@divisor+3,f,c
  3522  00A7B6  3207               	rrcf	___lldiv@divisor+2,f,c
  3523  00A7B8  3206               	rrcf	___lldiv@divisor+1,f,c
  3524  00A7BA  3205               	rrcf	___lldiv@divisor,f,c
  3525  00A7BC  2E0E               	decfsz	___lldiv@counter,f,c
  3526  00A7BE  D7E1               	goto	l2227
  3527  00A7C0                     l858:
  3528  00A7C0  C00A  F001         	movff	___lldiv@quotient,?___lldiv
  3529  00A7C4  C00B  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3530  00A7C8  C00C  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3531  00A7CC  C00D  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3532  00A7D0  0012               	return	
  3533  00A7D2                     __end_of___lldiv:
  3534                           	opt stack 0
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           postinc0	equ	0xFEE
  3540                           wreg	equ	0xFE8
  3541                           postinc2	equ	0xFDE
  3542                           postdec2	equ	0xFDD
  3543                           fsr2h	equ	0xFDA
  3544                           fsr2l	equ	0xFD9
  3545                           status	equ	0xFD8
  3546                           
  3547 ;; *************** function ___aldiv *****************
  3548 ;; Defined at:
  3549 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/aldiv.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  dividend        4    0[COMRAM] long 
  3552 ;;  divisor         4    4[COMRAM] long 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  quotient        4   11[COMRAM] long 
  3555 ;;  sign            1   10[COMRAM] unsigned char 
  3556 ;;  counter         1    9[COMRAM] unsigned char 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  4    0[COMRAM] long 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3566 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;Total ram usage:       15 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_main
  3576 ;;		_BMP180conversor
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text13
  3581  00A882                     __ptext13:
  3582                           	opt stack 0
  3583  00A882                     ___aldiv:
  3584                           	opt stack 30
  3585                           
  3586                           ;incstack = 0
  3587  00A882  6E09               	movwf	??___aldiv& (0+255),c
  3588  00A884  0E00               	movlw	0
  3589  00A886  6E0B               	movwf	___aldiv@sign,c
  3590  00A888  5009               	movf	??___aldiv& (0+255),w,c
  3591  00A88A  5008               	movf	___aldiv@divisor+3,w,c
  3592  00A88C  0A80               	xorlw	128
  3593  00A88E  0F80               	addlw	128
  3594  00A890  E108               	bnz	u1405
  3595  00A892  0E00               	movlw	0
  3596  00A894  5C07               	subwf	___aldiv@divisor+2,w,c
  3597  00A896  E105               	bnz	u1405
  3598  00A898  0E00               	movlw	0
  3599  00A89A  5C06               	subwf	___aldiv@divisor+1,w,c
  3600  00A89C  E102               	bnz	u1405
  3601  00A89E  0E00               	movlw	0
  3602  00A8A0  5C05               	subwf	___aldiv@divisor,w,c
  3603  00A8A2                     u1405:
  3604  00A8A2  B0D8               	btfsc	status,0,c
  3605  00A8A4  D00C               	goto	l2171
  3606  00A8A6  1E08               	comf	___aldiv@divisor+3,f,c
  3607  00A8A8  1E07               	comf	___aldiv@divisor+2,f,c
  3608  00A8AA  1E06               	comf	___aldiv@divisor+1,f,c
  3609  00A8AC  6C05               	negf	___aldiv@divisor,c
  3610  00A8AE  0E00               	movlw	0
  3611  00A8B0  2206               	addwfc	___aldiv@divisor+1,f,c
  3612  00A8B2  2207               	addwfc	___aldiv@divisor+2,f,c
  3613  00A8B4  2208               	addwfc	___aldiv@divisor+3,f,c
  3614  00A8B6  6E09               	movwf	??___aldiv& (0+255),c
  3615  00A8B8  0E01               	movlw	1
  3616  00A8BA  6E0B               	movwf	___aldiv@sign,c
  3617  00A8BC  5009               	movf	??___aldiv& (0+255),w,c
  3618  00A8BE                     l2171:
  3619  00A8BE  5004               	movf	___aldiv@dividend+3,w,c
  3620  00A8C0  0A80               	xorlw	128
  3621  00A8C2  0F80               	addlw	128
  3622  00A8C4  E108               	bnz	u1415
  3623  00A8C6  0E00               	movlw	0
  3624  00A8C8  5C03               	subwf	___aldiv@dividend+2,w,c
  3625  00A8CA  E105               	bnz	u1415
  3626  00A8CC  0E00               	movlw	0
  3627  00A8CE  5C02               	subwf	___aldiv@dividend+1,w,c
  3628  00A8D0  E102               	bnz	u1415
  3629  00A8D2  0E00               	movlw	0
  3630  00A8D4  5C01               	subwf	___aldiv@dividend,w,c
  3631  00A8D6                     u1415:
  3632  00A8D6  B0D8               	btfsc	status,0,c
  3633  00A8D8  D00A               	goto	l2177
  3634  00A8DA  1E04               	comf	___aldiv@dividend+3,f,c
  3635  00A8DC  1E03               	comf	___aldiv@dividend+2,f,c
  3636  00A8DE  1E02               	comf	___aldiv@dividend+1,f,c
  3637  00A8E0  6C01               	negf	___aldiv@dividend,c
  3638  00A8E2  0E00               	movlw	0
  3639  00A8E4  2202               	addwfc	___aldiv@dividend+1,f,c
  3640  00A8E6  2203               	addwfc	___aldiv@dividend+2,f,c
  3641  00A8E8  2204               	addwfc	___aldiv@dividend+3,f,c
  3642  00A8EA  0E01               	movlw	1
  3643  00A8EC  1A0B               	xorwf	___aldiv@sign,f,c
  3644  00A8EE                     l2177:
  3645  00A8EE  0E00               	movlw	0
  3646  00A8F0  6E0C               	movwf	___aldiv@quotient,c
  3647  00A8F2  0E00               	movlw	0
  3648  00A8F4  6E0D               	movwf	___aldiv@quotient+1,c
  3649  00A8F6  0E00               	movlw	0
  3650  00A8F8  6E0E               	movwf	___aldiv@quotient+2,c
  3651  00A8FA  0E00               	movlw	0
  3652  00A8FC  6E0F               	movwf	___aldiv@quotient+3,c
  3653  00A8FE  5008               	movf	___aldiv@divisor+3,w,c
  3654  00A900  1005               	iorwf	___aldiv@divisor,w,c
  3655  00A902  1006               	iorwf	___aldiv@divisor+1,w,c
  3656  00A904  1007               	iorwf	___aldiv@divisor+2,w,c
  3657  00A906  B4D8               	btfsc	status,2,c
  3658  00A908  D02C               	goto	l2199
  3659  00A90A  6E09               	movwf	??___aldiv& (0+255),c
  3660  00A90C  0E01               	movlw	1
  3661  00A90E  6E0A               	movwf	___aldiv@counter,c
  3662  00A910  5009               	movf	??___aldiv& (0+255),w,c
  3663  00A912  D006               	goto	l2185
  3664  00A914                     l2183:
  3665  00A914  90D8               	bcf	status,0,c
  3666  00A916  3605               	rlcf	___aldiv@divisor,f,c
  3667  00A918  3606               	rlcf	___aldiv@divisor+1,f,c
  3668  00A91A  3607               	rlcf	___aldiv@divisor+2,f,c
  3669  00A91C  3608               	rlcf	___aldiv@divisor+3,f,c
  3670  00A91E  2A0A               	incf	___aldiv@counter,f,c
  3671  00A920                     l2185:
  3672  00A920  AE08               	btfss	___aldiv@divisor+3,7,c
  3673  00A922  D7F8               	goto	l2183
  3674  00A924                     l2187:
  3675  00A924  90D8               	bcf	status,0,c
  3676  00A926  360C               	rlcf	___aldiv@quotient,f,c
  3677  00A928  360D               	rlcf	___aldiv@quotient+1,f,c
  3678  00A92A  360E               	rlcf	___aldiv@quotient+2,f,c
  3679  00A92C  360F               	rlcf	___aldiv@quotient+3,f,c
  3680  00A92E  5005               	movf	___aldiv@divisor,w,c
  3681  00A930  5C01               	subwf	___aldiv@dividend,w,c
  3682  00A932  5006               	movf	___aldiv@divisor+1,w,c
  3683  00A934  5802               	subwfb	___aldiv@dividend+1,w,c
  3684  00A936  5007               	movf	___aldiv@divisor+2,w,c
  3685  00A938  5803               	subwfb	___aldiv@dividend+2,w,c
  3686  00A93A  5008               	movf	___aldiv@divisor+3,w,c
  3687  00A93C  5804               	subwfb	___aldiv@dividend+3,w,c
  3688  00A93E  A0D8               	btfss	status,0,c
  3689  00A940  D009               	goto	l2195
  3690  00A942  5005               	movf	___aldiv@divisor,w,c
  3691  00A944  5E01               	subwf	___aldiv@dividend,f,c
  3692  00A946  5006               	movf	___aldiv@divisor+1,w,c
  3693  00A948  5A02               	subwfb	___aldiv@dividend+1,f,c
  3694  00A94A  5007               	movf	___aldiv@divisor+2,w,c
  3695  00A94C  5A03               	subwfb	___aldiv@dividend+2,f,c
  3696  00A94E  5008               	movf	___aldiv@divisor+3,w,c
  3697  00A950  5A04               	subwfb	___aldiv@dividend+3,f,c
  3698  00A952  800C               	bsf	___aldiv@quotient,0,c
  3699  00A954                     l2195:
  3700  00A954  90D8               	bcf	status,0,c
  3701  00A956  3208               	rrcf	___aldiv@divisor+3,f,c
  3702  00A958  3207               	rrcf	___aldiv@divisor+2,f,c
  3703  00A95A  3206               	rrcf	___aldiv@divisor+1,f,c
  3704  00A95C  3205               	rrcf	___aldiv@divisor,f,c
  3705  00A95E  2E0A               	decfsz	___aldiv@counter,f,c
  3706  00A960  D7E1               	goto	l2187
  3707  00A962                     l2199:
  3708  00A962  500B               	movf	___aldiv@sign,w,c
  3709  00A964  B4D8               	btfsc	status,2,c
  3710  00A966  D008               	goto	l2203
  3711  00A968  1E0F               	comf	___aldiv@quotient+3,f,c
  3712  00A96A  1E0E               	comf	___aldiv@quotient+2,f,c
  3713  00A96C  1E0D               	comf	___aldiv@quotient+1,f,c
  3714  00A96E  6C0C               	negf	___aldiv@quotient,c
  3715  00A970  0E00               	movlw	0
  3716  00A972  220D               	addwfc	___aldiv@quotient+1,f,c
  3717  00A974  220E               	addwfc	___aldiv@quotient+2,f,c
  3718  00A976  220F               	addwfc	___aldiv@quotient+3,f,c
  3719  00A978                     l2203:
  3720  00A978  C00C  F001         	movff	___aldiv@quotient,?___aldiv
  3721  00A97C  C00D  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3722  00A980  C00E  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3723  00A984  C00F  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3724  00A988  0012               	return	
  3725  00A98A                     __end_of___aldiv:
  3726                           	opt stack 0
  3727                           tblptru	equ	0xFF8
  3728                           tblptrh	equ	0xFF7
  3729                           tblptrl	equ	0xFF6
  3730                           tablat	equ	0xFF5
  3731                           postinc0	equ	0xFEE
  3732                           wreg	equ	0xFE8
  3733                           postinc2	equ	0xFDE
  3734                           postdec2	equ	0xFDD
  3735                           fsr2h	equ	0xFDA
  3736                           fsr2l	equ	0xFD9
  3737                           status	equ	0xFD8
  3738                           
  3739 ;; *************** function _BMP180calibragem *****************
  3740 ;; Defined at:
  3741 ;;		line 289 in file "main.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  msg            40    0[BANK0 ] unsigned char [40]
  3746 ;; Return value:  Size  Location     Type
  3747 ;;		None               void
  3748 ;; Registers used:
  3749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Totals:         4      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;Total ram usage:       44 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    3
  3762 ;; This function calls:
  3763 ;;		_lerBMP180
  3764 ;;		_putsUSART
  3765 ;;		_sprintf
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text14
  3772  00AAD0                     __ptext14:
  3773                           	opt stack 0
  3774  00AAD0                     _BMP180calibragem:
  3775                           	opt stack 27
  3776                           
  3777                           ;main.c: 291: char msg[40];
  3778                           ;main.c: 293: ac1 = lerBMP180(0xAA);
  3779                           
  3780                           ;incstack = 0
  3781  00AAD0  0EAA               	movlw	170
  3782  00AAD2  ECE9  F053         	call	_lerBMP180
  3783  00AAD6  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3784  00AADA  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3785  00AADE  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3786  00AAE2  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3787  00AAE6  C067  F075         	movff	??_BMP180calibragem,_ac1
  3788  00AAEA  C068  F076         	movff	??_BMP180calibragem+1,_ac1+1
  3789                           
  3790                           ;main.c: 294: ac2 = lerBMP180(0xAC);
  3791  00AAEE  0EAC               	movlw	172
  3792  00AAF0  ECE9  F053         	call	_lerBMP180
  3793  00AAF4  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3794  00AAF8  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3795  00AAFC  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3796  00AB00  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3797  00AB04  C067  F077         	movff	??_BMP180calibragem,_ac2
  3798  00AB08  C068  F078         	movff	??_BMP180calibragem+1,_ac2+1
  3799                           
  3800                           ;main.c: 295: ac3 = lerBMP180(0xAE);
  3801  00AB0C  0EAE               	movlw	174
  3802  00AB0E  ECE9  F053         	call	_lerBMP180
  3803  00AB12  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3804  00AB16  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3805  00AB1A  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3806  00AB1E  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3807  00AB22  C067  F079         	movff	??_BMP180calibragem,_ac3
  3808  00AB26  C068  F07A         	movff	??_BMP180calibragem+1,_ac3+1
  3809                           
  3810                           ;main.c: 296: ac4 = lerBMP180(0xB0);
  3811  00AB2A  0EB0               	movlw	176
  3812  00AB2C  ECE9  F053         	call	_lerBMP180
  3813  00AB30  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3814  00AB34  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3815  00AB38  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3816  00AB3C  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3817  00AB40  C067  F0E9         	movff	??_BMP180calibragem,_ac4
  3818  00AB44  C068  F0EA         	movff	??_BMP180calibragem+1,_ac4+1
  3819                           
  3820                           ;main.c: 297: ac5 = lerBMP180(0xB2);
  3821  00AB48  0EB2               	movlw	178
  3822  00AB4A  ECE9  F053         	call	_lerBMP180
  3823  00AB4E  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3824  00AB52  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3825  00AB56  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3826  00AB5A  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3827  00AB5E  C067  F0EB         	movff	??_BMP180calibragem,_ac5
  3828  00AB62  C068  F0EC         	movff	??_BMP180calibragem+1,_ac5+1
  3829                           
  3830                           ;main.c: 298: ac6 = lerBMP180(0xB4);
  3831  00AB66  0EB4               	movlw	180
  3832  00AB68  ECE9  F053         	call	_lerBMP180
  3833  00AB6C  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3834  00AB70  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3835  00AB74  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3836  00AB78  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3837  00AB7C  C067  F0ED         	movff	??_BMP180calibragem,_ac6
  3838  00AB80  C068  F0EE         	movff	??_BMP180calibragem+1,_ac6+1
  3839                           
  3840                           ;main.c: 299: b1 = lerBMP180(0xB6);
  3841  00AB84  0EB6               	movlw	182
  3842  00AB86  ECE9  F053         	call	_lerBMP180
  3843  00AB8A  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3844  00AB8E  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3845  00AB92  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3846  00AB96  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3847  00AB9A  C067  F07B         	movff	??_BMP180calibragem,_b1
  3848  00AB9E  C068  F07C         	movff	??_BMP180calibragem+1,_b1+1
  3849                           
  3850                           ;main.c: 300: b2 = lerBMP180(0xB8);
  3851  00ABA2  0EB8               	movlw	184
  3852  00ABA4  ECE9  F053         	call	_lerBMP180
  3853  00ABA8  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3854  00ABAC  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3855  00ABB0  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3856  00ABB4  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3857  00ABB8  C067  F07D         	movff	??_BMP180calibragem,_b2
  3858  00ABBC  C068  F07E         	movff	??_BMP180calibragem+1,_b2+1
  3859                           
  3860                           ;main.c: 301: mb = lerBMP180(0xBA);
  3861  00ABC0  0EBA               	movlw	186
  3862  00ABC2  ECE9  F053         	call	_lerBMP180
  3863  00ABC6  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3864  00ABCA  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3865  00ABCE  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3866  00ABD2  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3867  00ABD6  C067  F0EF         	movff	??_BMP180calibragem,_mb
  3868  00ABDA  C068  F0F0         	movff	??_BMP180calibragem+1,_mb+1
  3869                           
  3870                           ;main.c: 302: mc = lerBMP180(0xBC);
  3871  00ABDE  0EBC               	movlw	188
  3872  00ABE0  ECE9  F053         	call	_lerBMP180
  3873  00ABE4  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3874  00ABE8  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3875  00ABEC  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3876  00ABF0  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3877  00ABF4  C067  F0F1         	movff	??_BMP180calibragem,_mc
  3878  00ABF8  C068  F0F2         	movff	??_BMP180calibragem+1,_mc+1
  3879                           
  3880                           ;main.c: 303: md = lerBMP180(0xBE);
  3881  00ABFC  0EBE               	movlw	190
  3882  00ABFE  ECE9  F053         	call	_lerBMP180
  3883  00AC02  C033  F067         	movff	?_lerBMP180,??_BMP180calibragem
  3884  00AC06  C034  F068         	movff	?_lerBMP180+1,??_BMP180calibragem+1
  3885  00AC0A  C035  F069         	movff	?_lerBMP180+2,??_BMP180calibragem+2
  3886  00AC0E  C036  F06A         	movff	?_lerBMP180+3,??_BMP180calibragem+3
  3887  00AC12  C067  F0F3         	movff	??_BMP180calibragem,_md
  3888  00AC16  C068  F0F4         	movff	??_BMP180calibragem+1,_md+1
  3889                           
  3890                           ;main.c: 305: sprintf(msg,"\tAC1 = %d\r\n", ac1); while ((!TXSTAbits.TRMT));putsUSART(ms
      +                          g);
  3891  00AC1A  0100               	movlb	0	; () banked
  3892  00AC1C  0E00               	movlw	high BMP180calibragem@msg
  3893  00AC1E  6E11               	movwf	sprintf@sp+1,c
  3894  00AC20  0100               	movlb	0	; () banked
  3895  00AC22  0E80               	movlw	low BMP180calibragem@msg
  3896  00AC24  6E10               	movwf	sprintf@sp,c
  3897  00AC26  0EBF               	movlw	high STR_11
  3898  00AC28  6E13               	movwf	sprintf@f+1,c
  3899  00AC2A  0E80               	movlw	low STR_11
  3900  00AC2C  6E12               	movwf	sprintf@f,c
  3901  00AC2E  C075  F014         	movff	_ac1,?_sprintf+4
  3902  00AC32  C076  F015         	movff	_ac1+1,?_sprintf+5
  3903  00AC36  EC42  F057         	call	_sprintf	;wreg free
  3904  00AC3A                     l163:
  3905  00AC3A  A2AC               	btfss	4012,1,c	;volatile
  3906  00AC3C  D7FE               	goto	l163
  3907  00AC3E  0100               	movlb	0	; () banked
  3908  00AC40  0E00               	movlw	high BMP180calibragem@msg
  3909  00AC42  6E03               	movwf	putsUSART@data+1,c
  3910  00AC44  0100               	movlb	0	; () banked
  3911  00AC46  0E80               	movlw	low BMP180calibragem@msg
  3912  00AC48  6E02               	movwf	putsUSART@data,c
  3913  00AC4A  ECFA  F051         	call	_putsUSART	;wreg free
  3914                           
  3915                           ;main.c: 307: sprintf(msg,"\tAC2 = %d\r\n", ac2); while ((!TXSTAbits.TRMT));putsUSART(ms
      +                          g);
  3916  00AC4E  0100               	movlb	0	; () banked
  3917  00AC50  0E00               	movlw	high BMP180calibragem@msg
  3918  00AC52  6E11               	movwf	sprintf@sp+1,c
  3919  00AC54  0100               	movlb	0	; () banked
  3920  00AC56  0E80               	movlw	low BMP180calibragem@msg
  3921  00AC58  6E10               	movwf	sprintf@sp,c
  3922  00AC5A  0EBF               	movlw	high STR_12
  3923  00AC5C  6E13               	movwf	sprintf@f+1,c
  3924  00AC5E  0E8C               	movlw	low STR_12
  3925  00AC60  6E12               	movwf	sprintf@f,c
  3926  00AC62  C077  F014         	movff	_ac2,?_sprintf+4
  3927  00AC66  C078  F015         	movff	_ac2+1,?_sprintf+5
  3928  00AC6A  EC42  F057         	call	_sprintf	;wreg free
  3929  00AC6E                     l166:
  3930  00AC6E  A2AC               	btfss	4012,1,c	;volatile
  3931  00AC70  D7FE               	goto	l166
  3932  00AC72  0100               	movlb	0	; () banked
  3933  00AC74  0E00               	movlw	high BMP180calibragem@msg
  3934  00AC76  6E03               	movwf	putsUSART@data+1,c
  3935  00AC78  0100               	movlb	0	; () banked
  3936  00AC7A  0E80               	movlw	low BMP180calibragem@msg
  3937  00AC7C  6E02               	movwf	putsUSART@data,c
  3938  00AC7E  ECFA  F051         	call	_putsUSART	;wreg free
  3939                           
  3940                           ;main.c: 308: sprintf(msg,"\tAC3 = %d\r\n", ac3); while ((!TXSTAbits.TRMT));putsUSART(ms
      +                          g);
  3941  00AC82  0100               	movlb	0	; () banked
  3942  00AC84  0E00               	movlw	high BMP180calibragem@msg
  3943  00AC86  6E11               	movwf	sprintf@sp+1,c
  3944  00AC88  0100               	movlb	0	; () banked
  3945  00AC8A  0E80               	movlw	low BMP180calibragem@msg
  3946  00AC8C  6E10               	movwf	sprintf@sp,c
  3947  00AC8E  0EBF               	movlw	high STR_13
  3948  00AC90  6E13               	movwf	sprintf@f+1,c
  3949  00AC92  0E98               	movlw	low STR_13
  3950  00AC94  6E12               	movwf	sprintf@f,c
  3951  00AC96  C079  F014         	movff	_ac3,?_sprintf+4
  3952  00AC9A  C07A  F015         	movff	_ac3+1,?_sprintf+5
  3953  00AC9E  EC42  F057         	call	_sprintf	;wreg free
  3954  00ACA2                     l169:
  3955  00ACA2  A2AC               	btfss	4012,1,c	;volatile
  3956  00ACA4  D7FE               	goto	l169
  3957  00ACA6  0100               	movlb	0	; () banked
  3958  00ACA8  0E00               	movlw	high BMP180calibragem@msg
  3959  00ACAA  6E03               	movwf	putsUSART@data+1,c
  3960  00ACAC  0100               	movlb	0	; () banked
  3961  00ACAE  0E80               	movlw	low BMP180calibragem@msg
  3962  00ACB0  6E02               	movwf	putsUSART@data,c
  3963  00ACB2  ECFA  F051         	call	_putsUSART	;wreg free
  3964                           
  3965                           ;main.c: 309: sprintf(msg,"\tAC4 = %d\r\n", ac4); while ((!TXSTAbits.TRMT));putsUSART(ms
      +                          g);
  3966  00ACB6  0100               	movlb	0	; () banked
  3967  00ACB8  0E00               	movlw	high BMP180calibragem@msg
  3968  00ACBA  6E11               	movwf	sprintf@sp+1,c
  3969  00ACBC  0100               	movlb	0	; () banked
  3970  00ACBE  0E80               	movlw	low BMP180calibragem@msg
  3971  00ACC0  6E10               	movwf	sprintf@sp,c
  3972  00ACC2  0EBF               	movlw	high STR_14
  3973  00ACC4  6E13               	movwf	sprintf@f+1,c
  3974  00ACC6  0EA4               	movlw	low STR_14
  3975  00ACC8  6E12               	movwf	sprintf@f,c
  3976  00ACCA  C0E9  F014         	movff	_ac4,?_sprintf+4
  3977  00ACCE  C0EA  F015         	movff	_ac4+1,?_sprintf+5
  3978  00ACD2  EC42  F057         	call	_sprintf	;wreg free
  3979  00ACD6                     l172:
  3980  00ACD6  A2AC               	btfss	4012,1,c	;volatile
  3981  00ACD8  D7FE               	goto	l172
  3982  00ACDA  0100               	movlb	0	; () banked
  3983  00ACDC  0E00               	movlw	high BMP180calibragem@msg
  3984  00ACDE  6E03               	movwf	putsUSART@data+1,c
  3985  00ACE0  0100               	movlb	0	; () banked
  3986  00ACE2  0E80               	movlw	low BMP180calibragem@msg
  3987  00ACE4  6E02               	movwf	putsUSART@data,c
  3988  00ACE6  ECFA  F051         	call	_putsUSART	;wreg free
  3989                           
  3990                           ;main.c: 310: sprintf(msg,"\tAC5 = %d\r\n", ac5); while ((!TXSTAbits.TRMT));putsUSART(ms
      +                          g);
  3991  00ACEA  0100               	movlb	0	; () banked
  3992  00ACEC  0E00               	movlw	high BMP180calibragem@msg
  3993  00ACEE  6E11               	movwf	sprintf@sp+1,c
  3994  00ACF0  0100               	movlb	0	; () banked
  3995  00ACF2  0E80               	movlw	low BMP180calibragem@msg
  3996  00ACF4  6E10               	movwf	sprintf@sp,c
  3997  00ACF6  0EBF               	movlw	high STR_15
  3998  00ACF8  6E13               	movwf	sprintf@f+1,c
  3999  00ACFA  0EB0               	movlw	low STR_15
  4000  00ACFC  6E12               	movwf	sprintf@f,c
  4001  00ACFE  C0EB  F014         	movff	_ac5,?_sprintf+4
  4002  00AD02  C0EC  F015         	movff	_ac5+1,?_sprintf+5
  4003  00AD06  EC42  F057         	call	_sprintf	;wreg free
  4004  00AD0A                     l175:
  4005  00AD0A  A2AC               	btfss	4012,1,c	;volatile
  4006  00AD0C  D7FE               	goto	l175
  4007  00AD0E  0100               	movlb	0	; () banked
  4008  00AD10  0E00               	movlw	high BMP180calibragem@msg
  4009  00AD12  6E03               	movwf	putsUSART@data+1,c
  4010  00AD14  0100               	movlb	0	; () banked
  4011  00AD16  0E80               	movlw	low BMP180calibragem@msg
  4012  00AD18  6E02               	movwf	putsUSART@data,c
  4013  00AD1A  ECFA  F051         	call	_putsUSART	;wreg free
  4014                           
  4015                           ;main.c: 311: sprintf(msg,"\tAC6 = %d\r\n", ac6); while ((!TXSTAbits.TRMT));putsUSART(ms
      +                          g);
  4016  00AD1E  0100               	movlb	0	; () banked
  4017  00AD20  0E00               	movlw	high BMP180calibragem@msg
  4018  00AD22  6E11               	movwf	sprintf@sp+1,c
  4019  00AD24  0100               	movlb	0	; () banked
  4020  00AD26  0E80               	movlw	low BMP180calibragem@msg
  4021  00AD28  6E10               	movwf	sprintf@sp,c
  4022  00AD2A  0EBF               	movlw	high STR_16
  4023  00AD2C  6E13               	movwf	sprintf@f+1,c
  4024  00AD2E  0EBC               	movlw	low STR_16
  4025  00AD30  6E12               	movwf	sprintf@f,c
  4026  00AD32  C0ED  F014         	movff	_ac6,?_sprintf+4
  4027  00AD36  C0EE  F015         	movff	_ac6+1,?_sprintf+5
  4028  00AD3A  EC42  F057         	call	_sprintf	;wreg free
  4029  00AD3E                     l178:
  4030  00AD3E  A2AC               	btfss	4012,1,c	;volatile
  4031  00AD40  D7FE               	goto	l178
  4032  00AD42  0100               	movlb	0	; () banked
  4033  00AD44  0E00               	movlw	high BMP180calibragem@msg
  4034  00AD46  6E03               	movwf	putsUSART@data+1,c
  4035  00AD48  0100               	movlb	0	; () banked
  4036  00AD4A  0E80               	movlw	low BMP180calibragem@msg
  4037  00AD4C  6E02               	movwf	putsUSART@data,c
  4038  00AD4E  ECFA  F051         	call	_putsUSART	;wreg free
  4039                           
  4040                           ;main.c: 312: sprintf(msg,"\tB1 = %d\r\n", b1); while ((!TXSTAbits.TRMT));putsUSART(msg);
  4041  00AD52  0100               	movlb	0	; () banked
  4042  00AD54  0E00               	movlw	high BMP180calibragem@msg
  4043  00AD56  6E11               	movwf	sprintf@sp+1,c
  4044  00AD58  0100               	movlb	0	; () banked
  4045  00AD5A  0E80               	movlw	low BMP180calibragem@msg
  4046  00AD5C  6E10               	movwf	sprintf@sp,c
  4047  00AD5E  0EBF               	movlw	high STR_17
  4048  00AD60  6E13               	movwf	sprintf@f+1,c
  4049  00AD62  0EC8               	movlw	low STR_17
  4050  00AD64  6E12               	movwf	sprintf@f,c
  4051  00AD66  C07B  F014         	movff	_b1,?_sprintf+4
  4052  00AD6A  C07C  F015         	movff	_b1+1,?_sprintf+5
  4053  00AD6E  EC42  F057         	call	_sprintf	;wreg free
  4054  00AD72                     l181:
  4055  00AD72  A2AC               	btfss	4012,1,c	;volatile
  4056  00AD74  D7FE               	goto	l181
  4057  00AD76  0100               	movlb	0	; () banked
  4058  00AD78  0E00               	movlw	high BMP180calibragem@msg
  4059  00AD7A  6E03               	movwf	putsUSART@data+1,c
  4060  00AD7C  0100               	movlb	0	; () banked
  4061  00AD7E  0E80               	movlw	low BMP180calibragem@msg
  4062  00AD80  6E02               	movwf	putsUSART@data,c
  4063  00AD82  ECFA  F051         	call	_putsUSART	;wreg free
  4064                           
  4065                           ;main.c: 313: sprintf(msg,"\tB2 = %d\r\n", b2); while ((!TXSTAbits.TRMT));putsUSART(msg);
  4066  00AD86  0100               	movlb	0	; () banked
  4067  00AD88  0E00               	movlw	high BMP180calibragem@msg
  4068  00AD8A  6E11               	movwf	sprintf@sp+1,c
  4069  00AD8C  0100               	movlb	0	; () banked
  4070  00AD8E  0E80               	movlw	low BMP180calibragem@msg
  4071  00AD90  6E10               	movwf	sprintf@sp,c
  4072  00AD92  0EBF               	movlw	high STR_18
  4073  00AD94  6E13               	movwf	sprintf@f+1,c
  4074  00AD96  0ED3               	movlw	low STR_18
  4075  00AD98  6E12               	movwf	sprintf@f,c
  4076  00AD9A  C07D  F014         	movff	_b2,?_sprintf+4
  4077  00AD9E  C07E  F015         	movff	_b2+1,?_sprintf+5
  4078  00ADA2  EC42  F057         	call	_sprintf	;wreg free
  4079  00ADA6                     l184:
  4080  00ADA6  A2AC               	btfss	4012,1,c	;volatile
  4081  00ADA8  D7FE               	goto	l184
  4082  00ADAA  0100               	movlb	0	; () banked
  4083  00ADAC  0E00               	movlw	high BMP180calibragem@msg
  4084  00ADAE  6E03               	movwf	putsUSART@data+1,c
  4085  00ADB0  0100               	movlb	0	; () banked
  4086  00ADB2  0E80               	movlw	low BMP180calibragem@msg
  4087  00ADB4  6E02               	movwf	putsUSART@data,c
  4088  00ADB6  ECFA  F051         	call	_putsUSART	;wreg free
  4089                           
  4090                           ;main.c: 314: sprintf(msg,"\tMB = %d\r\n", mb); while ((!TXSTAbits.TRMT));putsUSART(msg);
  4091  00ADBA  0100               	movlb	0	; () banked
  4092  00ADBC  0E00               	movlw	high BMP180calibragem@msg
  4093  00ADBE  6E11               	movwf	sprintf@sp+1,c
  4094  00ADC0  0100               	movlb	0	; () banked
  4095  00ADC2  0E80               	movlw	low BMP180calibragem@msg
  4096  00ADC4  6E10               	movwf	sprintf@sp,c
  4097  00ADC6  0EBF               	movlw	high STR_19
  4098  00ADC8  6E13               	movwf	sprintf@f+1,c
  4099  00ADCA  0EDE               	movlw	low STR_19
  4100  00ADCC  6E12               	movwf	sprintf@f,c
  4101  00ADCE  C0EF  F014         	movff	_mb,?_sprintf+4
  4102  00ADD2  C0F0  F015         	movff	_mb+1,?_sprintf+5
  4103  00ADD6  EC42  F057         	call	_sprintf	;wreg free
  4104  00ADDA                     l187:
  4105  00ADDA  A2AC               	btfss	4012,1,c	;volatile
  4106  00ADDC  D7FE               	goto	l187
  4107  00ADDE  0100               	movlb	0	; () banked
  4108  00ADE0  0E00               	movlw	high BMP180calibragem@msg
  4109  00ADE2  6E03               	movwf	putsUSART@data+1,c
  4110  00ADE4  0100               	movlb	0	; () banked
  4111  00ADE6  0E80               	movlw	low BMP180calibragem@msg
  4112  00ADE8  6E02               	movwf	putsUSART@data,c
  4113  00ADEA  ECFA  F051         	call	_putsUSART	;wreg free
  4114                           
  4115                           ;main.c: 315: sprintf(msg,"\tMC = %d\r\n", mc); while ((!TXSTAbits.TRMT));putsUSART(msg);
  4116  00ADEE  0100               	movlb	0	; () banked
  4117  00ADF0  0E00               	movlw	high BMP180calibragem@msg
  4118  00ADF2  6E11               	movwf	sprintf@sp+1,c
  4119  00ADF4  0100               	movlb	0	; () banked
  4120  00ADF6  0E80               	movlw	low BMP180calibragem@msg
  4121  00ADF8  6E10               	movwf	sprintf@sp,c
  4122  00ADFA  0EBF               	movlw	high STR_20
  4123  00ADFC  6E13               	movwf	sprintf@f+1,c
  4124  00ADFE  0EE9               	movlw	low STR_20
  4125  00AE00  6E12               	movwf	sprintf@f,c
  4126  00AE02  C0F1  F014         	movff	_mc,?_sprintf+4
  4127  00AE06  C0F2  F015         	movff	_mc+1,?_sprintf+5
  4128  00AE0A  EC42  F057         	call	_sprintf	;wreg free
  4129  00AE0E                     l190:
  4130  00AE0E  A2AC               	btfss	4012,1,c	;volatile
  4131  00AE10  D7FE               	goto	l190
  4132  00AE12  0100               	movlb	0	; () banked
  4133  00AE14  0E00               	movlw	high BMP180calibragem@msg
  4134  00AE16  6E03               	movwf	putsUSART@data+1,c
  4135  00AE18  0100               	movlb	0	; () banked
  4136  00AE1A  0E80               	movlw	low BMP180calibragem@msg
  4137  00AE1C  6E02               	movwf	putsUSART@data,c
  4138  00AE1E  ECFA  F051         	call	_putsUSART	;wreg free
  4139                           
  4140                           ;main.c: 316: sprintf(msg,"\tMD = %d\r\n", md); while ((!TXSTAbits.TRMT));putsUSART(msg);
  4141  00AE22  0100               	movlb	0	; () banked
  4142  00AE24  0E00               	movlw	high BMP180calibragem@msg
  4143  00AE26  6E11               	movwf	sprintf@sp+1,c
  4144  00AE28  0100               	movlb	0	; () banked
  4145  00AE2A  0E80               	movlw	low BMP180calibragem@msg
  4146  00AE2C  6E10               	movwf	sprintf@sp,c
  4147  00AE2E  0EBF               	movlw	high STR_21
  4148  00AE30  6E13               	movwf	sprintf@f+1,c
  4149  00AE32  0EF4               	movlw	low STR_21
  4150  00AE34  6E12               	movwf	sprintf@f,c
  4151  00AE36  C0F3  F014         	movff	_md,?_sprintf+4
  4152  00AE3A  C0F4  F015         	movff	_md+1,?_sprintf+5
  4153  00AE3E  EC42  F057         	call	_sprintf	;wreg free
  4154  00AE42                     l193:
  4155  00AE42  A2AC               	btfss	4012,1,c	;volatile
  4156  00AE44  D7FE               	goto	l193
  4157  00AE46  0100               	movlb	0	; () banked
  4158  00AE48  0E00               	movlw	high BMP180calibragem@msg
  4159  00AE4A  6E03               	movwf	putsUSART@data+1,c
  4160  00AE4C  0100               	movlb	0	; () banked
  4161  00AE4E  0E80               	movlw	low BMP180calibragem@msg
  4162  00AE50  6E02               	movwf	putsUSART@data,c
  4163  00AE52  ECFA  F051         	call	_putsUSART	;wreg free
  4164                           
  4165                           ;main.c: 317: sprintf(msg,"------------------------\r\n"); while ((!TXSTAbits.TRMT));put
      +                          sUSART(msg);
  4166  00AE56  0100               	movlb	0	; () banked
  4167  00AE58  0E00               	movlw	high BMP180calibragem@msg
  4168  00AE5A  6E11               	movwf	sprintf@sp+1,c
  4169  00AE5C  0100               	movlb	0	; () banked
  4170  00AE5E  0E80               	movlw	low BMP180calibragem@msg
  4171  00AE60  6E10               	movwf	sprintf@sp,c
  4172  00AE62  0EBF               	movlw	high STR_22
  4173  00AE64  6E13               	movwf	sprintf@f+1,c
  4174  00AE66  0E19               	movlw	low STR_22
  4175  00AE68  6E12               	movwf	sprintf@f,c
  4176  00AE6A  EC42  F057         	call	_sprintf	;wreg free
  4177  00AE6E                     l196:
  4178  00AE6E  A2AC               	btfss	4012,1,c	;volatile
  4179  00AE70  D7FE               	goto	l196
  4180  00AE72  0100               	movlb	0	; () banked
  4181  00AE74  0E00               	movlw	high BMP180calibragem@msg
  4182  00AE76  6E03               	movwf	putsUSART@data+1,c
  4183  00AE78  0100               	movlb	0	; () banked
  4184  00AE7A  0E80               	movlw	low BMP180calibragem@msg
  4185  00AE7C  6E02               	movwf	putsUSART@data,c
  4186  00AE7E  ECFA  F051         	call	_putsUSART	;wreg free
  4187  00AE82  0012               	return	
  4188  00AE84                     __end_of_BMP180calibragem:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           postinc0	equ	0xFEE
  4195                           wreg	equ	0xFE8
  4196                           postinc2	equ	0xFDE
  4197                           postdec2	equ	0xFDD
  4198                           fsr2h	equ	0xFDA
  4199                           fsr2l	equ	0xFD9
  4200                           status	equ	0xFD8
  4201                           
  4202 ;; *************** function _lerBMP180 *****************
  4203 ;; Defined at:
  4204 ;;		line 142 in file "main.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  endereco        1    wreg     unsigned char 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  endereco        1   95[COMRAM] unsigned char 
  4209 ;;  msg            40   55[COMRAM] unsigned char [40]
  4210 ;;  dado            2  100[COMRAM] unsigned short 
  4211 ;;  lsb             2   98[COMRAM] unsigned short 
  4212 ;;  msb             2   96[COMRAM] unsigned short 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  4   50[COMRAM] long 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4222 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;      Locals:        47       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Totals:        52       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;Total ram usage:       52 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:    2
  4229 ;; This function calls:
  4230 ;;		_ReadI2C
  4231 ;;		_WriteI2C
  4232 ;;		_putsUSART
  4233 ;;		_sprintf
  4234 ;; This function is called by:
  4235 ;;		_lerBMP180temperatura
  4236 ;;		_lerBMP180pressao
  4237 ;;		_BMP180calibragem
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241                           	psect	text15
  4242  00A7D2                     __ptext15:
  4243                           	opt stack 0
  4244  00A7D2                     _lerBMP180:
  4245                           	opt stack 26
  4246                           
  4247                           ;incstack = 0
  4248                           ;lerBMP180@endereco stored from wreg
  4249  00A7D2  CFE8 F060          	movff	wreg,lerBMP180@endereco
  4250                           
  4251                           ;main.c: 144: unsigned short msb, lsb, dado;
  4252                           ;main.c: 145: char msg[40];
  4253                           ;main.c: 147: SSPCON2bits.SEN=1;while(SSPCON2bits.SEN);
  4254  00A7D6  80C5               	bsf	4037,0,c	;volatile
  4255  00A7D8                     l99:
  4256  00A7D8  B0C5               	btfsc	4037,0,c	;volatile
  4257  00A7DA  D7FE               	goto	l99
  4258                           
  4259                           ;main.c: 148: WriteI2C(0xEE );
  4260  00A7DC  0EEE               	movlw	238
  4261  00A7DE  EC3E  F053         	call	_WriteI2C
  4262                           
  4263                           ;main.c: 150: WriteI2C(endereco);
  4264  00A7E2  5060               	movf	lerBMP180@endereco,w,c
  4265  00A7E4  EC3E  F053         	call	_WriteI2C
  4266                           
  4267                           ;main.c: 155: SSPCON2bits.RSEN=1;while(SSPCON2bits.RSEN);
  4268  00A7E8  82C5               	bsf	4037,1,c	;volatile
  4269  00A7EA                     l102:
  4270  00A7EA  B2C5               	btfsc	4037,1,c	;volatile
  4271  00A7EC  D7FE               	goto	l102
  4272                           
  4273                           ;main.c: 156: WriteI2C( 0xEE | 0x01);
  4274  00A7EE  0EEF               	movlw	239
  4275  00A7F0  EC3E  F053         	call	_WriteI2C
  4276                           
  4277                           ;main.c: 158: msb = ReadI2C();
  4278  00A7F4  EC0D  F052         	call	_ReadI2C	;wreg free
  4279  00A7F8  6E37               	movwf	??_lerBMP180& (0+255),c
  4280  00A7FA  5037               	movf	??_lerBMP180,w,c
  4281  00A7FC  6E61               	movwf	lerBMP180@msb,c
  4282  00A7FE  6A62               	clrf	lerBMP180@msb+1,c
  4283                           
  4284                           ;main.c: 159: SSPCON2bits.ACKDT=0;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  4285  00A800  9AC5               	bcf	4037,5,c	;volatile
  4286  00A802  88C5               	bsf	4037,4,c	;volatile
  4287  00A804                     l105:
  4288  00A804  B8C5               	btfsc	4037,4,c	;volatile
  4289  00A806  D7FE               	goto	l105
  4290                           
  4291                           ;main.c: 161: lsb = ReadI2C();
  4292  00A808  EC0D  F052         	call	_ReadI2C	;wreg free
  4293  00A80C  6E37               	movwf	??_lerBMP180& (0+255),c
  4294  00A80E  5037               	movf	??_lerBMP180,w,c
  4295  00A810  6E63               	movwf	lerBMP180@lsb,c
  4296  00A812  6A64               	clrf	lerBMP180@lsb+1,c
  4297                           
  4298                           ;main.c: 162: SSPCON2bits.ACKDT=1;SSPCON2bits.ACKEN=1;while(SSPCON2bits.ACKEN);
  4299  00A814  8AC5               	bsf	4037,5,c	;volatile
  4300  00A816  88C5               	bsf	4037,4,c	;volatile
  4301  00A818                     l108:
  4302  00A818  B8C5               	btfsc	4037,4,c	;volatile
  4303  00A81A  D7FE               	goto	l108
  4304                           
  4305                           ;main.c: 164: SSPCON2bits.PEN=1;while(SSPCON2bits.PEN);
  4306  00A81C  84C5               	bsf	4037,2,c	;volatile
  4307  00A81E                     l111:
  4308  00A81E  B4C5               	btfsc	4037,2,c	;volatile
  4309  00A820  D7FE               	goto	l111
  4310                           
  4311                           ;main.c: 166: dado = msb;
  4312  00A822  C061  F065         	movff	lerBMP180@msb,lerBMP180@dado
  4313  00A826  C062  F066         	movff	lerBMP180@msb+1,lerBMP180@dado+1
  4314                           
  4315                           ;main.c: 167: dado *= 256;
  4316  00A82A  5065               	movf	lerBMP180@dado,w,c
  4317  00A82C  6E66               	movwf	lerBMP180@dado+1,c
  4318  00A82E  6A65               	clrf	lerBMP180@dado,c
  4319                           
  4320                           ;main.c: 168: dado |= lsb;
  4321  00A830  5063               	movf	lerBMP180@lsb,w,c
  4322  00A832  1265               	iorwf	lerBMP180@dado,f,c
  4323  00A834  5064               	movf	lerBMP180@lsb+1,w,c
  4324  00A836  1266               	iorwf	lerBMP180@dado+1,f,c
  4325                           
  4326                           ;main.c: 169: sprintf(msg,"[0x%x,0x%x=0x%X]", msb, lsb, dado);
  4327  00A838  0E00               	movlw	high lerBMP180@msg
  4328  00A83A  6E11               	movwf	sprintf@sp+1,c
  4329  00A83C  0E38               	movlw	low lerBMP180@msg
  4330  00A83E  6E10               	movwf	sprintf@sp,c
  4331  00A840  0EBF               	movlw	high STR_4
  4332  00A842  6E13               	movwf	sprintf@f+1,c
  4333  00A844  0E6F               	movlw	low STR_4
  4334  00A846  6E12               	movwf	sprintf@f,c
  4335  00A848  C061  F014         	movff	lerBMP180@msb,?_sprintf+4
  4336  00A84C  C062  F015         	movff	lerBMP180@msb+1,?_sprintf+5
  4337  00A850  C063  F016         	movff	lerBMP180@lsb,?_sprintf+6
  4338  00A854  C064  F017         	movff	lerBMP180@lsb+1,?_sprintf+7
  4339  00A858  C065  F018         	movff	lerBMP180@dado,?_sprintf+8
  4340  00A85C  C066  F019         	movff	lerBMP180@dado+1,?_sprintf+9
  4341  00A860  EC42  F057         	call	_sprintf	;wreg free
  4342  00A864                     l114:
  4343  00A864  A2AC               	btfss	4012,1,c	;volatile
  4344  00A866  D7FE               	goto	l114
  4345                           
  4346                           ;main.c: 171: putsUSART(msg);
  4347  00A868  0E00               	movlw	high lerBMP180@msg
  4348  00A86A  6E03               	movwf	putsUSART@data+1,c
  4349  00A86C  0E38               	movlw	low lerBMP180@msg
  4350  00A86E  6E02               	movwf	putsUSART@data,c
  4351  00A870  ECFA  F051         	call	_putsUSART	;wreg free
  4352                           
  4353                           ;main.c: 173: return dado;
  4354  00A874  C065  F033         	movff	lerBMP180@dado,?_lerBMP180
  4355  00A878  C066  F034         	movff	lerBMP180@dado+1,?_lerBMP180+1
  4356  00A87C  6A35               	clrf	?_lerBMP180+2,c
  4357  00A87E  6A36               	clrf	?_lerBMP180+3,c
  4358  00A880  0012               	return	
  4359  00A882                     __end_of_lerBMP180:
  4360                           	opt stack 0
  4361                           tblptru	equ	0xFF8
  4362                           tblptrh	equ	0xFF7
  4363                           tblptrl	equ	0xFF6
  4364                           tablat	equ	0xFF5
  4365                           postinc0	equ	0xFEE
  4366                           wreg	equ	0xFE8
  4367                           postinc2	equ	0xFDE
  4368                           postdec2	equ	0xFDD
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function _sprintf *****************
  4374 ;; Defined at:
  4375 ;;		line 492 in file "/opt/microchip/xc8/v1.30/sources/common/doprnt.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  sp              2   15[COMRAM] PTR unsigned char 
  4378 ;;		 -> BMP180calibragem@msg(40), BMP180conversor@msg(40), lerBMP180@msg(40), main@msg(40), 
  4379 ;;  f               2   17[COMRAM] PTR const unsigned char 
  4380 ;;		 -> STR_22(27), STR_21(11), STR_20(11), STR_19(11), 
  4381 ;;		 -> STR_18(11), STR_17(11), STR_16(12), STR_15(12), 
  4382 ;;		 -> STR_14(12), STR_13(12), STR_12(12), STR_11(12), 
  4383 ;;		 -> STR_10(28), STR_9(27), STR_8(28), STR_7(28), 
  4384 ;;		 -> STR_6(25), STR_5(28), STR_4(17), STR_3(39), 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  idx             1   37[COMRAM] unsigned char 
  4387 ;;  _val            5   41[COMRAM] struct .
  4388 ;;  width           2   46[COMRAM] int 
  4389 ;;  ap              2   38[COMRAM] PTR void [1]
  4390 ;;		 -> ?_sprintf(2), 
  4391 ;;  c               1   49[COMRAM] char 
  4392 ;;  prec            1   48[COMRAM] char 
  4393 ;;  flag            1   40[COMRAM] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  2   15[COMRAM] int 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4403 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;Total ram usage:       35 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:    1
  4410 ;; This function calls:
  4411 ;;		___lwdiv
  4412 ;;		___lwmod
  4413 ;;		___wmul
  4414 ;;		_isdigit
  4415 ;; This function is called by:
  4416 ;;		_main
  4417 ;;		_lerBMP180
  4418 ;;		_BMP180conversor
  4419 ;;		_BMP180calibragem
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text16
  4424  00AE84                     __ptext16:
  4425                           	opt stack 0
  4426  00AE84                     _sprintf:
  4427                           	opt stack 29
  4428                           
  4429                           ;doprnt.c: 494: va_list ap;
  4430                           ;doprnt.c: 499: signed char c;
  4431                           ;doprnt.c: 501: int width;
  4432                           ;doprnt.c: 506: signed char prec;
  4433                           ;doprnt.c: 508: unsigned char flag;
  4434                           ;doprnt.c: 527: union {
  4435                           ;doprnt.c: 528: unsigned int _val;
  4436                           ;doprnt.c: 529: struct {
  4437                           ;doprnt.c: 530: const char * _cp;
  4438                           ;doprnt.c: 531: unsigned _len;
  4439                           ;doprnt.c: 532: } _str;
  4440                           ;doprnt.c: 533: } _val;
  4441                           ;doprnt.c: 542: *ap = __va_start();
  4442                           
  4443                           ;incstack = 0
  4444  00AE84  0E00               	movlw	high (?_sprintf+4)
  4445  00AE86  6E28               	movwf	sprintf@ap+1,c
  4446  00AE88  0E14               	movlw	low (?_sprintf+4)
  4447  00AE8A  6E27               	movwf	sprintf@ap,c
  4448                           
  4449                           ;doprnt.c: 545: while(c = *f++) {
  4450  00AE8C  D1D4               	goto	l2513
  4451  00AE8E                     l2357:
  4452                           
  4453                           ;doprnt.c: 547: if(c != '%')
  4454  00AE8E  5032               	movf	sprintf@c,w,c
  4455  00AE90  0A25               	xorlw	37
  4456  00AE92  B4D8               	btfsc	status,2,c
  4457  00AE94  D009               	goto	l2363
  4458                           
  4459                           ;doprnt.c: 549: {
  4460                           ;doprnt.c: 550: ((*sp++ = (c)));
  4461  00AE96  C010  FFD9         	movff	sprintf@sp,fsr2l
  4462  00AE9A  C011  FFDA         	movff	sprintf@sp+1,fsr2h
  4463  00AE9E  C032  FFDF         	movff	sprintf@c,indf2
  4464  00AEA2  4A10               	infsnz	sprintf@sp,f,c
  4465  00AEA4  2A11               	incf	sprintf@sp+1,f,c
  4466                           
  4467                           ;doprnt.c: 551: continue;
  4468  00AEA6  D1C7               	goto	l2513
  4469  00AEA8                     l2363:
  4470                           
  4471                           ;doprnt.c: 552: }
  4472                           ;doprnt.c: 555: width = 0;
  4473  00AEA8  0E00               	movlw	0
  4474  00AEAA  6E30               	movwf	sprintf@width+1,c
  4475  00AEAC  0E00               	movlw	0
  4476  00AEAE  6E2F               	movwf	sprintf@width,c
  4477                           
  4478                           ;doprnt.c: 557: flag = 0;
  4479  00AEB0  6E20               	movwf	??_sprintf& (0+255),c
  4480  00AEB2  0E00               	movlw	0
  4481  00AEB4  6E29               	movwf	sprintf@flag,c
  4482  00AEB6  5020               	movf	??_sprintf& (0+255),w,c
  4483                           
  4484                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  4485  00AEB8  C012  FFF6         	movff	sprintf@f,tblptrl
  4486  00AEBC  C013  FFF7         	movff	sprintf@f+1,tblptrh
  4487  00AEC0  0008               	tblrd		*
  4488  00AEC2  50F5               	movf	tablat,w,c
  4489  00AEC4  EC21  F052         	call	_isdigit
  4490  00AEC8  A0D8               	btfss	status,0,c
  4491  00AECA  D032               	goto	l2379
  4492                           
  4493                           ;doprnt.c: 607: width = 0;
  4494  00AECC  0E00               	movlw	0
  4495  00AECE  6E30               	movwf	sprintf@width+1,c
  4496  00AED0  0E00               	movlw	0
  4497  00AED2  6E2F               	movwf	sprintf@width,c
  4498  00AED4                     l2371:
  4499                           
  4500                           ;doprnt.c: 609: width *= 10;
  4501  00AED4  C02F  F001         	movff	sprintf@width,___wmul@multiplier
  4502  00AED8  C030  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  4503  00AEDC  0E00               	movlw	0
  4504  00AEDE  6E04               	movwf	___wmul@multiplicand+1,c
  4505  00AEE0  0E0A               	movlw	10
  4506  00AEE2  6E03               	movwf	___wmul@multiplicand,c
  4507  00AEE4  EC64  F052         	call	___wmul	;wreg free
  4508  00AEE8  C001  F02F         	movff	?___wmul,sprintf@width
  4509  00AEEC  C002  F030         	movff	?___wmul+1,sprintf@width+1
  4510                           
  4511                           ;doprnt.c: 610: width += *f++ - '0';
  4512  00AEF0  0ED0               	movlw	208
  4513  00AEF2  6E20               	movwf	??_sprintf& (0+255),c
  4514  00AEF4  0EFF               	movlw	255
  4515  00AEF6  6E21               	movwf	(??_sprintf+1)& (0+255),c
  4516  00AEF8  C012  FFF6         	movff	sprintf@f,tblptrl
  4517  00AEFC  C013  FFF7         	movff	sprintf@f+1,tblptrh
  4518  00AF00  0008               	tblrd		*
  4519  00AF02  50F5               	movf	tablat,w,c
  4520  00AF04  6E22               	movwf	(??_sprintf+2)& (0+255),c
  4521  00AF06  6A23               	clrf	(??_sprintf+3)& (0+255),c
  4522  00AF08  5020               	movf	??_sprintf,w,c
  4523  00AF0A  2622               	addwf	??_sprintf+2,f,c
  4524  00AF0C  5021               	movf	??_sprintf+1,w,c
  4525  00AF0E  2223               	addwfc	??_sprintf+3,f,c
  4526  00AF10  5022               	movf	??_sprintf+2,w,c
  4527  00AF12  262F               	addwf	sprintf@width,f,c
  4528  00AF14  5023               	movf	??_sprintf+3,w,c
  4529  00AF16  2230               	addwfc	sprintf@width+1,f,c
  4530  00AF18  4A12               	infsnz	sprintf@f,f,c
  4531  00AF1A  2A13               	incf	sprintf@f+1,f,c
  4532                           
  4533                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  4534  00AF1C  C012  FFF6         	movff	sprintf@f,tblptrl
  4535  00AF20  C013  FFF7         	movff	sprintf@f+1,tblptrh
  4536  00AF24  0008               	tblrd		*
  4537  00AF26  50F5               	movf	tablat,w,c
  4538  00AF28  EC21  F052         	call	_isdigit
  4539  00AF2C  B0D8               	btfsc	status,0,c
  4540  00AF2E  D7D2               	goto	l2371
  4541  00AF30                     l2379:
  4542                           
  4543                           ;doprnt.c: 617: }
  4544                           ;doprnt.c: 620: if(*f == '.') {
  4545  00AF30  C012  FFF6         	movff	sprintf@f,tblptrl
  4546  00AF34  C013  FFF7         	movff	sprintf@f+1,tblptrh
  4547  00AF38  0008               	tblrd		*
  4548  00AF3A  50F5               	movf	tablat,w,c
  4549  00AF3C  0A2E               	xorlw	46
  4550  00AF3E  A4D8               	btfss	status,2,c
  4551  00AF40  D021               	goto	l2391
  4552                           
  4553                           ;doprnt.c: 622: f++;
  4554  00AF42  4A12               	infsnz	sprintf@f,f,c
  4555  00AF44  2A13               	incf	sprintf@f+1,f,c
  4556                           
  4557                           ;doprnt.c: 629: {
  4558                           ;doprnt.c: 630: prec = 0;
  4559  00AF46  6E20               	movwf	??_sprintf& (0+255),c
  4560  00AF48  0E00               	movlw	0
  4561  00AF4A  6E31               	movwf	sprintf@prec,c
  4562  00AF4C  5020               	movf	??_sprintf& (0+255),w,c
  4563                           
  4564                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  4565  00AF4E  D00F               	goto	l2389
  4566  00AF50                     l2385:
  4567                           
  4568                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  4569  00AF50  C012  FFF6         	movff	sprintf@f,tblptrl
  4570  00AF54  C013  FFF7         	movff	sprintf@f+1,tblptrh
  4571  00AF58  0008               	tblrd		*
  4572  00AF5A  CFF5 F020          	movff	tablat,??_sprintf
  4573  00AF5E  5031               	movf	sprintf@prec,w,c
  4574  00AF60  0D0A               	mullw	10
  4575  00AF62  50F3               	movf	prodl,w,c
  4576  00AF64  2420               	addwf	??_sprintf,w,c
  4577  00AF66  0FD0               	addlw	208
  4578  00AF68  6E31               	movwf	sprintf@prec,c
  4579  00AF6A  4A12               	infsnz	sprintf@f,f,c
  4580  00AF6C  2A13               	incf	sprintf@f+1,f,c
  4581  00AF6E                     l2389:
  4582  00AF6E  C012  FFF6         	movff	sprintf@f,tblptrl
  4583  00AF72  C013  FFF7         	movff	sprintf@f+1,tblptrh
  4584  00AF76  0008               	tblrd		*
  4585  00AF78  50F5               	movf	tablat,w,c
  4586  00AF7A  EC21  F052         	call	_isdigit
  4587  00AF7E  A0D8               	btfss	status,0,c
  4588  00AF80  D009               	goto	l2397
  4589  00AF82  D7E6               	goto	l2385
  4590  00AF84                     l2391:
  4591                           
  4592                           ;doprnt.c: 635: prec = 0;
  4593  00AF84  6E20               	movwf	??_sprintf& (0+255),c
  4594  00AF86  0E00               	movlw	0
  4595  00AF88  6E31               	movwf	sprintf@prec,c
  4596  00AF8A  5020               	movf	??_sprintf& (0+255),w,c
  4597  00AF8C  D003               	goto	l2397
  4598  00AF8E                     l2393:
  4599                           
  4600                           ;doprnt.c: 723: flag |= 0x20;
  4601  00AF8E  8A29               	bsf	sprintf@flag,5,c
  4602  00AF90                     l233:
  4603                           
  4604                           ;doprnt.c: 730: flag |= 0x80;
  4605  00AF90  8E29               	bsf	sprintf@flag,7,c
  4606                           
  4607                           ;doprnt.c: 732: break;
  4608  00AF92  D01A               	goto	l231
  4609  00AF94                     l2397:
  4610  00AF94  C012  FFF6         	movff	sprintf@f,tblptrl
  4611  00AF98  C013  FFF7         	movff	sprintf@f+1,tblptrh
  4612  00AF9C  4A12               	infsnz	sprintf@f,f,c
  4613  00AF9E  2A13               	incf	sprintf@f+1,f,c
  4614  00AFA0  0008               	tblrd		*
  4615  00AFA2  CFF5 F032          	movff	tablat,sprintf@c
  4616  00AFA6  5032               	movf	sprintf@c& (0+255),w,c
  4617                           
  4618                           ; Switch size 1, requested type "space"
  4619                           ; Number of cases is 5, Range of values is 0 to 120
  4620                           ; switch strategies available:
  4621                           ; Name         Instructions Cycles
  4622                           ; simple_byte           16     9 (average)
  4623                           ;	Chosen strategy is simple_byte
  4624  00AFA8  0A00               	xorlw	0	; case 0
  4625  00AFAA  B4D8               	btfsc	status,2,c
  4626  00AFAC  D14F               	goto	l2515
  4627  00AFAE  0A58               	xorlw	88	; case 88
  4628  00AFB0  B4D8               	btfsc	status,2,c
  4629  00AFB2  D7ED               	goto	l2393
  4630  00AFB4  0A3C               	xorlw	60	; case 100
  4631  00AFB6  B4D8               	btfsc	status,2,c
  4632  00AFB8  D007               	goto	l231
  4633  00AFBA  0A0D               	xorlw	13	; case 105
  4634  00AFBC  B4D8               	btfsc	status,2,c
  4635  00AFBE  D004               	goto	l231
  4636  00AFC0  0A11               	xorlw	17	; case 120
  4637  00AFC2  B4D8               	btfsc	status,2,c
  4638  00AFC4  D7E5               	goto	l233
  4639  00AFC6  D137               	goto	l2513
  4640  00AFC8                     l231:
  4641                           
  4642                           ;doprnt.c: 1260: if((flag & 0x80) == 0x00)
  4643  00AFC8  BE29               	btfsc	sprintf@flag,7,c
  4644  00AFCA  D01D               	goto	l2409
  4645                           
  4646                           ;doprnt.c: 1262: {
  4647                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4648  00AFCC  C027  FFD9         	movff	sprintf@ap,fsr2l
  4649  00AFD0  C028  FFDA         	movff	sprintf@ap+1,fsr2h
  4650  00AFD4  CFDE F02A          	movff	postinc2,sprintf@_val
  4651  00AFD8  CFDD F02B          	movff	postdec2,sprintf@_val+1
  4652  00AFDC  0E02               	movlw	2
  4653  00AFDE  2627               	addwf	sprintf@ap,f,c
  4654  00AFE0  0E00               	movlw	0
  4655  00AFE2  2228               	addwfc	sprintf@ap+1,f,c
  4656                           
  4657                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  4658  00AFE4  502B               	movf	sprintf@_val+1,w,c
  4659  00AFE6  0A80               	xorlw	128
  4660  00AFE8  6EF3               	movwf	prodl,c
  4661  00AFEA  0E80               	movlw	128
  4662  00AFEC  5CF3               	subwf	prodl,w,c
  4663  00AFEE  0E00               	movlw	0
  4664  00AFF0  B4D8               	btfsc	status,2,c
  4665  00AFF2  5C2A               	subwf	sprintf@_val,w,c
  4666  00AFF4  B0D8               	btfsc	status,0,c
  4667  00AFF6  D013               	goto	l2413
  4668                           
  4669                           ;doprnt.c: 1271: flag |= 0x03;
  4670  00AFF8  0E03               	movlw	3
  4671  00AFFA  1229               	iorwf	sprintf@flag,f,c
  4672                           
  4673                           ;doprnt.c: 1272: _val._val = -_val._val;
  4674  00AFFC  6C2A               	negf	sprintf@_val,c
  4675  00AFFE  1E2B               	comf	sprintf@_val+1,f,c
  4676  00B000  B0D8               	btfsc	status,0,c
  4677  00B002  2A2B               	incf	sprintf@_val+1,f,c
  4678  00B004  D00C               	goto	l2413
  4679  00B006                     l2409:
  4680                           
  4681                           ;doprnt.c: 1277: else
  4682                           ;doprnt.c: 1282: {
  4683                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4684  00B006  C027  FFD9         	movff	sprintf@ap,fsr2l
  4685  00B00A  C028  FFDA         	movff	sprintf@ap+1,fsr2h
  4686  00B00E  CFDE F02A          	movff	postinc2,sprintf@_val
  4687  00B012  CFDD F02B          	movff	postdec2,sprintf@_val+1
  4688  00B016  0E02               	movlw	2
  4689  00B018  2627               	addwf	sprintf@ap,f,c
  4690  00B01A  0E00               	movlw	0
  4691  00B01C  2228               	addwfc	sprintf@ap+1,f,c
  4692  00B01E                     l2413:
  4693                           
  4694                           ;doprnt.c: 1296: }
  4695                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  4696  00B01E  6631               	tstfsz	sprintf@prec,c
  4697  00B020  D042               	goto	l2449
  4698  00B022  502B               	movf	sprintf@_val+1,w,c
  4699  00B024  102A               	iorwf	sprintf@_val,w,c
  4700  00B026  A4D8               	btfss	status,2,c
  4701  00B028  D03E               	goto	l2449
  4702                           
  4703                           ;doprnt.c: 1300: prec++;
  4704  00B02A  2A31               	incf	sprintf@prec,f,c
  4705  00B02C  D03C               	goto	l2449
  4706  00B02E                     l2419:
  4707                           
  4708                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4709  00B02E  6E20               	movwf	??_sprintf& (0+255),c
  4710  00B030  0E01               	movlw	1
  4711  00B032  6E32               	movwf	sprintf@c,c
  4712  00B034  5020               	movf	??_sprintf& (0+255),w,c
  4713  00B036  5032               	movf	sprintf@c,w,c
  4714  00B038  0A05               	xorlw	5
  4715  00B03A  B4D8               	btfsc	status,2,c
  4716  00B03C  D03C               	goto	l2451
  4717                           
  4718                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  4719  00B03E  5032               	movf	sprintf@c,w,c
  4720  00B040  0D02               	mullw	2
  4721  00B042  0E51               	movlw	low _dpowers
  4722  00B044  24F3               	addwf	prodl,w,c
  4723  00B046  6EF6               	movwf	tblptrl,c
  4724  00B048  0EBE               	movlw	high _dpowers
  4725  00B04A  20F4               	addwfc	prodh,w,c
  4726  00B04C  6EF7               	movwf	tblptrh,c
  4727  00B04E  0009               	tblrd		*+
  4728  00B050  CFF5 F020          	movff	tablat,??_sprintf
  4729  00B054  0009               	tblrd		*+
  4730  00B056  CFF5 F021          	movff	tablat,??_sprintf+1
  4731  00B05A  5020               	movf	??_sprintf,w,c
  4732  00B05C  5C2A               	subwf	sprintf@_val,w,c
  4733  00B05E  5021               	movf	??_sprintf+1,w,c
  4734  00B060  582B               	subwfb	sprintf@_val+1,w,c
  4735  00B062  A0D8               	btfss	status,0,c
  4736  00B064  D028               	goto	l2451
  4737                           
  4738                           ;doprnt.c: 1316: break;
  4739  00B066  2A32               	incf	sprintf@c,f,c
  4740  00B068  D7E6               	goto	L1
  4741  00B06A                     l2433:
  4742                           
  4743                           ;doprnt.c: 1325: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4744  00B06A  6E20               	movwf	??_sprintf& (0+255),c
  4745  00B06C  0E01               	movlw	1
  4746  00B06E  6E32               	movwf	sprintf@c,c
  4747  00B070  5020               	movf	??_sprintf& (0+255),w,c
  4748  00B072  5032               	movf	sprintf@c,w,c
  4749  00B074  0A04               	xorlw	4
  4750  00B076  B4D8               	btfsc	status,2,c
  4751  00B078  D01E               	goto	l2451
  4752                           
  4753                           ;doprnt.c: 1326: if(_val._val < hexpowers[c])
  4754  00B07A  5032               	movf	sprintf@c,w,c
  4755  00B07C  0D02               	mullw	2
  4756  00B07E  0E5B               	movlw	low _hexpowers
  4757  00B080  24F3               	addwf	prodl,w,c
  4758  00B082  6EF6               	movwf	tblptrl,c
  4759  00B084  0EBE               	movlw	high _hexpowers
  4760  00B086  20F4               	addwfc	prodh,w,c
  4761  00B088  6EF7               	movwf	tblptrh,c
  4762  00B08A  0009               	tblrd		*+
  4763  00B08C  CFF5 F020          	movff	tablat,??_sprintf
  4764  00B090  0009               	tblrd		*+
  4765  00B092  CFF5 F021          	movff	tablat,??_sprintf+1
  4766  00B096  5020               	movf	??_sprintf,w,c
  4767  00B098  5C2A               	subwf	sprintf@_val,w,c
  4768  00B09A  5021               	movf	??_sprintf+1,w,c
  4769  00B09C  582B               	subwfb	sprintf@_val+1,w,c
  4770  00B09E  A0D8               	btfss	status,0,c
  4771  00B0A0  D00A               	goto	l2451
  4772                           
  4773                           ;doprnt.c: 1327: break;
  4774  00B0A2  2A32               	incf	sprintf@c,f,c
  4775  00B0A4  D7E6               	goto	L2
  4776  00B0A6                     l2449:
  4777  00B0A6  5029               	movf	sprintf@flag,w,c
  4778  00B0A8  0B80               	andlw	128
  4779                           
  4780                           ; Switch size 1, requested type "space"
  4781                           ; Number of cases is 2, Range of values is 0 to 128
  4782                           ; switch strategies available:
  4783                           ; Name         Instructions Cycles
  4784                           ; simple_byte            7     4 (average)
  4785                           ;	Chosen strategy is simple_byte
  4786  00B0AA  0A00               	xorlw	0	; case 0
  4787  00B0AC  B4D8               	btfsc	status,2,c
  4788  00B0AE  D7BF               	goto	l2419
  4789  00B0B0  0A80               	xorlw	128	; case 128
  4790  00B0B2  B4D8               	btfsc	status,2,c
  4791  00B0B4  D7DA               	goto	l2433
  4792  00B0B6                     l2451:
  4793                           
  4794                           ;doprnt.c: 1348: if(c < prec)
  4795  00B0B6  5032               	movf	sprintf@c,w,c
  4796  00B0B8  0A80               	xorlw	128
  4797  00B0BA  6E20               	movwf	??_sprintf& (0+255),c
  4798  00B0BC  5031               	movf	sprintf@prec,w,c
  4799  00B0BE  0A80               	xorlw	128
  4800  00B0C0  5C20               	subwf	??_sprintf,w,c
  4801  00B0C2  B0D8               	btfsc	status,0,c
  4802  00B0C4  D003               	goto	l2455
  4803                           
  4804                           ;doprnt.c: 1349: c = prec;
  4805  00B0C6  C031  F032         	movff	sprintf@prec,sprintf@c
  4806  00B0CA  D009               	goto	l2459
  4807  00B0CC                     l2455:
  4808                           
  4809                           ;doprnt.c: 1350: else if(prec < c)
  4810  00B0CC  5031               	movf	sprintf@prec,w,c
  4811  00B0CE  0A80               	xorlw	128
  4812  00B0D0  6E20               	movwf	??_sprintf& (0+255),c
  4813  00B0D2  5032               	movf	sprintf@c,w,c
  4814  00B0D4  0A80               	xorlw	128
  4815  00B0D6  5C20               	subwf	??_sprintf,w,c
  4816  00B0D8  A0D8               	btfss	status,0,c
  4817                           
  4818                           ;doprnt.c: 1351: prec = c;
  4819  00B0DA  C032  F031         	movff	sprintf@c,sprintf@prec
  4820  00B0DE                     l2459:
  4821                           
  4822                           ;doprnt.c: 1354: if(width && flag & 0x03)
  4823  00B0DE  5030               	movf	sprintf@width+1,w,c
  4824  00B0E0  102F               	iorwf	sprintf@width,w,c
  4825  00B0E2  B4D8               	btfsc	status,2,c
  4826  00B0E4  D009               	goto	l2471
  4827  00B0E6  C029  F020         	movff	sprintf@flag,??_sprintf
  4828  00B0EA  0E03               	movlw	3
  4829  00B0EC  1620               	andwf	??_sprintf,f,c
  4830  00B0EE  B4D8               	btfsc	status,2,c
  4831  00B0F0  D003               	goto	l2471
  4832                           
  4833                           ;doprnt.c: 1355: width--;
  4834  00B0F2  062F               	decf	sprintf@width,f,c
  4835  00B0F4  A0D8               	btfss	status,0,c
  4836  00B0F6  0630               	decf	sprintf@width+1,f,c
  4837  00B0F8                     l2471:
  4838                           
  4839                           ;doprnt.c: 1362: }
  4840                           ;doprnt.c: 1390: if(width > c)
  4841  00B0F8  0E80               	movlw	128
  4842  00B0FA  BE32               	btfsc	sprintf@c,7,c
  4843  00B0FC  0E7F               	movlw	127
  4844  00B0FE  6E20               	movwf	??_sprintf& (0+255),c
  4845  00B100  502F               	movf	sprintf@width,w,c
  4846  00B102  5C32               	subwf	sprintf@c,w,c
  4847  00B104  5030               	movf	sprintf@width+1,w,c
  4848  00B106  0A80               	xorlw	128
  4849  00B108  5820               	subwfb	??_sprintf& (0+255),w,c
  4850  00B10A  B0D8               	btfsc	status,0,c
  4851  00B10C  D007               	goto	l2475
  4852                           
  4853                           ;doprnt.c: 1391: width -= c;
  4854  00B10E  5032               	movf	sprintf@c,w,c
  4855  00B110  5E2F               	subwf	sprintf@width,f,c
  4856  00B112  0E00               	movlw	0
  4857  00B114  BE32               	btfsc	sprintf@c,7,c
  4858  00B116  0EFF               	movlw	255
  4859  00B118  5A30               	subwfb	sprintf@width+1,f,c
  4860  00B11A  D004               	goto	l2477
  4861  00B11C                     l2475:
  4862                           
  4863                           ;doprnt.c: 1392: else
  4864                           ;doprnt.c: 1393: width = 0;
  4865  00B11C  0E00               	movlw	0
  4866  00B11E  6E30               	movwf	sprintf@width+1,c
  4867  00B120  0E00               	movlw	0
  4868  00B122  6E2F               	movwf	sprintf@width,c
  4869  00B124                     l2477:
  4870                           
  4871                           ;doprnt.c: 1431: {
  4872                           ;doprnt.c: 1433: if(width
  4873                           ;doprnt.c: 1437: )
  4874  00B124  5030               	movf	sprintf@width+1,w,c
  4875  00B126  102F               	iorwf	sprintf@width,w,c
  4876  00B128  B4D8               	btfsc	status,2,c
  4877  00B12A  D00F               	goto	l2485
  4878  00B12C                     l2479:
  4879                           
  4880                           ;doprnt.c: 1439: ((*sp++ = (' ')));
  4881  00B12C  C010  FFD9         	movff	sprintf@sp,fsr2l
  4882  00B130  C011  FFDA         	movff	sprintf@sp+1,fsr2h
  4883  00B134  0E20               	movlw	32
  4884  00B136  6EDF               	movwf	indf2,c
  4885  00B138  4A10               	infsnz	sprintf@sp,f,c
  4886  00B13A  2A11               	incf	sprintf@sp+1,f,c
  4887                           
  4888                           ;doprnt.c: 1440: while(--width);
  4889  00B13C  062F               	decf	sprintf@width,f,c
  4890  00B13E  A0D8               	btfss	status,0,c
  4891  00B140  0630               	decf	sprintf@width+1,f,c
  4892  00B142  5030               	movf	(sprintf@width+1)& (0+255),w,c
  4893  00B144  102F               	iorwf	sprintf@width& (0+255),w,c
  4894  00B146  A4D8               	btfss	status,2,c
  4895  00B148  D7F1               	goto	l2479
  4896  00B14A                     l2485:
  4897                           
  4898                           ;doprnt.c: 1447: if(flag & 0x03)
  4899  00B14A  C029  F020         	movff	sprintf@flag,??_sprintf
  4900  00B14E  0E03               	movlw	3
  4901  00B150  1620               	andwf	??_sprintf,f,c
  4902  00B152  B4D8               	btfsc	status,2,c
  4903  00B154  D06C               	goto	l2511
  4904                           
  4905                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  4906  00B156  C010  FFD9         	movff	sprintf@sp,fsr2l
  4907  00B15A  C011  FFDA         	movff	sprintf@sp+1,fsr2h
  4908  00B15E  0E2D               	movlw	45
  4909  00B160  6EDF               	movwf	indf2,c
  4910  00B162  D063               	goto	L3
  4911  00B164                     l2491:
  4912                           
  4913                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  4914  00B164  5031               	movf	sprintf@prec,w,c
  4915  00B166  0D02               	mullw	2
  4916  00B168  0E51               	movlw	low _dpowers
  4917  00B16A  24F3               	addwf	prodl,w,c
  4918  00B16C  6EF6               	movwf	tblptrl,c
  4919  00B16E  0EBE               	movlw	high _dpowers
  4920  00B170  20F4               	addwfc	prodh,w,c
  4921  00B172  6EF7               	movwf	tblptrh,c
  4922  00B174  0009               	tblrd		*+
  4923  00B176  CFF5 F003          	movff	tablat,___lwdiv@divisor
  4924  00B17A  000A               	tblrd		*-
  4925  00B17C  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  4926  00B180  C02A  F001         	movff	sprintf@_val,___lwdiv@dividend
  4927  00B184  C02B  F002         	movff	sprintf@_val+1,___lwdiv@dividend+1
  4928  00B188  ECE8  F052         	call	___lwdiv	;wreg free
  4929  00B18C  C001  F009         	movff	?___lwdiv,___lwmod@dividend
  4930  00B190  C002  F00A         	movff	?___lwdiv+1,___lwmod@dividend+1
  4931  00B194  0E00               	movlw	0
  4932  00B196  6E0C               	movwf	___lwmod@divisor+1,c
  4933  00B198  0E0A               	movlw	10
  4934  00B19A  6E0B               	movwf	___lwmod@divisor,c
  4935  00B19C  ECC5  F052         	call	___lwmod	;wreg free
  4936  00B1A0  5009               	movf	?___lwmod,w,c
  4937  00B1A2  0F30               	addlw	48
  4938  00B1A4  6E32               	movwf	sprintf@c,c
  4939                           
  4940                           ;doprnt.c: 1500: break;
  4941  00B1A6  D03B               	goto	l2507
  4942  00B1A8                     l2493:
  4943                           
  4944                           ;doprnt.c: 1508: {
  4945                           ;doprnt.c: 1509: unsigned char idx = (_val._val / hexpowers[prec]) & 0xF;
  4946  00B1A8  C02A  F001         	movff	sprintf@_val,___lwdiv@dividend
  4947  00B1AC  C02B  F002         	movff	sprintf@_val+1,___lwdiv@dividend+1
  4948  00B1B0  5031               	movf	sprintf@prec,w,c
  4949  00B1B2  0D02               	mullw	2
  4950  00B1B4  0E5B               	movlw	low _hexpowers
  4951  00B1B6  24F3               	addwf	prodl,w,c
  4952  00B1B8  6EF6               	movwf	tblptrl,c
  4953  00B1BA  0EBE               	movlw	high _hexpowers
  4954  00B1BC  20F4               	addwfc	prodh,w,c
  4955  00B1BE  6EF7               	movwf	tblptrh,c
  4956  00B1C0  0009               	tblrd		*+
  4957  00B1C2  CFF5 F003          	movff	tablat,___lwdiv@divisor
  4958  00B1C6  000A               	tblrd		*-
  4959  00B1C8  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  4960  00B1CC  ECE8  F052         	call	___lwdiv	;wreg free
  4961  00B1D0  5001               	movf	?___lwdiv,w,c
  4962  00B1D2  0B0F               	andlw	15
  4963  00B1D4  6E26               	movwf	sprintf@idx,c
  4964                           
  4965                           ;doprnt.c: 1511: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  4966  00B1D6  BA29               	btfsc	sprintf@flag,5,c
  4967  00B1D8  D004               	goto	l2499
  4968  00B1DA  0EBF               	movlw	high STR_24
  4969  00B1DC  6E25               	movwf	_sprintf$465+1,c
  4970  00B1DE  0E5E               	movlw	low STR_24
  4971  00B1E0  D003               	goto	L4
  4972  00B1E2                     l2499:
  4973  00B1E2  0EBF               	movlw	high STR_23
  4974  00B1E4  6E25               	movwf	_sprintf$465+1,c
  4975  00B1E6  0E4D               	movlw	low STR_23
  4976  00B1E8                     L4:
  4977  00B1E8  6E24               	movwf	_sprintf$465,c
  4978  00B1EA  5026               	movf	sprintf@idx,w,c
  4979  00B1EC  0D01               	mullw	1
  4980  00B1EE  C024  F020         	movff	_sprintf$465,??_sprintf
  4981  00B1F2  C025  F021         	movff	_sprintf$465+1,??_sprintf+1
  4982  00B1F6  50F3               	movf	prodl,w,c
  4983  00B1F8  2620               	addwf	??_sprintf,f,c
  4984  00B1FA  50F4               	movf	prodh,w,c
  4985  00B1FC  2221               	addwfc	??_sprintf+1,f,c
  4986  00B1FE  C020  FFF6         	movff	??_sprintf,tblptrl
  4987  00B202  C021  FFF7         	movff	??_sprintf+1,tblptrh
  4988  00B206  0008               	tblrd		*
  4989  00B208  CFF5 F032          	movff	tablat,sprintf@c
  4990                           
  4991                           ;doprnt.c: 1517: }
  4992                           ;doprnt.c: 1519: break;
  4993  00B20C  D008               	goto	l2507
  4994  00B20E                     l2505:
  4995  00B20E  5029               	movf	sprintf@flag,w,c
  4996  00B210  0B80               	andlw	128
  4997                           
  4998                           ; Switch size 1, requested type "space"
  4999                           ; Number of cases is 2, Range of values is 0 to 128
  5000                           ; switch strategies available:
  5001                           ; Name         Instructions Cycles
  5002                           ; simple_byte            7     4 (average)
  5003                           ;	Chosen strategy is simple_byte
  5004  00B212  0A00               	xorlw	0	; case 0
  5005  00B214  B4D8               	btfsc	status,2,c
  5006  00B216  D7A6               	goto	l2491
  5007  00B218  0A80               	xorlw	128	; case 128
  5008  00B21A  B4D8               	btfsc	status,2,c
  5009  00B21C  D7C5               	goto	l2493
  5010  00B21E                     l2507:
  5011                           
  5012                           ;doprnt.c: 1533: ((*sp++ = (c)));
  5013  00B21E  C010  FFD9         	movff	sprintf@sp,fsr2l
  5014  00B222  C011  FFDA         	movff	sprintf@sp+1,fsr2h
  5015  00B226  C032  FFDF         	movff	sprintf@c,indf2
  5016  00B22A                     L3:
  5017  00B22A  4A10               	infsnz	sprintf@sp,f,c
  5018  00B22C  2A11               	incf	sprintf@sp+1,f,c
  5019  00B22E                     l2511:
  5020  00B22E  0631               	decf	sprintf@prec,f,c
  5021  00B230  2831               	incf	sprintf@prec& (0+255),w,c
  5022  00B232  A4D8               	btfss	status,2,c
  5023  00B234  D7EC               	goto	l2505
  5024  00B236                     l2513:
  5025  00B236  C012  FFF6         	movff	sprintf@f,tblptrl
  5026  00B23A  C013  FFF7         	movff	sprintf@f+1,tblptrh
  5027  00B23E  4A12               	infsnz	sprintf@f,f,c
  5028  00B240  2A13               	incf	sprintf@f+1,f,c
  5029  00B242  0008               	tblrd		*
  5030  00B244  CFF5 F032          	movff	tablat,sprintf@c
  5031  00B248  6632               	tstfsz	sprintf@c& (0+255),c
  5032  00B24A  D621               	goto	l2357
  5033  00B24C                     l2515:
  5034                           
  5035                           ;doprnt.c: 1547: *sp = 0;
  5036  00B24C  C010  FFD9         	movff	sprintf@sp,fsr2l
  5037  00B250  C011  FFDA         	movff	sprintf@sp+1,fsr2h
  5038  00B254  0E00               	movlw	0
  5039  00B256  6EDF               	movwf	indf2,c
  5040                           
  5041                           ;doprnt.c: 1549: return 0;
  5042                           ;	Return value of _sprintf is never used
  5043  00B258  0012               	return	
  5044  00B25A                     __end_of_sprintf:
  5045                           	opt stack 0
  5046                           tblptru	equ	0xFF8
  5047                           tblptrh	equ	0xFF7
  5048                           tblptrl	equ	0xFF6
  5049                           tablat	equ	0xFF5
  5050                           prodh	equ	0xFF4
  5051                           prodl	equ	0xFF3
  5052                           postinc0	equ	0xFEE
  5053                           wreg	equ	0xFE8
  5054                           indf2	equ	0xFDF
  5055                           postinc2	equ	0xFDE
  5056                           postdec2	equ	0xFDD
  5057                           fsr2h	equ	0xFDA
  5058                           fsr2l	equ	0xFD9
  5059                           status	equ	0xFD8
  5060                           
  5061 ;; *************** function _isdigit *****************
  5062 ;; Defined at:
  5063 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/isdigit.c"
  5064 ;; Parameters:    Size  Location     Type
  5065 ;;  c               1    wreg     unsigned char 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;  c               1    2[COMRAM] unsigned char 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;		None               void
  5070 ;; Registers used:
  5071 ;;		wreg, status,2, status,0
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;Total ram usage:        3 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_sprintf
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text17
  5091  00A442                     __ptext17:
  5092                           	opt stack 0
  5093  00A442                     _isdigit:
  5094                           	opt stack 29
  5095                           
  5096                           ;incstack = 0
  5097                           ;isdigit@c stored from wreg
  5098  00A442  CFE8 F003          	movff	wreg,isdigit@c
  5099  00A446  6E01               	movwf	??_isdigit& (0+255),c
  5100  00A448  0E00               	movlw	0
  5101  00A44A  6E02               	movwf	_isdigit$1515,c
  5102  00A44C  5001               	movf	??_isdigit& (0+255),w,c
  5103  00A44E  0E3A               	movlw	58
  5104  00A450  5C03               	subwf	isdigit@c,w,c
  5105  00A452  B0D8               	btfsc	status,0,c
  5106  00A454  D007               	goto	l2145
  5107  00A456  0E2F               	movlw	47
  5108  00A458  6403               	cpfsgt	isdigit@c,c
  5109  00A45A  D004               	goto	l2145
  5110  00A45C  6E01               	movwf	??_isdigit& (0+255),c
  5111  00A45E  0E01               	movlw	1
  5112  00A460  6E02               	movwf	_isdigit$1515,c
  5113  00A462  5001               	movf	??_isdigit& (0+255),w,c
  5114  00A464                     l2145:
  5115  00A464  C002  F001         	movff	_isdigit$1515,??_isdigit
  5116  00A468  3001               	rrcf	??_isdigit,w,c
  5117  00A46A  0012               	return	
  5118  00A46C                     __end_of_isdigit:
  5119                           	opt stack 0
  5120                           tblptru	equ	0xFF8
  5121                           tblptrh	equ	0xFF7
  5122                           tblptrl	equ	0xFF6
  5123                           tablat	equ	0xFF5
  5124                           prodh	equ	0xFF4
  5125                           prodl	equ	0xFF3
  5126                           postinc0	equ	0xFEE
  5127                           wreg	equ	0xFE8
  5128                           indf2	equ	0xFDF
  5129                           postinc2	equ	0xFDE
  5130                           postdec2	equ	0xFDD
  5131                           fsr2h	equ	0xFDA
  5132                           fsr2l	equ	0xFD9
  5133                           status	equ	0xFD8
  5134                           
  5135 ;; *************** function ___wmul *****************
  5136 ;; Defined at:
  5137 ;;		line 4 in file "/opt/microchip/xc8/v1.30/sources/common/wmul.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  multiplier      2    0[COMRAM] unsigned int 
  5140 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  product         2    4[COMRAM] unsigned int 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  2    0[COMRAM] unsigned int 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0, prodl, prodh
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;Total ram usage:        6 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; This function calls:
  5159 ;;		Nothing
  5160 ;; This function is called by:
  5161 ;;		_sprintf
  5162 ;; This function uses a non-reentrant model
  5163 ;;
  5164                           
  5165                           	psect	text18
  5166  00A4C8                     __ptext18:
  5167                           	opt stack 0
  5168  00A4C8                     ___wmul:
  5169                           	opt stack 29
  5170                           
  5171                           ;incstack = 0
  5172  00A4C8  5001               	movf	___wmul@multiplier,w,c
  5173  00A4CA  0203               	mulwf	___wmul@multiplicand,c
  5174  00A4CC  CFF3 F005          	movff	prodl,___wmul@product
  5175  00A4D0  CFF4 F006          	movff	prodh,___wmul@product+1
  5176  00A4D4  5001               	movf	___wmul@multiplier,w,c
  5177  00A4D6  0204               	mulwf	___wmul@multiplicand+1,c
  5178  00A4D8  CFF3 FFF4          	movff	prodl,prodh
  5179  00A4DC  6AF3               	clrf	prodl,c
  5180  00A4DE  50F3               	movf	prodl,w,c
  5181  00A4E0  2605               	addwf	___wmul@product,f,c
  5182  00A4E2  50F4               	movf	prodh,w,c
  5183  00A4E4  2206               	addwfc	___wmul@product+1,f,c
  5184  00A4E6  5002               	movf	___wmul@multiplier+1,w,c
  5185  00A4E8  0203               	mulwf	___wmul@multiplicand,c
  5186  00A4EA  CFF3 FFF4          	movff	prodl,prodh
  5187  00A4EE  6AF3               	clrf	prodl,c
  5188  00A4F0  50F3               	movf	prodl,w,c
  5189  00A4F2  2605               	addwf	___wmul@product,f,c
  5190  00A4F4  50F4               	movf	prodh,w,c
  5191  00A4F6  2206               	addwfc	___wmul@product+1,f,c
  5192  00A4F8  C005  F001         	movff	___wmul@product,?___wmul
  5193  00A4FC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5194  00A500  0012               	return	
  5195  00A502                     __end_of___wmul:
  5196                           	opt stack 0
  5197                           tblptru	equ	0xFF8
  5198                           tblptrh	equ	0xFF7
  5199                           tblptrl	equ	0xFF6
  5200                           tablat	equ	0xFF5
  5201                           prodh	equ	0xFF4
  5202                           prodl	equ	0xFF3
  5203                           postinc0	equ	0xFEE
  5204                           wreg	equ	0xFE8
  5205                           indf2	equ	0xFDF
  5206                           postinc2	equ	0xFDE
  5207                           postdec2	equ	0xFDD
  5208                           fsr2h	equ	0xFDA
  5209                           fsr2l	equ	0xFD9
  5210                           status	equ	0xFD8
  5211                           
  5212 ;; *************** function ___lwmod *****************
  5213 ;; Defined at:
  5214 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/lwmod.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  dividend        2    8[COMRAM] unsigned int 
  5217 ;;  divisor         2   10[COMRAM] unsigned int 
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;  counter         1   13[COMRAM] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2    8[COMRAM] unsigned int 
  5222 ;; Registers used:
  5223 ;;		wreg, status,2, status,0
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;Total ram usage:        6 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_sprintf
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text19
  5243  00A58A                     __ptext19:
  5244                           	opt stack 0
  5245  00A58A                     ___lwmod:
  5246                           	opt stack 29
  5247                           
  5248                           ;incstack = 0
  5249  00A58A  500C               	movf	___lwmod@divisor+1,w,c
  5250  00A58C  100B               	iorwf	___lwmod@divisor,w,c
  5251  00A58E  B4D8               	btfsc	status,2,c
  5252  00A590  D01A               	goto	l937
  5253  00A592  6E0D               	movwf	??___lwmod& (0+255),c
  5254  00A594  0E01               	movlw	1
  5255  00A596  6E0E               	movwf	___lwmod@counter,c
  5256  00A598  500D               	movf	??___lwmod& (0+255),w,c
  5257  00A59A  D004               	goto	l2325
  5258  00A59C                     l2323:
  5259  00A59C  90D8               	bcf	status,0,c
  5260  00A59E  360B               	rlcf	___lwmod@divisor,f,c
  5261  00A5A0  360C               	rlcf	___lwmod@divisor+1,f,c
  5262  00A5A2  2A0E               	incf	___lwmod@counter,f,c
  5263  00A5A4                     l2325:
  5264  00A5A4  AE0C               	btfss	___lwmod@divisor+1,7,c
  5265  00A5A6  D7FA               	goto	l2323
  5266  00A5A8                     l2327:
  5267  00A5A8  500B               	movf	___lwmod@divisor,w,c
  5268  00A5AA  5C09               	subwf	___lwmod@dividend,w,c
  5269  00A5AC  500C               	movf	___lwmod@divisor+1,w,c
  5270  00A5AE  580A               	subwfb	___lwmod@dividend+1,w,c
  5271  00A5B0  A0D8               	btfss	status,0,c
  5272  00A5B2  D004               	goto	l2331
  5273  00A5B4  500B               	movf	___lwmod@divisor,w,c
  5274  00A5B6  5E09               	subwf	___lwmod@dividend,f,c
  5275  00A5B8  500C               	movf	___lwmod@divisor+1,w,c
  5276  00A5BA  5A0A               	subwfb	___lwmod@dividend+1,f,c
  5277  00A5BC                     l2331:
  5278  00A5BC  90D8               	bcf	status,0,c
  5279  00A5BE  320C               	rrcf	___lwmod@divisor+1,f,c
  5280  00A5C0  320B               	rrcf	___lwmod@divisor,f,c
  5281  00A5C2  2E0E               	decfsz	___lwmod@counter,f,c
  5282  00A5C4  D7F1               	goto	l2327
  5283  00A5C6                     l937:
  5284  00A5C6  C009  F009         	movff	___lwmod@dividend,?___lwmod
  5285  00A5CA  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  5286  00A5CE  0012               	return	
  5287  00A5D0                     __end_of___lwmod:
  5288                           	opt stack 0
  5289                           tblptru	equ	0xFF8
  5290                           tblptrh	equ	0xFF7
  5291                           tblptrl	equ	0xFF6
  5292                           tablat	equ	0xFF5
  5293                           prodh	equ	0xFF4
  5294                           prodl	equ	0xFF3
  5295                           postinc0	equ	0xFEE
  5296                           wreg	equ	0xFE8
  5297                           indf2	equ	0xFDF
  5298                           postinc2	equ	0xFDE
  5299                           postdec2	equ	0xFDD
  5300                           fsr2h	equ	0xFDA
  5301                           fsr2l	equ	0xFD9
  5302                           status	equ	0xFD8
  5303                           
  5304 ;; *************** function ___lwdiv *****************
  5305 ;; Defined at:
  5306 ;;		line 8 in file "/opt/microchip/xc8/v1.30/sources/common/lwdiv.c"
  5307 ;; Parameters:    Size  Location     Type
  5308 ;;  dividend        2    0[COMRAM] unsigned int 
  5309 ;;  divisor         2    2[COMRAM] unsigned int 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  quotient        2    5[COMRAM] unsigned int 
  5312 ;;  counter         1    7[COMRAM] unsigned char 
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  2    0[COMRAM] unsigned int 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;Total ram usage:        8 bytes
  5327 ;; Hardware stack levels used:    1
  5328 ;; This function calls:
  5329 ;;		Nothing
  5330 ;; This function is called by:
  5331 ;;		_sprintf
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           	psect	text20
  5336  00A5D0                     __ptext20:
  5337                           	opt stack 0
  5338  00A5D0                     ___lwdiv:
  5339                           	opt stack 29
  5340                           
  5341                           ;incstack = 0
  5342  00A5D0  0E00               	movlw	0
  5343  00A5D2  6E07               	movwf	___lwdiv@quotient+1,c
  5344  00A5D4  0E00               	movlw	0
  5345  00A5D6  6E06               	movwf	___lwdiv@quotient,c
  5346  00A5D8  5004               	movf	___lwdiv@divisor+1,w,c
  5347  00A5DA  1003               	iorwf	___lwdiv@divisor,w,c
  5348  00A5DC  B4D8               	btfsc	status,2,c
  5349  00A5DE  D01E               	goto	l927
  5350  00A5E0  6E05               	movwf	??___lwdiv& (0+255),c
  5351  00A5E2  0E01               	movlw	1
  5352  00A5E4  6E08               	movwf	___lwdiv@counter,c
  5353  00A5E6  5005               	movf	??___lwdiv& (0+255),w,c
  5354  00A5E8  D004               	goto	l2247
  5355  00A5EA                     l2245:
  5356  00A5EA  90D8               	bcf	status,0,c
  5357  00A5EC  3603               	rlcf	___lwdiv@divisor,f,c
  5358  00A5EE  3604               	rlcf	___lwdiv@divisor+1,f,c
  5359  00A5F0  2A08               	incf	___lwdiv@counter,f,c
  5360  00A5F2                     l2247:
  5361  00A5F2  AE04               	btfss	___lwdiv@divisor+1,7,c
  5362  00A5F4  D7FA               	goto	l2245
  5363  00A5F6                     l2249:
  5364  00A5F6  90D8               	bcf	status,0,c
  5365  00A5F8  3606               	rlcf	___lwdiv@quotient,f,c
  5366  00A5FA  3607               	rlcf	___lwdiv@quotient+1,f,c
  5367  00A5FC  5003               	movf	___lwdiv@divisor,w,c
  5368  00A5FE  5C01               	subwf	___lwdiv@dividend,w,c
  5369  00A600  5004               	movf	___lwdiv@divisor+1,w,c
  5370  00A602  5802               	subwfb	___lwdiv@dividend+1,w,c
  5371  00A604  A0D8               	btfss	status,0,c
  5372  00A606  D005               	goto	l2257
  5373  00A608  5003               	movf	___lwdiv@divisor,w,c
  5374  00A60A  5E01               	subwf	___lwdiv@dividend,f,c
  5375  00A60C  5004               	movf	___lwdiv@divisor+1,w,c
  5376  00A60E  5A02               	subwfb	___lwdiv@dividend+1,f,c
  5377  00A610  8006               	bsf	___lwdiv@quotient,0,c
  5378  00A612                     l2257:
  5379  00A612  90D8               	bcf	status,0,c
  5380  00A614  3204               	rrcf	___lwdiv@divisor+1,f,c
  5381  00A616  3203               	rrcf	___lwdiv@divisor,f,c
  5382  00A618  2E08               	decfsz	___lwdiv@counter,f,c
  5383  00A61A  D7ED               	goto	l2249
  5384  00A61C                     l927:
  5385  00A61C  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
  5386  00A620  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5387  00A624  0012               	return	
  5388  00A626                     __end_of___lwdiv:
  5389                           	opt stack 0
  5390                           tblptru	equ	0xFF8
  5391                           tblptrh	equ	0xFF7
  5392                           tblptrl	equ	0xFF6
  5393                           tablat	equ	0xFF5
  5394                           prodh	equ	0xFF4
  5395                           prodl	equ	0xFF3
  5396                           postinc0	equ	0xFEE
  5397                           wreg	equ	0xFE8
  5398                           indf2	equ	0xFDF
  5399                           postinc2	equ	0xFDE
  5400                           postdec2	equ	0xFDD
  5401                           fsr2h	equ	0xFDA
  5402                           fsr2l	equ	0xFD9
  5403                           status	equ	0xFD8
  5404                           
  5405 ;; *************** function _putsUSART *****************
  5406 ;; Defined at:
  5407 ;;		line 14 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uputs.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  data            2    1[COMRAM] PTR unsigned char 
  5410 ;;		 -> BMP180calibragem@msg(40), BMP180conversor@msg(40), lerBMP180@msg(40), main@msg(40), 
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;		None               void
  5415 ;; Registers used:
  5416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5426 ;;Total ram usage:        2 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    1
  5429 ;; This function calls:
  5430 ;;		_WriteUSART
  5431 ;; This function is called by:
  5432 ;;		_main
  5433 ;;		_lerBMP180
  5434 ;;		_BMP180conversor
  5435 ;;		_BMP180calibragem
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text21
  5440  00A3F4                     __ptext21:
  5441                           	opt stack 0
  5442  00A3F4                     _putsUSART:
  5443                           	opt stack 29
  5444  00A3F4                     l327:
  5445  00A3F4  A2AC               	btfss	4012,1,c	;volatile
  5446  00A3F6  D7FE               	goto	l327
  5447  00A3F8  C002  FFD9         	movff	putsUSART@data,fsr2l
  5448  00A3FC  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  5449  00A400  50DF               	movf	indf2,w,c
  5450  00A402  ECB5  F051         	call	_WriteUSART
  5451  00A406  C002  FFD9         	movff	putsUSART@data,fsr2l
  5452  00A40A  C003  FFDA         	movff	putsUSART@data+1,fsr2h
  5453  00A40E  4A02               	infsnz	putsUSART@data,f,c
  5454  00A410  2A03               	incf	putsUSART@data+1,f,c
  5455  00A412  50DF               	movf	indf2,w,c
  5456  00A414  B4D8               	btfsc	status,2,c
  5457  00A416  0012               	return	
  5458  00A418  D7ED               	goto	l327
  5459  00A41A                     __end_of_putsUSART:
  5460                           	opt stack 0
  5461                           tblptru	equ	0xFF8
  5462                           tblptrh	equ	0xFF7
  5463                           tblptrl	equ	0xFF6
  5464                           tablat	equ	0xFF5
  5465                           prodh	equ	0xFF4
  5466                           prodl	equ	0xFF3
  5467                           postinc0	equ	0xFEE
  5468                           wreg	equ	0xFE8
  5469                           indf2	equ	0xFDF
  5470                           postinc2	equ	0xFDE
  5471                           postdec2	equ	0xFDD
  5472                           fsr2h	equ	0xFDA
  5473                           fsr2l	equ	0xFD9
  5474                           status	equ	0xFD8
  5475                           
  5476 ;; *************** function _WriteUSART *****************
  5477 ;; Defined at:
  5478 ;;		line 13 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/USART/uwrite.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  data            1    wreg     unsigned char 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  data            1    0[COMRAM] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;		None               void
  5485 ;; Registers used:
  5486 ;;		wreg
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;Total ram usage:        1 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_putrsUSART
  5502 ;;		_putsUSART
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text22
  5507  00A36A                     __ptext22:
  5508                           	opt stack 0
  5509  00A36A                     _WriteUSART:
  5510                           	opt stack 29
  5511                           
  5512                           ;incstack = 0
  5513                           ;WriteUSART@data stored from wreg
  5514  00A36A  CFE8 F001          	movff	wreg,WriteUSART@data
  5515  00A36E  ACAC               	btfss	4012,6,c	;volatile
  5516  00A370  D003               	goto	l2155
  5517  00A372  90AC               	bcf	4012,0,c	;volatile
  5518  00A374  B27F               	btfsc	_USART_Status,1,c
  5519  00A376  80AC               	bsf	4012,0,c	;volatile
  5520  00A378                     l2155:
  5521  00A378  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  5522  00A37C  0012               	return	
  5523  00A37E                     __end_of_WriteUSART:
  5524                           	opt stack 0
  5525                           tblptru	equ	0xFF8
  5526                           tblptrh	equ	0xFF7
  5527                           tblptrl	equ	0xFF6
  5528                           tablat	equ	0xFF5
  5529                           prodh	equ	0xFF4
  5530                           prodl	equ	0xFF3
  5531                           postinc0	equ	0xFEE
  5532                           wreg	equ	0xFE8
  5533                           indf2	equ	0xFDF
  5534                           postinc2	equ	0xFDE
  5535                           postdec2	equ	0xFDD
  5536                           fsr2h	equ	0xFDA
  5537                           fsr2l	equ	0xFD9
  5538                           status	equ	0xFD8
  5539                           
  5540 ;; *************** function _WriteI2C *****************
  5541 ;; Defined at:
  5542 ;;		line 12 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/i2c/i2c_writ.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  data_out        1    wreg     unsigned char 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  data_out        1    2[COMRAM] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      char 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0, cstack
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;Total ram usage:        2 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; Hardware stack levels required when called:    1
  5563 ;; This function calls:
  5564 ;;		_IdleI2C
  5565 ;; This function is called by:
  5566 ;;		_lerBMP180
  5567 ;;		_lerBMP180temperatura
  5568 ;;		_lerBMP180pressao
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text23
  5573  00A67C                     __ptext23:
  5574                           	opt stack 0
  5575  00A67C                     _WriteI2C:
  5576                           	opt stack 26
  5577                           
  5578                           ;incstack = 0
  5579                           ;WriteI2C@data_out stored from wreg
  5580  00A67C  CFE8 F003          	movff	wreg,WriteI2C@data_out
  5581  00A680  C003  FFC9         	movff	WriteI2C@data_out,4041	;volatile
  5582  00A684  BEC6               	btfsc	4038,7,c	;volatile
  5583  00A686  D02C               	goto	l393
  5584                           
  5585                           ;	Return value of _WriteI2C is never used
  5586  00A688  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5587  00A68C  0E0F               	movlw	15
  5588  00A68E  1602               	andwf	??_WriteI2C,f,c
  5589  00A690  5002               	movf	??_WriteI2C,w,c
  5590  00A692  0A08               	xorlw	8
  5591  00A694  B4D8               	btfsc	status,2,c
  5592  00A696  D00F               	goto	l2307
  5593  00A698  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5594  00A69C  0E0F               	movlw	15
  5595  00A69E  1602               	andwf	??_WriteI2C,f,c
  5596  00A6A0  5002               	movf	??_WriteI2C,w,c
  5597  00A6A2  0A0B               	xorlw	11
  5598  00A6A4  B4D8               	btfsc	status,2,c
  5599  00A6A6  D007               	goto	l2307
  5600  00A6A8  88C6               	bsf	4038,4,c	;volatile
  5601  00A6AA                     l396:
  5602  00A6AA  A69E               	btfss	3998,3,c	;volatile
  5603  00A6AC  D7FE               	goto	l396
  5604  00A6AE  B4C7               	btfsc	4039,2,c	;volatile
  5605  00A6B0  D017               	goto	l393
  5606  00A6B2  50C7               	movf	4039,w,c	;volatile
  5607  00A6B4  D015               	goto	l393
  5608  00A6B6                     l2307:
  5609  00A6B6  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5610  00A6BA  0E0F               	movlw	15
  5611  00A6BC  1602               	andwf	??_WriteI2C,f,c
  5612  00A6BE  5002               	movf	??_WriteI2C,w,c
  5613  00A6C0  0A08               	xorlw	8
  5614  00A6C2  B4D8               	btfsc	status,2,c
  5615  00A6C4  D008               	goto	l405
  5616  00A6C6  CFC6 F002          	movff	4038,??_WriteI2C	;volatile
  5617  00A6CA  0E0F               	movlw	15
  5618  00A6CC  1602               	andwf	??_WriteI2C,f,c
  5619  00A6CE  5002               	movf	??_WriteI2C,w,c
  5620  00A6D0  0A0B               	xorlw	11
  5621  00A6D2  A4D8               	btfss	status,2,c
  5622  00A6D4  D005               	goto	l393
  5623  00A6D6                     l405:
  5624  00A6D6  B0C7               	btfsc	4039,0,c	;volatile
  5625  00A6D8  D7FE               	goto	l405
  5626  00A6DA  ECAD  F051         	call	_IdleI2C	;wreg free
  5627  00A6DE  50C5               	movf	4037,w,c	;volatile
  5628  00A6E0                     l393:
  5629  00A6E0  0012               	return	
  5630  00A6E2                     __end_of_WriteI2C:
  5631                           	opt stack 0
  5632                           tblptru	equ	0xFF8
  5633                           tblptrh	equ	0xFF7
  5634                           tblptrl	equ	0xFF6
  5635                           tablat	equ	0xFF5
  5636                           prodh	equ	0xFF4
  5637                           prodl	equ	0xFF3
  5638                           postinc0	equ	0xFEE
  5639                           wreg	equ	0xFE8
  5640                           indf2	equ	0xFDF
  5641                           postinc2	equ	0xFDE
  5642                           postdec2	equ	0xFDD
  5643                           fsr2h	equ	0xFDA
  5644                           fsr2l	equ	0xFD9
  5645                           status	equ	0xFD8
  5646                           
  5647 ;; *************** function _IdleI2C *****************
  5648 ;; Defined at:
  5649 ;;		line 24 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/i2c/i2c_idle.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;		None               void
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;Total ram usage:        1 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_WriteI2C
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text24
  5677  00A35A                     __ptext24:
  5678                           	opt stack 0
  5679  00A35A                     _IdleI2C:
  5680                           	opt stack 26
  5681  00A35A                     l2159:
  5682  00A35A  CFC5 F001          	movff	4037,??_IdleI2C	;volatile
  5683  00A35E  0E1F               	movlw	31
  5684  00A360  1601               	andwf	??_IdleI2C,f,c
  5685  00A362  B4D8               	btfsc	status,2,c
  5686  00A364  B4C7               	btfsc	4039,2,c	;volatile
  5687  00A366  D7F9               	goto	l2159
  5688  00A368  0012               	return	
  5689  00A36A                     __end_of_IdleI2C:
  5690                           	opt stack 0
  5691                           tblptru	equ	0xFF8
  5692                           tblptrh	equ	0xFF7
  5693                           tblptrl	equ	0xFF6
  5694                           tablat	equ	0xFF5
  5695                           prodh	equ	0xFF4
  5696                           prodl	equ	0xFF3
  5697                           postinc0	equ	0xFEE
  5698                           wreg	equ	0xFE8
  5699                           indf2	equ	0xFDF
  5700                           postinc2	equ	0xFDE
  5701                           postdec2	equ	0xFDD
  5702                           fsr2h	equ	0xFDA
  5703                           fsr2l	equ	0xFD9
  5704                           status	equ	0xFD8
  5705                           
  5706 ;; *************** function _ReadI2C *****************
  5707 ;; Defined at:
  5708 ;;		line 11 in file "/opt/microchip/xc8/v1.30/sources/pic18/plib/i2c/i2c_read.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;		None
  5711 ;; Auto vars:     Size  Location     Type
  5712 ;;		None
  5713 ;; Return value:  Size  Location     Type
  5714 ;;                  1    wreg      unsigned char 
  5715 ;; Registers used:
  5716 ;;		wreg, status,2, status,0
  5717 ;; Tracked objects:
  5718 ;;		On entry : 0/0
  5719 ;;		On exit  : 0/0
  5720 ;;		Unchanged: 0/0
  5721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5726 ;;Total ram usage:        1 bytes
  5727 ;; Hardware stack levels used:    1
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_lerBMP180
  5732 ;; This function uses a non-reentrant model
  5733 ;;
  5734                           
  5735                           	psect	text25
  5736  00A41A                     __ptext25:
  5737                           	opt stack 0
  5738  00A41A                     _ReadI2C:
  5739                           	opt stack 27
  5740                           
  5741                           ;incstack = 0
  5742  00A41A  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  5743  00A41E  0E0F               	movlw	15
  5744  00A420  1601               	andwf	??_ReadI2C,f,c
  5745  00A422  5001               	movf	??_ReadI2C,w,c
  5746  00A424  0A08               	xorlw	8
  5747  00A426  B4D8               	btfsc	status,2,c
  5748  00A428  D007               	goto	l371
  5749  00A42A  CFC6 F001          	movff	4038,??_ReadI2C	;volatile
  5750  00A42E  0E0F               	movlw	15
  5751  00A430  1601               	andwf	??_ReadI2C,f,c
  5752  00A432  5001               	movf	??_ReadI2C,w,c
  5753  00A434  0A0B               	xorlw	11
  5754  00A436  B4D8               	btfsc	status,2,c
  5755  00A438                     l371:
  5756  00A438  86C5               	bsf	4037,3,c	;volatile
  5757  00A43A                     l372:
  5758  00A43A  A0C7               	btfss	4039,0,c	;volatile
  5759  00A43C  D7FE               	goto	l372
  5760  00A43E  50C9               	movf	4041,w,c	;volatile
  5761  00A440  0012               	return	
  5762  00A442                     __end_of_ReadI2C:
  5763                           	opt stack 0
  5764                           tblptru	equ	0xFF8
  5765                           tblptrh	equ	0xFF7
  5766                           tblptrl	equ	0xFF6
  5767                           tablat	equ	0xFF5
  5768                           prodh	equ	0xFF4
  5769                           prodl	equ	0xFF3
  5770                           postinc0	equ	0xFEE
  5771                           wreg	equ	0xFE8
  5772                           indf2	equ	0xFDF
  5773                           postinc2	equ	0xFDE
  5774                           postdec2	equ	0xFDD
  5775                           fsr2h	equ	0xFDA
  5776                           fsr2l	equ	0xFD9
  5777                           status	equ	0xFD8
  5778                           tblptru	equ	0xFF8
  5779                           tblptrh	equ	0xFF7
  5780                           tblptrl	equ	0xFF6
  5781                           tablat	equ	0xFF5
  5782                           prodh	equ	0xFF4
  5783                           prodl	equ	0xFF3
  5784                           postinc0	equ	0xFEE
  5785                           wreg	equ	0xFE8
  5786                           indf2	equ	0xFDF
  5787                           postinc2	equ	0xFDE
  5788                           postdec2	equ	0xFDD
  5789                           fsr2h	equ	0xFDA
  5790                           fsr2l	equ	0xFD9
  5791                           status	equ	0xFD8
  5792                           
  5793                           	psect	rparam
  5794  0000                     tblptru	equ	0xFF8
  5795                           tblptrh	equ	0xFF7
  5796                           tblptrl	equ	0xFF6
  5797                           tablat	equ	0xFF5
  5798                           prodh	equ	0xFF4
  5799                           prodl	equ	0xFF3
  5800                           postinc0	equ	0xFEE
  5801                           wreg	equ	0xFE8
  5802                           indf2	equ	0xFDF
  5803                           postinc2	equ	0xFDE
  5804                           postdec2	equ	0xFDD
  5805                           fsr2h	equ	0xFDA
  5806                           fsr2l	equ	0xFD9
  5807                           status	equ	0xFD8


Data Sizes:
    Strings     412
    Constant    18
    Data        0
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    116     127
    BANK0           128    105     117
    BANK1           256     48      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    putsUSART@data	PTR unsigned char  size(2) Largest target is 40
		 -> BMP180calibragem@msg(BANK0[40]), BMP180conversor@msg(BANK0[40]), lerBMP180@msg(COMRAM[40]), main@msg(BANK1[40]), 

    putrsUSART@data	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_2(CODE[32]), STR_1(CODE[28]), 

    sprintf$465	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_24(CODE[17]), STR_23(CODE[17]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 39
		 -> STR_22(CODE[27]), STR_21(CODE[11]), STR_20(CODE[11]), STR_19(CODE[11]), 
		 -> STR_18(CODE[11]), STR_17(CODE[11]), STR_16(CODE[12]), STR_15(CODE[12]), 
		 -> STR_14(CODE[12]), STR_13(CODE[12]), STR_12(CODE[12]), STR_11(CODE[12]), 
		 -> STR_10(CODE[28]), STR_9(CODE[27]), STR_8(CODE[28]), STR_7(CODE[28]), 
		 -> STR_6(CODE[25]), STR_5(CODE[28]), STR_4(CODE[17]), STR_3(CODE[39]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 40
		 -> BMP180calibragem@msg(BANK0[40]), BMP180conversor@msg(BANK0[40]), lerBMP180@msg(COMRAM[40]), main@msg(BANK1[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S449$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    BMP180conversor@pressao	PTR long  size(2) Largest target is 4
		 -> main@pressao(BANK1[4]), 

    BMP180conversor@temp	PTR long  size(2) Largest target is 4
		 -> main@temperatura(BANK1[4]), 


Critical Paths under _main in COMRAM

    _main->_BMP180conversor
    _putrsUSART->_WriteUSART
    _iniciarI2c->_Delay10KTCYx
    _iniciarI2c->_OpenI2C
    _configuracao_EUSART->_OpenUSART
    _BMP180conversor->_lerBMP180pressao
    _BMP180conversor->_lerBMP180temperatura
    _lerBMP180temperatura->_lerBMP180
    _lerBMP180pressao->_lerBMP180
    _BMP180calibragem->_lerBMP180
    _lerBMP180->_sprintf
    _sprintf->___aldiv
    ___lwmod->___lwdiv
    _putsUSART->_WriteUSART
    _WriteI2C->_IdleI2C

Critical Paths under _main in BANK0

    _main->_BMP180conversor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    48      5   39953
                                            111 COMRAM     5     0      5
                                              0 BANK1     48    48      0
                   _BMP180calibragem
                    _BMP180conversor
                       _Delay10KTCYx
                            ___aldiv
                _configuracao_EUSART
                         _iniciarI2c
                         _putrsUSART
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _putrsUSART                                           2     0      2     172
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (1) _iniciarI2c                                           1     1      0     119
                                              2 COMRAM     1     1      0
                           _CloseI2C
                       _Delay10KTCYx
                            _OpenI2C
 ---------------------------------------------------------------------------------
 (2) _OpenI2C                                              2     1      1      97
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _CloseI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configuracao_EUSART                                  0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     273
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _BMP180conversor                                    113   109      4   21185
                                            107 COMRAM     4     0      4
                                              0 BANK0    105   105      0
                            ___aldiv
                            ___lldiv
                             ___lmul
                   _lerBMP180pressao
               _lerBMP180temperatura
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _lerBMP180temperatura                                 5     1      4    5840
                                            102 COMRAM     5     1      4
                           _WriteI2C
                          _lerBMP180
 ---------------------------------------------------------------------------------
 (2) _lerBMP180pressao                                     5     1      4    5840
                                            102 COMRAM     5     1      4
                           _WriteI2C
                          _lerBMP180
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1444
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     512
                                              0 COMRAM    15     7      8
 ---------------------------------------------------------------------------------
 (1) _BMP180calibragem                                    44    44      0   11939
                                            102 COMRAM     4     4      0
                                              0 BANK0     40    40      0
                          _lerBMP180
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _lerBMP180                                           52    48      4    5818
                                             50 COMRAM    52    48      4
                            _ReadI2C
                           _WriteI2C
                          _putsUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    19     16    4455
                                             15 COMRAM    35    19     16
                            ___aldiv (ARG)
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     265
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     374
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            2     0      2    1126
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _WriteI2C                                             2     2      0      22
                                              1 COMRAM     2     2      0
                            _IdleI2C
 ---------------------------------------------------------------------------------
 (5) _IdleI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ReadI2C                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BMP180calibragem
     _lerBMP180
       _ReadI2C
       _WriteI2C
         _IdleI2C
       _putsUSART
         _WriteUSART
       _sprintf
         ___aldiv (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
           ___lwdiv (ARG)
         ___wmul (ARG)
         _isdigit (ARG)
     _putsUSART
       _WriteUSART
     _sprintf
       ___aldiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
   _BMP180conversor
     ___aldiv
     ___lldiv
     ___lmul
     _lerBMP180pressao
       _WriteI2C
         _IdleI2C
       _lerBMP180
         _ReadI2C
         _WriteI2C
           _IdleI2C
         _putsUSART
           _WriteUSART
         _sprintf
           ___aldiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
           ___wmul (ARG)
           _isdigit (ARG)
     _lerBMP180temperatura
       _WriteI2C
         _IdleI2C
       _lerBMP180
         _ReadI2C
         _WriteI2C
           _IdleI2C
         _putsUSART
           _WriteUSART
         _sprintf
           ___aldiv (ARG)
           ___lwdiv (ARG)
           ___lwmod (ARG)
             ___lwdiv (ARG)
           ___wmul (ARG)
           _isdigit (ARG)
     _putsUSART
       _WriteUSART
     _sprintf
       ___aldiv (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
       ___wmul (ARG)
       _isdigit (ARG)
   _Delay10KTCYx
   ___aldiv
   _configuracao_EUSART
     _OpenUSART
   _iniciarI2c
     _CloseI2C
     _Delay10KTCYx
     _OpenI2C
   _putrsUSART
     _WriteUSART
   _putsUSART
     _WriteUSART
   _sprintf
     ___aldiv (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
       ___lwdiv (ARG)
     ___wmul (ARG)
     _isdigit (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     30      30       7       18.8%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     69      75       5       91.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     74      7F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124      34        0.0%
DATA                 0      0     124       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Apr  1 18:58:30 2014

                  _SSPSTATbits 000FC7                             l81 A9D2                             l84 A9EE  
                           l88 AA7A                             l99 A7D8                             _b1 007B  
                           _b2 007D                             _mb 00EF                             _mc 00F1  
                           _md 00F3            ___wmul@multiplicand 0003                    __CFG_OSC$HS 000000  
                          l102 A7EA                            l111 A81E                            l120 A548  
                          l105 A804                            l114 A864                            l123 A560  
                          l108 A818                            l132 A51C                            l141 B782  
                          l302 A71A                            l231 AFC8                            l303 A71C  
                          l144 B98C                            l304 A726                            l233 AF90  
                          l129 A504                            l305 A728                            l154 BBF4  
                          l138 B666                            l163 AC3A                            l147 BAD8  
                          l307 A74A                            l315 A46C                            l172 ACD6  
                          l405 A6D6                            l181 AD72                            l157 BD4C  
                          l190 AE0E                            l166 AC6E                            l327 A3F4  
                          l175 AD0A                            l184 ADA6                            l193 AE42  
                          l169 ACA2                            l178 AD3E                            l371 A438  
                          l187 ADDA                            l372 A43A                            l196 AE6E  
                          l620 A382                            l393 A6E0                            l298 A706  
                          l396 A6AA                            l927 A61C                            l937 A5C6  
                          l858 A7C0                            _ac1 0075                            _ac2 0077  
                          _ac3 0079                            _ac4 00E9                            _ac5 00EB  
                          _ac6 00ED                            fsr2 000FD9                            wreg 000FE8  
                  _sprintf$465 0024                   __CFG_LVP$OFF 000000                   __CFG_WDT$OFF 000000  
                         l2105 A708                           l2203 A978                           l2213 A64A  
                         l2223 A772                           l2145 A464                           l2225 A77E  
                         l2209 A636                           l2307 A6B6                           l2155 A378  
                         l2331 A5BC                           l2323 A59C                           l2171 A8BE  
                         l2235 A7B2                           l2227 A782                           l2245 A5EA  
                         l2325 A5A4                           l2413 B01E                           l2159 A35A  
                         l2247 A5F2                           l2327 A5A8                           l2511 B22E  
                         l2183 A914                           l2257 A612                           l2249 A5F6  
                         l2505 B20E                           l2433 B06A                           l2409 B006  
                         l2513 B236                           l2185 A920                           l2177 A8EE  
                         l2097 A6FA                           l2507 B21E                           l2451 B0B6  
                         l2419 B02E                           l2515 B24C                           l2371 AED4  
                         l2363 AEA8                           l2195 A954                           l2187 A924  
                         l2357 AE8E                           l2471 B0F8                           l2455 B0CC  
                         l2391 AF84                           l2199 A962                           l2449 B0A6  
                         l2393 AF8E                           l2385 AF50                           l2491 B164  
                         l2475 B11C                           l2459 B0DE                           l2379 AF30  
                         l2493 B1A8                           l2485 B14A                           l2477 B124  
                         l2397 AF94                           l2389 AF6E                           l2479 B12C  
                         l2719 A9FE                           l2499 B1E2                           l2675 BB66  
                         l2677 BBAC                           STR_1 BEE2                           STR_2 BE8A  
                         STR_3 BE63                           STR_4 BF6F                           STR_5 BEAA  
                         STR_6 BF34                           STR_7 BEAA                           STR_8 BEC6  
                         STR_9 BEFE                           u1405 A8A2                           u2205 B444  
                         u2206 B44C                           u1415 A8D6                           u2215 B4E6  
                         u2207 B45E                           u2320 B9FC                           u2216 B4EE  
                         u2305 B91A                           u2225 B54C                           u2217 B500  
                         u2306 B922                           u2226 B554                           u2307 B934  
                         u2235 B5B2                           u2227 B566                           u2236 B5BA  
                         u2325 B9F0                           u2237 B5CC                           u2255 B696  
                         u2265 B728                           u2185 B30C                           u2417 A388  
                         u2266 B730                           u2186 B314                           u2427 BE44  
                         u2267 B742                           u2195 B350                           u2187 B326  
                         u2437 A56A                           u2285 B7D2                           u2286 B7DA  
                         u2447 A526                           u2375 BE06                           u2295 B836  
                         u2287 B7EC                           _PIE1 000F9D                           u2376 BE0E  
                         u2296 B83E                           u2377 BE20                           u2297 B850  
                         _main A98A                           fsr2h 000FDA                           indf2 000FDF  
                         fsr2l 000FD9                    main@pressao 012C                           prodh 000FF4  
                         prodl 000FF3                           start 0000                __end_of_IdleI2C A36A  
              __end_of_ReadI2C A442                __end_of_OpenI2C A3D2               _BMP180calibragem AAD0  
              _BMP180conversor B25A                __end_of___aldiv A98A                          ?_main 0070  
                        STR_10 BEAA                          STR_11 BF80                          STR_20 BFE9  
                        STR_12 BF8C                          STR_21 BFF4                          STR_13 BF98  
                        STR_14 BFA4                          STR_22 BF19                          STR_15 BFB0  
                        STR_23 BF4D                          STR_16 BFBC                          STR_24 BF5E  
                        STR_17 BFC8                          STR_18 BFD3                          STR_19 BFDE  
              __end_of___lldiv A7D2                          _LATC3 007C5B                          _LATC4 007C5C  
              __end_of___lwdiv A626                __end_of___lwmod A5D0                          _RCSTA 000FAB  
                        _SPBRG 000FAF                          _TXREG 000FAD          __size_of_Delay10KTCYx 0018  
                        _TXSTA 000FAC            ___lmul@multiplicand 0005           _lerBMP180temperatura A546  
              __end_of_dpowers BE5B                __end_of_isdigit A46C                          tablat 000FF5  
                        status 000FD8                __end_of_sprintf B25A               __end_of_CloseI2C A35A  
               WriteUSART@data 0001                __initialization A3D2              ?_lerBMP180pressao 0067  
                 __end_of_main AAD0                   _Delay10KTCYx A37E             ??_lerBMP180pressao 006B  
                       ??_main 0075                  __activetblptr 000002          ?_lerBMP180temperatura 0067  
                       _ADCON1 000FC1               __end_of_WriteI2C A6E2                    OpenI2C@slew 0001  
                    ??_IdleI2C 0001                         _SPBRGH 000FB0                         _SSPADD 000FC8  
                       _TRISC0 007CA0                         _TRISC1 007CA1                         _TRISC2 007CA2  
                       _TRISC6 007CA6                         _SSPBUF 000FC9    __end_of_configuracao_EUSART A3B2  
                    ??_ReadI2C 0001                      ??_OpenI2C 0002         BMP180conversor@pressao 006E  
      __end_of_BMP180conversor BE50             __size_of_OpenUSART 006A                         ___lmul A626  
                    ??___aldiv 0009                         ___wmul A4C8                      ??___lldiv 0009  
                    ??___lwdiv 0005                      ??___lwmod 000D                         clear_0 A3D8  
                       clear_1 A3E4                 putrsUSART@data 0002                      ??_isdigit 0001  
                 __mediumconst BE50                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                      ??_sprintf 0020                     __accesstop 0080  
      __end_of__initialization A3EA                     _WriteUSART A36A                 __pcstackCOMRAM 0001  
           __size_of_lerBMP180 00B0         ??_lerBMP180temperatura 006B                      ?_CloseI2C 0001  
            __end_of_OpenUSART A74C                   sprintf@width 002F                     __pbssBANK0 00E9  
     __end_of_BMP180calibragem AE84               ?_BMP180conversor 006C                        ?___lmul 0001  
                      ?___wmul 0001                  putsUSART@data 0002                 ___lmul@product 0009  
                    ?_WriteI2C 0001                     ??_CloseI2C 0001             __size_of_putsUSART 0026  
                      _SSPCON1 000FC6                        _SSPCON2 000FC5                        _SSPSTAT 000FC7  
                      _IdleI2C A35A                        _ReadI2C A41A              __end_of_lerBMP180 A882  
                      _OpenI2C A3B2                     _iniciarI2c A498                        __Hparam 0000  
                      __Lparam 0000                    ?_WriteUSART 0001                        ___aldiv A882  
              __size_of___lmul 0056                        ___lldiv A74C                __size_of___wmul 003A  
                      ___lwdiv A5D0                        ___lwmod A58A                        __pcinit A3D2  
                   ??_WriteI2C 0002                        __ramtop 1000                        __ptext0 A98A  
                      __ptext1 A46C                        __ptext2 A498                        __ptext3 A3B2  
                      __ptext4 A37E                        __ptext5 A356                        __ptext6 A396  
                      __ptext7 A6E2                        __ptext8 B25A                        __ptext9 A546  
            __end_of_hexpowers BE63                        _dpowers BE51                        _isdigit A442  
             ___aldiv@dividend 0001      __size_of_lerBMP180pressao 0044                        _sprintf AE84  
                      main@msg 0100           end_of_initialization A3EA                  __Lmediumconst BE50  
              ___lldiv@divisor 0005                ___lldiv@counter 000E                      _RCSTAbits 000FAB  
             ___aldiv@quotient 000C                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE              __end_of_putsUSART A41A                      _PORTCbits 000F82  
             BMP180conversor@p 00D9                      _TRISCbits 000F94            __size_of_WriteUSART 0014  
                   _putrsUSART A46C                      _TXSTAbits 000FAC                    ?_iniciarI2c 0001  
 __size_of_configuracao_EUSART 001C                 __end_of___lmul A67C                 __end_of___wmul A502  
          start_initialization A3D2               WriteI2C@data_out 0003              __size_of_CloseI2C 0004  
                    _OpenUSART A6E2              ?_BMP180calibragem 0001            BMP180calibragem@msg 0080  
         _BMP180conversor$1874 00C9             ??_BMP180calibragem 0067                       ??___lmul 0009  
                     ??___wmul 0005              lerBMP180@endereco 0060              __size_of_WriteI2C 0066  
                  __pbssCOMRAM 0075                  __pcstackBANK0 0080                  __pcstackBANK1 0100  
             _lerBMP180pressao A502  __size_of_lerBMP180temperatura 0044            __size_of_iniciarI2c 0030  
          __end_of__stringdata BFFF                   _isdigit$1515 0002                       ?_IdleI2C 0001  
                   ?_OpenUSART 0001                    sprintf@_val 002A                    sprintf@flag 0029  
                  sprintf@prec 0031                    ?_putrsUSART 0002                       ?_ReadI2C 0001  
                     ?_OpenI2C 0001                  lerBMP180@dado 0065               ___lwdiv@dividend 0001  
                 ??_WriteUSART 0001                      _lerBMP180 A7D2                  __pmediumconst BE50  
                     ?___aldiv 0001                       ?___lldiv 0001                  ?_Delay10KTCYx 0001  
                     ?___lwdiv 0001                       ?___lwmod 0009       __size_of_BMP180conversor 0BF6  
                     ?_isdigit 0001                      _hexpowers BE5B               ___lwdiv@quotient 0006  
                     ?_sprintf 0010             __end_of_WriteUSART A37E                ___aldiv@divisor 0005  
              ___aldiv@counter 000A                 ___wmul@product 0005                       _PIE1bits 000F9D  
                     _PIR1bits 000F9E                     ?_lerBMP180 0033                 ??_Delay10KTCYx 0001  
                    _putsUSART A3F4                    __stringdata BE63              ___wmul@multiplier 0001  
          __size_of_putrsUSART 002C               Delay10KTCYx@unit 0002                       _CloseI2C A356  
          _configuracao_EUSART A396              ___lmul@multiplier 0001               OpenI2C@sync_mode 0002  
                  ??_OpenUSART 0003               __size_of_IdleI2C 0010                OpenUSART@config 0006  
                 ??_iniciarI2c 0003               __size_of_ReadI2C 0028                       __Hrparam 0000  
             __size_of_OpenI2C 0020                       __Lrparam 0000           ?_configuracao_EUSART 0001  
             __size_of___aldiv 0108               __size_of___lldiv 0086               __size_of___lwdiv 0056  
             __size_of___lwmod 0046                       _WriteI2C A67C                     ?_putsUSART 0002  
                   sprintf@idx 0026               __size_of_isdigit 002A                   lerBMP180@lsb 0063  
                 lerBMP180@msb 0061                   lerBMP180@msg 0038                ___lwdiv@divisor 0003  
              ___lwdiv@counter 0008             __end_of_iniciarI2c A4C8                       __ptext10 A502  
                     __ptext11 A626                       __ptext20 A5D0                       __ptext12 A74C  
                     __ptext21 A3F4                       __ptext13 A882                       __ptext22 A36A  
                     __ptext14 AAD0                       __ptext23 A67C                       __ptext15 A7D2  
                     __ptext24 A35A                       __ptext16 AE84                       __ptext25 A41A  
                     __ptext17 A442                       __ptext18 A4C8                       __ptext19 A58A  
            ??_BMP180conversor 0080               __size_of_sprintf 03D6                  __size_of_main 0146  
     __end_of_lerBMP180pressao A546                    ??_lerBMP180 0037          ??_configuracao_EUSART 0007  
                     main@argc 0070                       main@argv 0072      __size_of_BMP180calibragem 03B4  
              main@temperatura 0128                 OpenUSART@spbrg 0001            BMP180conversor@temp 006C  
                     isdigit@c 0003           __end_of_Delay10KTCYx A396                      sprintf@ap 0027  
                    sprintf@sp 0010               ___lwmod@dividend 0009               ___lldiv@dividend 0001  
                 ??_putrsUSART 0004   __end_of_lerBMP180temperatura A58A             BMP180conversor@msg 0091  
                  ??_putsUSART 0004                       sprintf@c 0032                       sprintf@f 0012  
             ___lldiv@quotient 000A                ___lwmod@divisor 000B             __end_of_putrsUSART A498  
              ___lwmod@counter 000E                   ___aldiv@sign 000B                    _SSPCON1bits 000FC6  
                  _SSPCON2bits 000FC5              BMP180conversor@b3 00C5              BMP180conversor@b4 00CD  
            BMP180conversor@b5 00C1              BMP180conversor@b6 00DD              BMP180conversor@b7 00D1  
            BMP180conversor@x1 00E5              BMP180conversor@x2 00E1              BMP180conversor@x3 00D5  
            BMP180conversor@up 00BD              BMP180conversor@ut 00B9                   _USART_Status 007F  
